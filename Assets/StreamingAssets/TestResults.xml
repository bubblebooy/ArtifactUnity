<?xml version="1.0" encoding="utf-8"?>
<test-run id="2" testcasecount="1983" result="Skipped:Ignored" total="1983" passed="1981" failed="0" inconclusive="0" skipped="2" asserts="0" engine-version="3.5.0.0" clr-version="4.0.30319.42000" start-time="2021-03-06 06:26:31Z" end-time="2021-03-06 06:29:25Z" duration="174.1237249">
  <test-suite type="TestSuite" id="3448" name="Mirror" fullname="Mirror" runstate="Runnable" testcasecount="1983" result="Skipped" label="Ignored" start-time="2021-03-06 06:26:31Z" end-time="2021-03-06 06:29:25Z" duration="174.123725" total="1983" passed="1981" failed="0" inconclusive="0" skipped="2" asserts="0">
    <properties />
    <reason>
      <message><![CDATA[One or more child tests were ignored]]></message>
    </reason>
    <test-suite type="Assembly" id="3451" name="Unity.PerformanceTesting.Editor.dll" fullname="/Users/qwerty/x/dev/project_Mirror/Repository/Library/ScriptAssemblies/Unity.PerformanceTesting.Editor.dll" runstate="Runnable" testcasecount="1" result="Passed" start-time="2021-03-06 06:26:31Z" end-time="2021-03-06 06:26:31Z" duration="0.053001" total="1" passed="1" failed="0" inconclusive="0" skipped="0" asserts="0">
      <properties>
        <property name="_PID" value="33125" />
        <property name="_APPDOMAIN" value="Unity Child Domain" />
      </properties>
      <test-suite type="TestFixture" id="3449" name="EditmodeMetadataCollector" fullname="EditmodeMetadataCollector" classname="EditmodeMetadataCollector" runstate="Runnable" testcasecount="1" result="Passed" start-time="2021-03-06 06:26:31Z" end-time="2021-03-06 06:26:31Z" duration="0.043363" total="1" passed="1" failed="0" inconclusive="0" skipped="0" asserts="0">
        <properties>
          <property name="Category" value="Performance" />
        </properties>
        <test-case id="3450" name="GetPlayerSettingsTest" fullname="EditmodeMetadataCollector.GetPlayerSettingsTest" methodname="GetPlayerSettingsTest" classname="EditmodeMetadataCollector" runstate="Runnable" seed="1065750038" result="Passed" start-time="2021-03-06 06:26:31Z" end-time="2021-03-06 06:26:31Z" duration="0.015458" asserts="0">
          <properties />
          <output><![CDATA[##performancetestruninfo:{"PlayerSystemInfo":{"OperatingSystem":"Mac OS X 10.14.6","DeviceModel":"MacBookPro11,4","DeviceName":"qwertyâ€™s MacBook Pro (2)","ProcessorType":"Intel(R) Core(TM) i7-4770HQ CPU @ 2.20GHz","ProcessorCount":8,"GraphicsDeviceName":"Intel Iris Pro Graphics","SystemMemorySize":16384,"XrModel":"","XrDevice":""},"EditorVersion":{"FullVersion":"2018.4.32f1 (fba45da84107)","DateSeconds":1612970138,"Branch":"2018.4/staging","RevisionValue":16491613},"BuildSettings":{"Platform":"OSXEditor","BuildTarget":"StandaloneOSX","DevelopmentPlayer":false,"AndroidBuildSystem":"Gradle"},"ScreenSettings":{"ScreenWidth":0,"ScreenHeight":0,"ScreenRefreshRate":0,"Fullscreen":false},"QualitySettings":{"Vsync":0,"AntiAliasing":0,"ColorSpace":"","AnisotropicFiltering":"","BlendWeights":""},"PlayerSettings":{"ScriptingBackend":"Mono2x","VrSupported":false,"MtRendering":true,"GraphicsJobs":false,"GpuSkinning":false,"GraphicsApi":"Metal","Batchmode":"False","StereoRenderingPath":"MultiPass","RenderThreadingMode":"MultiThreaded","AndroidMinimumSdkVersion":"AndroidApiLevel16","AndroidTargetSdkVersion":"AndroidApiLevelAuto","EnabledXrTargets":[],"ScriptingRuntimeVersion":"Latest"},"TestSuite":"Editmode","StartTime":1615011991349.7422,"EndTime":0.0,"Results":[]}]]></output>
        </test-case>
      </test-suite>
    </test-suite>
    <test-suite type="Assembly" id="3461" name="Mirror.Tests.Performance.Editor.dll" fullname="/Users/qwerty/x/dev/project_Mirror/Repository/Library/ScriptAssemblies/Mirror.Tests.Performance.Editor.dll" runstate="Runnable" testcasecount="6" result="Passed" start-time="2021-03-06 06:26:31Z" end-time="2021-03-06 06:27:04Z" duration="33.234706" total="6" passed="6" failed="0" inconclusive="0" skipped="0" asserts="0">
      <properties>
        <property name="_PID" value="33125" />
        <property name="_APPDOMAIN" value="Unity Child Domain" />
      </properties>
      <test-suite type="TestSuite" id="3462" name="Mirror" fullname="Mirror" runstate="Runnable" testcasecount="6" result="Passed" start-time="2021-03-06 06:26:31Z" end-time="2021-03-06 06:27:04Z" duration="33.172676" total="6" passed="6" failed="0" inconclusive="0" skipped="0" asserts="0">
        <properties />
        <test-suite type="TestSuite" id="3463" name="Tests" fullname="Mirror.Tests" runstate="Runnable" testcasecount="6" result="Passed" start-time="2021-03-06 06:26:31Z" end-time="2021-03-06 06:27:04Z" duration="33.132691" total="6" passed="6" failed="0" inconclusive="0" skipped="0" asserts="0">
          <properties />
          <test-suite type="TestSuite" id="3464" name="Performance" fullname="Mirror.Tests.Performance" runstate="Runnable" testcasecount="6" result="Passed" start-time="2021-03-06 06:26:31Z" end-time="2021-03-06 06:27:04Z" duration="33.094458" total="6" passed="6" failed="0" inconclusive="0" skipped="0" asserts="0">
            <properties />
            <test-suite type="TestFixture" id="3452" name="NetworkIdentityPerformance" fullname="Mirror.Tests.Performance.NetworkIdentityPerformance" classname="Mirror.Tests.Performance.NetworkIdentityPerformance" runstate="Runnable" testcasecount="2" result="Passed" start-time="2021-03-06 06:26:31Z" end-time="2021-03-06 06:26:33Z" duration="1.626583" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
              <properties>
                <property name="Category" value="Performance" />
                <property name="Category" value="Benchmark" />
              </properties>
              <test-case id="3453" name="NetworkIdentityServerUpdateIsDirty" fullname="Mirror.Tests.Performance.NetworkIdentityPerformance.NetworkIdentityServerUpdateIsDirty" methodname="NetworkIdentityServerUpdateIsDirty" classname="Mirror.Tests.Performance.NetworkIdentityPerformance" runstate="Runnable" seed="480940382" result="Passed" start-time="2021-03-06 06:26:31Z" end-time="2021-03-06 06:26:32Z" duration="1.221166" asserts="0">
                <properties />
                <output><![CDATA[Time Millisecond Median:10.51 Min:9.94 Max:11.51 Avg:10.51 Std:0.25 Zeroes:0 SampleCount: 100 Sum: 1051.09

##performancetestresult:{"TestName":"Mirror.Tests.Performance.NetworkIdentityPerformance.NetworkIdentityServerUpdateIsDirty","TestCategories":["Performance","Benchmark"],"TestVersion":"1","StartTime":1615011991684.2122,"EndTime":1615011992857.8591,"SampleGroups":[{"Definition":{"Name":"Time","SampleUnit":2,"AggregationType":3,"Threshold":0.15,"IncreaseIsBetter":false,"Percentile":0.0,"FailOnBaseline":true},"Samples":[10.3302001953125,10.4827880859375,10.58197021484375,10.76507568359375,10.12420654296875,10.528564453125,10.49041748046875,10.4827880859375,10.345458984375,10.589599609375,10.5438232421875,10.833740234375,10.1776123046875,10.81085205078125,10.7574462890625,10.20050048828125,10.64300537109375,10.50567626953125,10.53619384765625,10.345458984375,10.0555419921875,10.84136962890625,10.38360595703125,10.43701171875,10.3302001953125,10.94818115234375,10.528564453125,10.6201171875,10.13946533203125,11.25335693359375,10.50567626953125,10.09368896484375,10.31494140625,10.6658935546875,10.9100341796875,10.528564453125,10.44464111328125,10.9100341796875,10.3607177734375,9.94110107421875,10.3607177734375,10.772705078125,10.59722900390625,10.44464111328125,10.67352294921875,11.23046875,10.223388671875,10.162353515625,10.5743408203125,10.65826416015625,10.06317138671875,10.31494140625,10.19287109375,11.505126953125,10.6353759765625,10.20050048828125,10.6048583984375,10.58197021484375,10.64300537109375,10.42938232421875,10.55908203125,10.56671142578125,10.43701171875,10.61248779296875,10.6658935546875,10.67352294921875,10.2996826171875,10.59722900390625,10.467529296875,10.41412353515625,10.32257080078125,10.1165771484375,10.73455810546875,10.76507568359375,10.498046875,10.53619384765625,10.7574462890625,10.49041748046875,10.528564453125,10.21575927734375,10.5743408203125,10.406494140625,10.39886474609375,10.47515869140625,10.5133056640625,10.50567626953125,10.47515869140625,10.45989990234375,10.5743408203125,10.68878173828125,10.47515869140625,10.35308837890625,10.93292236328125,10.345458984375,10.38360595703125,10.35308837890625,10.528564453125,10.4217529296875,10.498046875,10.31494140625],"Min":9.94110107421875,"Max":11.505126953125,"Median":10.50567626953125,"Average":10.510940551757813,"StandardDeviation":0.2510098512258873,"PercentileValue":0.0,"Sum":1051.0940551757813,"Zeroes":0,"SampleCount":100}]}
]]></output>
              </test-case>
              <test-case id="3454" name="NetworkIdentityServerUpdateNotDirty" fullname="Mirror.Tests.Performance.NetworkIdentityPerformance.NetworkIdentityServerUpdateNotDirty" methodname="NetworkIdentityServerUpdateNotDirty" classname="Mirror.Tests.Performance.NetworkIdentityPerformance" runstate="Runnable" seed="434650347" result="Passed" start-time="2021-03-06 06:26:32Z" end-time="2021-03-06 06:26:33Z" duration="0.389730" asserts="0">
                <properties />
                <output><![CDATA[Time Millisecond Median:3.11 Min:2.90 Max:3.81 Avg:3.15 Std:0.18 Zeroes:0 SampleCount: 100 Sum: 314.85

##performancetestresult:{"TestName":"Mirror.Tests.Performance.NetworkIdentityPerformance.NetworkIdentityServerUpdateNotDirty","TestCategories":["Performance","Benchmark"],"TestVersion":"1","StartTime":1615011992908.6272,"EndTime":1615011993255.6821,"SampleGroups":[{"Definition":{"Name":"Time","SampleUnit":2,"AggregationType":3,"Threshold":0.15,"IncreaseIsBetter":false,"Percentile":0.0,"FailOnBaseline":true},"Samples":[3.6468505859375,3.1585693359375,3.021240234375,3.27301025390625,3.0975341796875,3.25775146484375,3.0059814453125,2.9296875,3.08990478515625,2.9449462890625,3.1280517578125,3.4637451171875,3.04412841796875,3.1280517578125,3.4332275390625,3.204345703125,3.31878662109375,2.9296875,3.07464599609375,3.21197509765625,2.99072265625,3.27301025390625,3.08990478515625,3.0059814453125,2.9144287109375,3.0517578125,3.265380859375,3.4637451171875,3.0670166015625,3.0975341796875,3.12042236328125,2.95257568359375,3.31878662109375,3.19671630859375,3.0670166015625,2.92205810546875,2.9144287109375,3.25775146484375,2.9296875,2.899169921875,2.9754638671875,3.3416748046875,3.05938720703125,3.30352783203125,2.93731689453125,3.22723388671875,3.021240234375,2.95257568359375,3.47137451171875,3.02886962890625,2.98309326171875,2.98309326171875,3.0517578125,3.4027099609375,3.24249267578125,3.082275390625,3.2196044921875,2.9449462890625,2.9296875,3.33404541015625,3.10516357421875,2.9754638671875,3.0059814453125,3.19671630859375,3.387451171875,2.9296875,3.0059814453125,3.4332275390625,3.10516357421875,3.24249267578125,3.07464599609375,3.082275390625,3.12042236328125,2.960205078125,3.50189208984375,3.34930419921875,3.30352783203125,3.265380859375,3.173828125,3.1280517578125,3.80706787109375,3.27301025390625,3.22723388671875,3.05938720703125,3.0670166015625,3.42559814453125,2.90679931640625,3.01361083984375,2.95257568359375,3.10516357421875,3.24249267578125,3.0517578125,3.12042236328125,3.12042236328125,3.387451171875,3.28826904296875,3.1890869140625,3.4027099609375,3.13568115234375,3.07464599609375],"Min":2.899169921875,"Max":3.80706787109375,"Median":3.10516357421875,"Average":3.14849853515625,"StandardDeviation":0.17867735771337232,"PercentileValue":0.0,"Sum":314.849853515625,"Zeroes":0,"SampleCount":100}]}
]]></output>
              </test-case>
            </test-suite>
            <test-suite type="TestFixture" id="3455" name="NetworkIdentityPerformanceWithMultipleBehaviour" fullname="Mirror.Tests.Performance.NetworkIdentityPerformanceWithMultipleBehaviour" classname="Mirror.Tests.Performance.NetworkIdentityPerformanceWithMultipleBehaviour" runstate="Runnable" testcasecount="2" result="Passed" start-time="2021-03-06 06:26:33Z" end-time="2021-03-06 06:27:00Z" duration="26.731998" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
              <properties>
                <property name="Category" value="Performance" />
                <property name="Category" value="Benchmark" />
              </properties>
              <test-case id="3456" name="ServerUpdateIsDirty" fullname="Mirror.Tests.Performance.NetworkIdentityPerformanceWithMultipleBehaviour.ServerUpdateIsDirty" methodname="ServerUpdateIsDirty" classname="Mirror.Tests.Performance.NetworkIdentityPerformanceWithMultipleBehaviour" runstate="Runnable" seed="466275551" result="Passed" start-time="2021-03-06 06:26:33Z" end-time="2021-03-06 06:26:57Z" duration="24.349188" asserts="0">
                <properties />
                <output><![CDATA[Time Millisecond Median:220.02 Min:218.53 Max:255.30 Avg:221.04 Std:4.39 Zeroes:0 SampleCount: 100 Sum: 22103.59

##performancetestresult:{"TestName":"Mirror.Tests.Performance.NetworkIdentityPerformanceWithMultipleBehaviour.ServerUpdateIsDirty","TestCategories":["Performance","Benchmark"],"TestVersion":"1","StartTime":1615011993314.366,"EndTime":1615012017625.606,"SampleGroups":[{"Definition":{"Name":"Time","SampleUnit":2,"AggregationType":3,"Threshold":0.15,"IncreaseIsBetter":false,"Percentile":0.0,"FailOnBaseline":true},"Samples":[219.96307373046876,219.8944091796875,219.66552734375,218.719482421875,220.75653076171876,218.52874755859376,219.9554443359375,219.6502685546875,220.3521728515625,219.23065185546876,219.207763671875,219.390869140625,219.8486328125,219.91729736328126,222.65625,221.45843505859376,219.0093994140625,223.32763671875,224.98321533203126,227.3101806640625,233.19244384765626,220.5963134765625,220.2606201171875,224.17449951171876,219.512939453125,220.15380859375,219.8028564453125,219.53582763671876,219.77996826171876,219.52056884765626,219.35272216796876,222.08404541015626,219.6502685546875,219.39849853515626,220.35980224609376,224.92218017578126,220.8251953125,220.9930419921875,220.39794921875,219.757080078125,219.93255615234376,219.6197509765625,219.38323974609376,219.15435791015626,220.8709716796875,219.146728515625,220.3369140625,218.83392333984376,220.22247314453126,220.02410888671876,219.2230224609375,220.35980224609376,218.8720703125,255.30242919921876,239.37225341796876,219.757080078125,219.90966796875,219.451904296875,220.64971923828126,220.11566162109376,219.93255615234376,219.4061279296875,220.0164794921875,220.062255859375,221.91619873046876,219.42901611328126,219.07806396484376,220.3521728515625,219.757080078125,220.1690673828125,220.2301025390625,219.66552734375,220.32928466796876,219.4671630859375,219.59686279296876,219.27642822265626,221.86279296875,219.33746337890626,219.6197509765625,221.56524658203126,223.907470703125,219.8333740234375,220.19195556640626,220.11566162109376,220.05462646484376,219.42138671875,219.1925048828125,220.03173828125,222.22137451171876,226.2115478515625,220.977783203125,219.451904296875,219.23065185546876,220.6573486328125,220.26824951171876,221.33636474609376,220.20721435546876,220.5047607421875,220.8251953125,219.24591064453126],"Min":218.52874755859376,"Max":255.30242919921876,"Median":220.0164794921875,"Average":221.03591918945313,"StandardDeviation":4.393238272129404,"PercentileValue":0.0,"Sum":22103.591918945313,"Zeroes":0,"SampleCount":100}]}
]]></output>
              </test-case>
              <test-case id="3457" name="ServerUpdateNotDirty" fullname="Mirror.Tests.Performance.NetworkIdentityPerformanceWithMultipleBehaviour.ServerUpdateNotDirty" methodname="ServerUpdateNotDirty" classname="Mirror.Tests.Performance.NetworkIdentityPerformanceWithMultipleBehaviour" runstate="Runnable" seed="1710424368" result="Passed" start-time="2021-03-06 06:26:57Z" end-time="2021-03-06 06:27:00Z" duration="2.363222" asserts="0">
                <properties />
                <output><![CDATA[Time Millisecond Median:20.97 Min:20.24 Max:24.27 Avg:21.07 Std:0.59 Zeroes:0 SampleCount: 100 Sum: 2106.71

##performancetestresult:{"TestName":"Mirror.Tests.Performance.NetworkIdentityPerformanceWithMultipleBehaviour.ServerUpdateNotDirty","TestCategories":["Performance","Benchmark"],"TestVersion":"1","StartTime":1615012017673.5981,"EndTime":1615012019991.447,"SampleGroups":[{"Definition":{"Name":"Time","SampleUnit":2,"AggregationType":3,"Threshold":0.15,"IncreaseIsBetter":false,"Percentile":0.0,"FailOnBaseline":true},"Samples":[20.8892822265625,20.843505859375,20.89691162109375,20.71380615234375,21.42333984375,21.69036865234375,22.56011962890625,24.26910400390625,23.01788330078125,22.69744873046875,20.75958251953125,20.599365234375,21.03424072265625,21.35467529296875,20.66802978515625,20.965576171875,20.48492431640625,21.49200439453125,21.11053466796875,21.61407470703125,20.59173583984375,21.0723876953125,20.92742919921875,21.4385986328125,20.54595947265625,21.30126953125,20.43914794921875,21.54541015625,21.1944580078125,20.97320556640625,20.42388916015625,21.03424072265625,20.69854736328125,21.11053466796875,20.42388916015625,21.209716796875,20.6298828125,21.3623046875,20.538330078125,21.4080810546875,20.56884765625,20.91217041015625,20.63751220703125,21.24786376953125,20.91217041015625,21.35467529296875,20.80535888671875,21.03424072265625,20.3399658203125,21.06475830078125,20.7061767578125,21.73614501953125,20.24078369140625,21.36993408203125,20.94268798828125,20.92742919921875,20.8740234375,21.05712890625,20.7672119140625,21.1639404296875,20.48492431640625,21.820068359375,20.69854736328125,21.1334228515625,20.44677734375,21.35467529296875,20.8740234375,21.17919921875,20.30181884765625,21.1944580078125,21.1639404296875,20.8740234375,20.72906494140625,21.942138671875,20.98846435546875,21.69036865234375,21.697998046875,21.41571044921875,20.7061767578125,20.74432373046875,20.7061767578125,21.41571044921875,20.782470703125,20.91217041015625,20.3857421875,21.4691162109375,20.62225341796875,21.05712890625,20.43914794921875,21.7742919921875,20.4010009765625,21.270751953125,20.65277099609375,21.2554931640625,20.60699462890625,21.27838134765625,20.904541015625,21.23260498046875,20.46966552734375,21.01898193359375],"Min":20.24078369140625,"Max":24.26910400390625,"Median":20.97320556640625,"Average":21.067123413085939,"StandardDeviation":0.5873530841682785,"PercentileValue":0.0,"Sum":2106.7123413085938,"Zeroes":0,"SampleCount":100}]}
]]></output>
              </test-case>
            </test-suite>
            <test-suite type="TestFixture" id="3458" name="NetworkWriterPerformance" fullname="Mirror.Tests.Performance.NetworkWriterPerformance" classname="Mirror.Tests.Performance.NetworkWriterPerformance" runstate="Runnable" testcasecount="2" result="Passed" start-time="2021-03-06 06:27:00Z" end-time="2021-03-06 06:27:04Z" duration="4.698037" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
              <properties>
                <property name="Category" value="Performance" />
              </properties>
              <test-case id="3459" name="RunWriteInt32" fullname="Mirror.Tests.Performance.NetworkWriterPerformance.RunWriteInt32" methodname="RunWriteInt32" classname="Mirror.Tests.Performance.NetworkWriterPerformance" runstate="Runnable" seed="1461311742" result="Passed" start-time="2021-03-06 06:27:00Z" end-time="2021-03-06 06:27:00Z" duration="0.897318" asserts="0">
                <properties />
                <output><![CDATA[Time Millisecond Median:7.27 Min:6.76 Max:34.27 Avg:8.05 Std:3.90 Zeroes:0 SampleCount: 100 Sum: 804.79

##performancetestresult:{"TestName":"Mirror.Tests.Performance.NetworkWriterPerformance.RunWriteInt32","TestCategories":["Performance"],"TestVersion":"1","StartTime":1615012020047.5872,"EndTime":1615012020927.7432,"SampleGroups":[{"Definition":{"Name":"Time","SampleUnit":2,"AggregationType":3,"Threshold":0.15,"IncreaseIsBetter":false,"Percentile":0.0,"FailOnBaseline":true},"Samples":[7.2021484375,7.51495361328125,7.57598876953125,7.77435302734375,7.2784423828125,7.54547119140625,7.36236572265625,7.68280029296875,7.415771484375,7.56072998046875,7.19451904296875,7.0648193359375,7.40814208984375,22.125244140625,7.27081298828125,6.82830810546875,7.97271728515625,7.0648193359375,7.26318359375,7.476806640625,6.91986083984375,7.2784423828125,7.2021484375,7.415771484375,7.11822509765625,6.93511962890625,7.14874267578125,6.98089599609375,7.7972412109375,7.415771484375,7.46917724609375,7.02667236328125,7.5836181640625,6.79779052734375,7.63702392578125,7.42340087890625,21.76666259765625,7.45391845703125,7.33184814453125,7.232666015625,7.293701171875,6.9122314453125,7.1258544921875,7.53021240234375,7.4462890625,7.27081298828125,7.3699951171875,7.0953369140625,7.10296630859375,7.88116455078125,6.988525390625,7.2174072265625,7.1258544921875,7.2479248046875,7.01141357421875,7.4005126953125,7.1868896484375,7.37762451171875,7.232666015625,27.6947021484375,7.13348388671875,6.98089599609375,7.3089599609375,7.02667236328125,7.48443603515625,7.10296630859375,7.13348388671875,7.2174072265625,7.17926025390625,7.68280029296875,7.2784423828125,7.20977783203125,7.17926025390625,6.7596435546875,7.14874267578125,7.354736328125,7.17926025390625,7.36236572265625,7.2479248046875,7.0343017578125,6.99615478515625,7.8887939453125,34.271240234375,7.22503662109375,7.60650634765625,6.91986083984375,7.171630859375,7.4310302734375,7.66754150390625,7.0953369140625,6.98089599609375,7.53021240234375,7.354736328125,7.232666015625,7.63702392578125,7.3699951171875,7.10296630859375,7.50732421875,6.87408447265625,6.88934326171875],"Min":6.7596435546875,"Max":34.271240234375,"Median":7.27081298828125,"Average":8.047866821289063,"StandardDeviation":3.9022856764760904,"PercentileValue":0.0,"Sum":804.7866821289063,"Zeroes":0,"SampleCount":100}]}
]]></output>
              </test-case>
              <test-case id="3460" name="RunWriteQuaternion" fullname="Mirror.Tests.Performance.NetworkWriterPerformance.RunWriteQuaternion" methodname="RunWriteQuaternion" classname="Mirror.Tests.Performance.NetworkWriterPerformance" runstate="Runnable" seed="1030338048" result="Passed" start-time="2021-03-06 06:27:00Z" end-time="2021-03-06 06:27:04Z" duration="3.782661" asserts="0">
                <properties />
                <output><![CDATA[Time Millisecond Median:31.84 Min:30.67 Max:48.38 Avg:34.29 Std:5.69 Zeroes:0 SampleCount: 100 Sum: 3429.38

##performancetestresult:{"TestName":"Mirror.Tests.Performance.NetworkWriterPerformance.RunWriteQuaternion","TestCategories":["Performance"],"TestVersion":"1","StartTime":1615012020949.9932,"EndTime":1615012024717.3262,"SampleGroups":[{"Definition":{"Name":"Time","SampleUnit":2,"AggregationType":3,"Threshold":0.15,"IncreaseIsBetter":false,"Percentile":0.0,"FailOnBaseline":true},"Samples":[31.646728515625,32.44781494140625,46.20361328125,30.86090087890625,32.17315673828125,32.23419189453125,31.3568115234375,31.45599365234375,45.59326171875,31.27288818359375,31.6925048828125,31.67724609375,31.707763671875,31.05926513671875,47.7142333984375,31.48651123046875,31.59332275390625,31.9671630859375,31.66961669921875,31.27288818359375,46.53167724609375,31.55517578125,31.55517578125,32.09686279296875,30.670166015625,31.6162109375,47.393798828125,31.92901611328125,32.15789794921875,31.646728515625,31.18896484375,31.79931640625,46.89788818359375,31.951904296875,31.86798095703125,32.35626220703125,31.2042236328125,31.54754638671875,46.40960693359375,31.63909912109375,31.9976806640625,31.31866455078125,31.60858154296875,31.83746337890625,47.34039306640625,31.9061279296875,31.8603515625,30.98297119140625,31.73065185546875,32.4249267578125,46.97418212890625,32.93609619140625,32.6080322265625,31.1126708984375,31.76116943359375,31.77642822265625,45.196533203125,31.92138671875,31.5399169921875,31.73065185546875,31.63909912109375,31.9976806640625,46.9818115234375,31.8603515625,31.91375732421875,31.646728515625,31.86798095703125,31.982421875,46.9818115234375,31.59332275390625,30.93719482421875,31.80694580078125,31.50177001953125,31.5399169921875,45.9442138671875,31.77642822265625,31.43310546875,31.9976806640625,31.37969970703125,32.012939453125,45.1507568359375,31.585693359375,31.8145751953125,31.47125244140625,31.9976806640625,31.15081787109375,47.7752685546875,31.86798095703125,31.82220458984375,32.196044921875,32.6385498046875,31.1431884765625,48.37799072265625,32.2265625,32.1807861328125,32.1044921875,32.50885009765625,31.36444091796875,48.126220703125,31.4178466796875],"Min":30.670166015625,"Max":48.37799072265625,"Median":31.83746337890625,"Average":34.2938232421875,"StandardDeviation":5.685426434584756,"PercentileValue":0.0,"Sum":3429.38232421875,"Zeroes":0,"SampleCount":100}]}
]]></output>
              </test-case>
            </test-suite>
          </test-suite>
        </test-suite>
      </test-suite>
    </test-suite>
    <test-suite type="Assembly" id="5879" name="Mirror.Tests.dll" fullname="/Users/qwerty/x/dev/project_Mirror/Repository/Library/ScriptAssemblies/Mirror.Tests.dll" runstate="Runnable" testcasecount="1976" result="Skipped" label="Ignored" start-time="2021-03-06 06:27:04Z" end-time="2021-03-06 06:29:23Z" duration="139.036651" total="1976" passed="1974" failed="0" inconclusive="0" skipped="2" asserts="0">
      <properties>
        <property name="_PID" value="33125" />
        <property name="_APPDOMAIN" value="Unity Child Domain" />
      </properties>
      <reason>
        <message><![CDATA[One or more child tests were ignored]]></message>
      </reason>
      <test-suite type="TestSuite" id="5880" name="Mirror" fullname="Mirror" runstate="Runnable" testcasecount="1976" result="Skipped" label="Ignored" start-time="2021-03-06 06:27:04Z" end-time="2021-03-06 06:29:22Z" duration="137.297565" total="1976" passed="1974" failed="0" inconclusive="0" skipped="2" asserts="0">
        <properties />
        <reason>
          <message><![CDATA[One or more child tests were ignored]]></message>
        </reason>
        <test-suite type="TestSuite" id="5883" name="Tests" fullname="Mirror.Tests" runstate="Runnable" testcasecount="1789" result="Skipped" label="Ignored" start-time="2021-03-06 06:27:04Z" end-time="2021-03-06 06:27:32Z" duration="28.016427" total="1789" passed="1787" failed="0" inconclusive="0" skipped="2" asserts="0">
          <properties />
          <reason>
            <message><![CDATA[One or more child tests were ignored]]></message>
          </reason>
          <test-suite type="TestFixture" id="3667" name="BasicAuthenticatorTest" fullname="Mirror.Tests.BasicAuthenticatorTest" classname="Mirror.Tests.BasicAuthenticatorTest" runstate="Runnable" testcasecount="2" result="Passed" start-time="2021-03-06 06:27:04Z" end-time="2021-03-06 06:27:04Z" duration="0.027163" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
            <properties />
            <test-case id="3668" name="AuthRequestMessageTest" fullname="Mirror.Tests.BasicAuthenticatorTest.AuthRequestMessageTest" methodname="AuthRequestMessageTest" classname="Mirror.Tests.BasicAuthenticatorTest" runstate="Runnable" seed="219429489" result="Passed" start-time="2021-03-06 06:27:04Z" end-time="2021-03-06 06:27:04Z" duration="0.016151" asserts="0">
              <properties />
            </test-case>
            <test-case id="3669" name="AuthResponseMessageTest" fullname="Mirror.Tests.BasicAuthenticatorTest.AuthResponseMessageTest" methodname="AuthResponseMessageTest" classname="Mirror.Tests.BasicAuthenticatorTest" runstate="Runnable" seed="203073711" result="Passed" start-time="2021-03-06 06:27:04Z" end-time="2021-03-06 06:27:04Z" duration="0.003919" asserts="0">
              <properties />
            </test-case>
          </test-suite>
          <test-suite type="TestFixture" id="3670" name="BatchingTests" fullname="Mirror.Tests.BatchingTests" classname="Mirror.Tests.BatchingTests" runstate="Runnable" testcasecount="6" result="Passed" start-time="2021-03-06 06:27:04Z" end-time="2021-03-06 06:27:05Z" duration="0.207157" total="6" passed="6" failed="0" inconclusive="0" skipped="0" asserts="0">
            <properties />
            <test-case id="3675" name="SendAlmostMaxBatchSizedAndSmallMessageBatch" fullname="Mirror.Tests.BatchingTests.SendAlmostMaxBatchSizedAndSmallMessageBatch" methodname="SendAlmostMaxBatchSizedAndSmallMessageBatch" classname="Mirror.Tests.BatchingTests" runstate="Runnable" seed="147201191" result="Passed" start-time="2021-03-06 06:27:04Z" end-time="2021-03-06 06:27:04Z" duration="0.027287" asserts="0">
              <properties />
            </test-case>
            <test-case id="3672" name="SendAlmostMaxBatchSizedMessageBatch" fullname="Mirror.Tests.BatchingTests.SendAlmostMaxBatchSizedMessageBatch" methodname="SendAlmostMaxBatchSizedMessageBatch" classname="Mirror.Tests.BatchingTests" runstate="Runnable" seed="541895776" result="Passed" start-time="2021-03-06 06:27:04Z" end-time="2021-03-06 06:27:05Z" duration="0.030758" asserts="0">
              <properties />
            </test-case>
            <test-case id="3671" name="SendEmptyBatch" fullname="Mirror.Tests.BatchingTests.SendEmptyBatch" methodname="SendEmptyBatch" classname="Mirror.Tests.BatchingTests" runstate="Runnable" seed="1200485844" result="Passed" start-time="2021-03-06 06:27:05Z" end-time="2021-03-06 06:27:05Z" duration="0.029946" asserts="0">
              <properties />
            </test-case>
            <test-case id="3676" name="SendLargerMaxBatchSizedMessageBatch" fullname="Mirror.Tests.BatchingTests.SendLargerMaxBatchSizedMessageBatch" methodname="SendLargerMaxBatchSizedMessageBatch" classname="Mirror.Tests.BatchingTests" runstate="Runnable" seed="300391713" result="Passed" start-time="2021-03-06 06:27:05Z" end-time="2021-03-06 06:27:05Z" duration="0.039315" asserts="0">
              <properties />
            </test-case>
            <test-case id="3673" name="SendMaxBatchSizedMessageBatch" fullname="Mirror.Tests.BatchingTests.SendMaxBatchSizedMessageBatch" methodname="SendMaxBatchSizedMessageBatch" classname="Mirror.Tests.BatchingTests" runstate="Runnable" seed="1974067207" result="Passed" start-time="2021-03-06 06:27:05Z" end-time="2021-03-06 06:27:05Z" duration="0.031321" asserts="0">
              <properties />
            </test-case>
            <test-case id="3674" name="SendTwoSmallMessagesBatch" fullname="Mirror.Tests.BatchingTests.SendTwoSmallMessagesBatch" methodname="SendTwoSmallMessagesBatch" classname="Mirror.Tests.BatchingTests" runstate="Runnable" seed="869288194" result="Passed" start-time="2021-03-06 06:27:05Z" end-time="2021-03-06 06:27:05Z" duration="0.030599" asserts="0">
              <properties />
            </test-case>
          </test-suite>
          <test-suite type="TestSuite" id="5891" name="ClientSceneTests" fullname="Mirror.Tests.ClientSceneTests" runstate="Runnable" testcasecount="123" result="Passed" start-time="2021-03-06 06:27:05Z" end-time="2021-03-06 06:27:08Z" duration="3.047961" total="123" passed="123" failed="0" inconclusive="0" skipped="0" asserts="0">
            <properties />
            <test-suite type="TestFixture" id="5660" name="ClientSceneTests_ClearSpawners" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_ClearSpawners" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_ClearSpawners" runstate="Runnable" testcasecount="4" result="Passed" start-time="2021-03-06 06:27:05Z" end-time="2021-03-06 06:27:05Z" duration="0.077550" total="4" passed="4" failed="0" inconclusive="0" skipped="0" asserts="0">
              <properties />
              <test-case id="5664" name="ClearsAllDictionary" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_ClearSpawners.ClearsAllDictionary" methodname="ClearsAllDictionary" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_ClearSpawners" runstate="Runnable" seed="1547264793" result="Passed" start-time="2021-03-06 06:27:05Z" end-time="2021-03-06 06:27:05Z" duration="0.020627" asserts="0">
                <properties />
              </test-case>
              <test-case id="5661" name="RemovesAllPrefabsFromDictionary" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_ClearSpawners.RemovesAllPrefabsFromDictionary" methodname="RemovesAllPrefabsFromDictionary" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_ClearSpawners" runstate="Runnable" seed="332954606" result="Passed" start-time="2021-03-06 06:27:05Z" end-time="2021-03-06 06:27:05Z" duration="0.014675" asserts="0">
                <properties />
              </test-case>
              <test-case id="5662" name="RemovesAllSpawnHandlersFromDictionary" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_ClearSpawners.RemovesAllSpawnHandlersFromDictionary" methodname="RemovesAllSpawnHandlersFromDictionary" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_ClearSpawners" runstate="Runnable" seed="930686639" result="Passed" start-time="2021-03-06 06:27:05Z" end-time="2021-03-06 06:27:05Z" duration="0.015160" asserts="0">
                <properties />
              </test-case>
              <test-case id="5663" name="RemovesAllUnspawnHandlersFromDictionary" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_ClearSpawners.RemovesAllUnspawnHandlersFromDictionary" methodname="RemovesAllUnspawnHandlersFromDictionary" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_ClearSpawners" runstate="Runnable" seed="282341903" result="Passed" start-time="2021-03-06 06:27:05Z" end-time="2021-03-06 06:27:05Z" duration="0.015022" asserts="0">
                <properties />
              </test-case>
            </test-suite>
            <test-suite type="TestFixture" id="5665" name="ClientSceneTests_GetPrefab" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_GetPrefab" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_GetPrefab" runstate="Runnable" testcasecount="5" result="Passed" start-time="2021-03-06 06:27:05Z" end-time="2021-03-06 06:27:05Z" duration="0.087948" total="5" passed="5" failed="0" inconclusive="0" skipped="0" asserts="0">
              <properties />
              <test-case id="5670" name="HasOutPrefabWithCorrectGuid" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_GetPrefab.HasOutPrefabWithCorrectGuid" methodname="HasOutPrefabWithCorrectGuid" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_GetPrefab" runstate="Runnable" seed="496595480" result="Passed" start-time="2021-03-06 06:27:05Z" end-time="2021-03-06 06:27:05Z" duration="0.015337" asserts="0">
                <properties />
              </test-case>
              <test-case id="5666" name="ReturnsFalseForEmptyGuid" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_GetPrefab.ReturnsFalseForEmptyGuid" methodname="ReturnsFalseForEmptyGuid" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_GetPrefab" runstate="Runnable" seed="1286648603" result="Passed" start-time="2021-03-06 06:27:05Z" end-time="2021-03-06 06:27:05Z" duration="0.014986" asserts="0">
                <properties />
              </test-case>
              <test-case id="5668" name="ReturnsFalseForPrefabIsNull" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_GetPrefab.ReturnsFalseForPrefabIsNull" methodname="ReturnsFalseForPrefabIsNull" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_GetPrefab" runstate="Runnable" seed="176047215" result="Passed" start-time="2021-03-06 06:27:05Z" end-time="2021-03-06 06:27:05Z" duration="0.014788" asserts="0">
                <properties />
              </test-case>
              <test-case id="5667" name="ReturnsFalseForPrefabNotFound" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_GetPrefab.ReturnsFalseForPrefabNotFound" methodname="ReturnsFalseForPrefabNotFound" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_GetPrefab" runstate="Runnable" seed="1700660106" result="Passed" start-time="2021-03-06 06:27:05Z" end-time="2021-03-06 06:27:05Z" duration="0.015403" asserts="0">
                <properties />
              </test-case>
              <test-case id="5669" name="ReturnsTrueWhenPrefabIsFound" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_GetPrefab.ReturnsTrueWhenPrefabIsFound" methodname="ReturnsTrueWhenPrefabIsFound" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_GetPrefab" runstate="Runnable" seed="1011163657" result="Passed" start-time="2021-03-06 06:27:05Z" end-time="2021-03-06 06:27:05Z" duration="0.014793" asserts="0">
                <properties />
              </test-case>
            </test-suite>
            <test-suite type="TestFixture" id="5671" name="ClientSceneTests_OnSpawn" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_OnSpawn" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_OnSpawn" runstate="Runnable" testcasecount="32" result="Passed" start-time="2021-03-06 06:27:05Z" end-time="2021-03-06 06:27:06Z" duration="1.019537" total="32" passed="32" failed="0" inconclusive="0" skipped="0" asserts="0">
              <properties />
              <test-suite type="ParameterizedMethod" id="5687" name="ApplyPayload_AppliesAuthority" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_OnSpawn.ApplyPayload_AppliesAuthority" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_OnSpawn" runstate="Runnable" testcasecount="2" result="Passed" start-time="2021-03-06 06:27:05Z" end-time="2021-03-06 06:27:05Z" duration="0.060931" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                <properties />
                <test-case id="5685" name="ApplyPayload_AppliesAuthority(True)" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_OnSpawn.ApplyPayload_AppliesAuthority(True)" methodname="ApplyPayload_AppliesAuthority" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_OnSpawn" runstate="Runnable" seed="75654266" result="Passed" start-time="2021-03-06 06:27:05Z" end-time="2021-03-06 06:27:05Z" duration="0.024370" asserts="0">
                  <properties />
                </test-case>
                <test-case id="5686" name="ApplyPayload_AppliesAuthority(False)" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_OnSpawn.ApplyPayload_AppliesAuthority(False)" methodname="ApplyPayload_AppliesAuthority" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_OnSpawn" runstate="Runnable" seed="828710204" result="Passed" start-time="2021-03-06 06:27:05Z" end-time="2021-03-06 06:27:05Z" duration="0.031132" asserts="0">
                  <properties />
                </test-case>
              </test-suite>
              <test-case id="5684" name="ApplyPayload_AppliesLocalValuesToTransform" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_OnSpawn.ApplyPayload_AppliesLocalValuesToTransform" methodname="ApplyPayload_AppliesLocalValuesToTransform" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_OnSpawn" runstate="Runnable" seed="2069004864" result="Passed" start-time="2021-03-06 06:27:05Z" end-time="2021-03-06 06:27:05Z" duration="0.031854" asserts="0">
                <properties />
              </test-case>
              <test-case id="5683" name="ApplyPayload_AppliesTransform" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_OnSpawn.ApplyPayload_AppliesTransform" methodname="ApplyPayload_AppliesTransform" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_OnSpawn" runstate="Runnable" seed="1508475504" result="Passed" start-time="2021-03-06 06:27:05Z" end-time="2021-03-06 06:27:05Z" duration="0.034875" asserts="0">
                <properties />
              </test-case>
              <test-case id="5692" name="ApplyPayload_DoesNotSetAssetIdToEmpty" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_OnSpawn.ApplyPayload_DoesNotSetAssetIdToEmpty" methodname="ApplyPayload_DoesNotSetAssetIdToEmpty" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_OnSpawn" runstate="Runnable" seed="1112830930" result="Passed" start-time="2021-03-06 06:27:05Z" end-time="2021-03-06 06:27:05Z" duration="0.030389" asserts="0">
                <properties />
              </test-case>
              <test-suite type="ParameterizedMethod" id="5690" name="ApplyPayload_EnablesObject" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_OnSpawn.ApplyPayload_EnablesObject" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_OnSpawn" runstate="Runnable" testcasecount="2" result="Passed" start-time="2021-03-06 06:27:05Z" end-time="2021-03-06 06:27:05Z" duration="0.068151" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                <properties />
                <test-case id="5688" name="ApplyPayload_EnablesObject(True)" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_OnSpawn.ApplyPayload_EnablesObject(True)" methodname="ApplyPayload_EnablesObject" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_OnSpawn" runstate="Runnable" seed="673132739" result="Passed" start-time="2021-03-06 06:27:05Z" end-time="2021-03-06 06:27:05Z" duration="0.032535" asserts="0">
                  <properties />
                </test-case>
                <test-case id="5689" name="ApplyPayload_EnablesObject(False)" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_OnSpawn.ApplyPayload_EnablesObject(False)" methodname="ApplyPayload_EnablesObject" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_OnSpawn" runstate="Runnable" seed="658638231" result="Passed" start-time="2021-03-06 06:27:05Z" end-time="2021-03-06 06:27:05Z" duration="0.030248" asserts="0">
                  <properties />
                </test-case>
              </test-suite>
              <test-suite type="ParameterizedMethod" id="5704" name="ApplyPayload_isSpawnFinished" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_OnSpawn.ApplyPayload_isSpawnFinished" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_OnSpawn" runstate="Runnable" testcasecount="8" result="Passed" start-time="2021-03-06 06:27:05Z" end-time="2021-03-06 06:27:05Z" duration="0.265794" total="8" passed="8" failed="0" inconclusive="0" skipped="0" asserts="0">
                <properties />
                <test-case id="5696" name="ApplyPayload_isSpawnFinished(0)" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_OnSpawn.ApplyPayload_isSpawnFinished(0)" methodname="ApplyPayload_isSpawnFinished" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_OnSpawn" runstate="Runnable" seed="1980443367" result="Passed" start-time="2021-03-06 06:27:05Z" end-time="2021-03-06 06:27:05Z" duration="0.020186" asserts="0">
                  <properties />
                </test-case>
                <test-case id="5697" name="ApplyPayload_isSpawnFinished(1)" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_OnSpawn.ApplyPayload_isSpawnFinished(1)" methodname="ApplyPayload_isSpawnFinished" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_OnSpawn" runstate="Runnable" seed="1449062487" result="Passed" start-time="2021-03-06 06:27:05Z" end-time="2021-03-06 06:27:05Z" duration="0.034691" asserts="0">
                  <properties />
                </test-case>
                <test-case id="5698" name="ApplyPayload_isSpawnFinished(2)" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_OnSpawn.ApplyPayload_isSpawnFinished(2)" methodname="ApplyPayload_isSpawnFinished" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_OnSpawn" runstate="Runnable" seed="346735487" result="Passed" start-time="2021-03-06 06:27:05Z" end-time="2021-03-06 06:27:05Z" duration="0.034633" asserts="0">
                  <properties />
                </test-case>
                <test-case id="5699" name="ApplyPayload_isSpawnFinished(3)" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_OnSpawn.ApplyPayload_isSpawnFinished(3)" methodname="ApplyPayload_isSpawnFinished" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_OnSpawn" runstate="Runnable" seed="987881548" result="Passed" start-time="2021-03-06 06:27:05Z" end-time="2021-03-06 06:27:05Z" duration="0.026405" asserts="0">
                  <properties />
                </test-case>
                <test-case id="5700" name="ApplyPayload_isSpawnFinished(4)" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_OnSpawn.ApplyPayload_isSpawnFinished(4)" methodname="ApplyPayload_isSpawnFinished" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_OnSpawn" runstate="Runnable" seed="121060148" result="Passed" start-time="2021-03-06 06:27:05Z" end-time="2021-03-06 06:27:05Z" duration="0.034448" asserts="0">
                  <properties />
                  <output><![CDATA[No ready connection found for setting player controller during InternalAddPlayer
]]></output>
                </test-case>
                <test-case id="5701" name="ApplyPayload_isSpawnFinished(5)" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_OnSpawn.ApplyPayload_isSpawnFinished(5)" methodname="ApplyPayload_isSpawnFinished" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_OnSpawn" runstate="Runnable" seed="705970904" result="Passed" start-time="2021-03-06 06:27:05Z" end-time="2021-03-06 06:27:05Z" duration="0.031250" asserts="0">
                  <properties />
                  <output><![CDATA[No ready connection found for setting player controller during InternalAddPlayer
]]></output>
                </test-case>
                <test-case id="5702" name="ApplyPayload_isSpawnFinished(6)" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_OnSpawn.ApplyPayload_isSpawnFinished(6)" methodname="ApplyPayload_isSpawnFinished" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_OnSpawn" runstate="Runnable" seed="1917548879" result="Passed" start-time="2021-03-06 06:27:05Z" end-time="2021-03-06 06:27:05Z" duration="0.029894" asserts="0">
                  <properties />
                  <output><![CDATA[No ready connection found for setting player controller during InternalAddPlayer
]]></output>
                </test-case>
                <test-case id="5703" name="ApplyPayload_isSpawnFinished(7)" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_OnSpawn.ApplyPayload_isSpawnFinished(7)" methodname="ApplyPayload_isSpawnFinished" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_OnSpawn" runstate="Runnable" seed="1503744385" result="Passed" start-time="2021-03-06 06:27:05Z" end-time="2021-03-06 06:27:05Z" duration="0.034957" asserts="0">
                  <properties />
                  <output><![CDATA[No ready connection found for setting player controller during InternalAddPlayer
]]></output>
                </test-case>
              </test-suite>
              <test-case id="5694" name="ApplyPayload_LocalPlayerAddsIdentityToConnection" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_OnSpawn.ApplyPayload_LocalPlayerAddsIdentityToConnection" methodname="ApplyPayload_LocalPlayerAddsIdentityToConnection" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_OnSpawn" runstate="Runnable" seed="1785878808" result="Passed" start-time="2021-03-06 06:27:05Z" end-time="2021-03-06 06:27:05Z" duration="0.023005" asserts="0">
                <properties />
              </test-case>
              <test-case id="5695" name="ApplyPayload_LocalPlayerWarningWhenNoReadyConnection" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_OnSpawn.ApplyPayload_LocalPlayerWarningWhenNoReadyConnection" methodname="ApplyPayload_LocalPlayerWarningWhenNoReadyConnection" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_OnSpawn" runstate="Runnable" seed="495801492" result="Passed" start-time="2021-03-06 06:27:05Z" end-time="2021-03-06 06:27:05Z" duration="0.034024" asserts="0">
                <properties />
                <output><![CDATA[No ready connection found for setting player controller during InternalAddPlayer
]]></output>
              </test-case>
              <test-case id="5693" name="ApplyPayload_SendsDataToNetworkBehaviourDeserialize" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_OnSpawn.ApplyPayload_SendsDataToNetworkBehaviourDeserialize" methodname="ApplyPayload_SendsDataToNetworkBehaviourDeserialize" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_OnSpawn" runstate="Runnable" seed="567014239" result="Passed" start-time="2021-03-06 06:27:05Z" end-time="2021-03-06 06:27:05Z" duration="0.034887" asserts="0">
                <properties />
              </test-case>
              <test-case id="5691" name="ApplyPayload_SetsAssetId" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_OnSpawn.ApplyPayload_SetsAssetId" methodname="ApplyPayload_SetsAssetId" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_OnSpawn" runstate="Runnable" seed="1577993436" result="Passed" start-time="2021-03-06 06:27:05Z" end-time="2021-03-06 06:27:05Z" duration="0.030828" asserts="0">
                <properties />
              </test-case>
              <test-case id="5673" name="FindOrSpawnObject_ErrorWhenNoExistingAndAssetIdAndSceneIdAreBothEmpty" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_OnSpawn.FindOrSpawnObject_ErrorWhenNoExistingAndAssetIdAndSceneIdAreBothEmpty" methodname="FindOrSpawnObject_ErrorWhenNoExistingAndAssetIdAndSceneIdAreBothEmpty" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_OnSpawn" runstate="Runnable" seed="194781363" result="Passed" start-time="2021-03-06 06:27:05Z" end-time="2021-03-06 06:27:06Z" duration="0.030301" asserts="0">
                <properties />
                <output><![CDATA[OnSpawn message with netId '1001' has no AssetId or sceneId
]]></output>
              </test-case>
              <test-case id="5675" name="FindOrSpawnObject_ErrorWhenPrefabInNullInDictionary" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_OnSpawn.FindOrSpawnObject_ErrorWhenPrefabInNullInDictionary" methodname="FindOrSpawnObject_ErrorWhenPrefabInNullInDictionary" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_OnSpawn" runstate="Runnable" seed="293893996" result="Passed" start-time="2021-03-06 06:27:06Z" end-time="2021-03-06 06:27:06Z" duration="0.022892" asserts="0">
                <properties />
                <output><![CDATA[Failed to spawn server object, did you forget to add it to the NetworkManager? assetId=33169286-da03-13d4-5ab5-bfccc6cf3775 netId=1002
Could not spawn assetId=33169286-da03-13d4-5ab5-bfccc6cf3775 scene=0 netId=1002
]]></output>
              </test-case>
              <test-case id="5682" name="FindOrSpawnObject_ErrorWhenSceneIdIsNotInSpawnableObjectsDictionary" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_OnSpawn.FindOrSpawnObject_ErrorWhenSceneIdIsNotInSpawnableObjectsDictionary" methodname="FindOrSpawnObject_ErrorWhenSceneIdIsNotInSpawnableObjectsDictionary" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_OnSpawn" runstate="Runnable" seed="1506754055" result="Passed" start-time="2021-03-06 06:27:06Z" end-time="2021-03-06 06:27:06Z" duration="0.018998" asserts="0">
                <properties />
                <output><![CDATA[Spawn scene object not found for 186B5 SpawnableObjects.Count=0
Could not spawn assetId=00000000-0000-0000-0000-000000000000 scene=186B5 netId=1004
]]></output>
              </test-case>
              <test-case id="5678" name="FindOrSpawnObject_ErrorWhenSpawnHanlderReturnsNull" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_OnSpawn.FindOrSpawnObject_ErrorWhenSpawnHanlderReturnsNull" methodname="FindOrSpawnObject_ErrorWhenSpawnHanlderReturnsNull" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_OnSpawn" runstate="Runnable" seed="1742797593" result="Passed" start-time="2021-03-06 06:27:06Z" end-time="2021-03-06 06:27:06Z" duration="0.017134" asserts="0">
                <properties />
                <output><![CDATA[Spawn Handler returned null, Handler assetId '33169286-da03-13d4-5ab5-bfccc6cf3775'
Could not spawn assetId=33169286-da03-13d4-5ab5-bfccc6cf3775 scene=0 netId=1003
]]></output>
              </test-case>
              <test-case id="5679" name="FindOrSpawnObject_ErrorWhenSpawnHanlderReturnsWithoutNetworkIdentity" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_OnSpawn.FindOrSpawnObject_ErrorWhenSpawnHanlderReturnsWithoutNetworkIdentity" methodname="FindOrSpawnObject_ErrorWhenSpawnHanlderReturnsWithoutNetworkIdentity" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_OnSpawn" runstate="Runnable" seed="1200802173" result="Passed" start-time="2021-03-06 06:27:06Z" end-time="2021-03-06 06:27:06Z" duration="0.023106" asserts="0">
                <properties />
                <output><![CDATA[Object Spawned by handler did not have a NetworkIdentity, Handler assetId '33169286-da03-13d4-5ab5-bfccc6cf3775'
Could not spawn assetId=33169286-da03-13d4-5ab5-bfccc6cf3775 scene=0 netId=1003
]]></output>
              </test-case>
              <test-case id="5672" name="FindOrSpawnObject_FindExistingObject" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_OnSpawn.FindOrSpawnObject_FindExistingObject" methodname="FindOrSpawnObject_FindExistingObject" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_OnSpawn" runstate="Runnable" seed="1610831342" result="Passed" start-time="2021-03-06 06:27:06Z" end-time="2021-03-06 06:27:06Z" duration="0.029175" asserts="0">
                <properties />
              </test-case>
              <test-case id="5677" name="FindOrSpawnObject_SpawnHandlerCalledFromDictionary" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_OnSpawn.FindOrSpawnObject_SpawnHandlerCalledFromDictionary" methodname="FindOrSpawnObject_SpawnHandlerCalledFromDictionary" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_OnSpawn" runstate="Runnable" seed="21469539" result="Passed" start-time="2021-03-06 06:27:06Z" end-time="2021-03-06 06:27:06Z" duration="0.035049" asserts="0">
                <properties />
              </test-case>
              <test-case id="5674" name="FindOrSpawnObject_SpawnsFromPrefabDictionary" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_OnSpawn.FindOrSpawnObject_SpawnsFromPrefabDictionary" methodname="FindOrSpawnObject_SpawnsFromPrefabDictionary" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_OnSpawn" runstate="Runnable" seed="1893643143" result="Passed" start-time="2021-03-06 06:27:06Z" end-time="2021-03-06 06:27:06Z" duration="0.026373" asserts="0">
                <properties />
              </test-case>
              <test-case id="5676" name="FindOrSpawnObject_SpawnsFromPrefabIfBothPrefabAndHandlerExists" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_OnSpawn.FindOrSpawnObject_SpawnsFromPrefabIfBothPrefabAndHandlerExists" methodname="FindOrSpawnObject_SpawnsFromPrefabIfBothPrefabAndHandlerExists" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_OnSpawn" runstate="Runnable" seed="654850862" result="Passed" start-time="2021-03-06 06:27:06Z" end-time="2021-03-06 06:27:06Z" duration="0.034776" asserts="0">
                <properties />
              </test-case>
              <test-case id="5681" name="FindOrSpawnObject_SpawnsUsingSceneIdInsteadOfAssetId" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_OnSpawn.FindOrSpawnObject_SpawnsUsingSceneIdInsteadOfAssetId" methodname="FindOrSpawnObject_SpawnsUsingSceneIdInsteadOfAssetId" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_OnSpawn" runstate="Runnable" seed="1159613522" result="Passed" start-time="2021-03-06 06:27:06Z" end-time="2021-03-06 06:27:06Z" duration="0.029912" asserts="0">
                <properties />
              </test-case>
              <test-case id="5680" name="FindOrSpawnObject_UsesSceneIdToSpawnFromSpawnableObjectsDictionary" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_OnSpawn.FindOrSpawnObject_UsesSceneIdToSpawnFromSpawnableObjectsDictionary" methodname="FindOrSpawnObject_UsesSceneIdToSpawnFromSpawnableObjectsDictionary" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_OnSpawn" runstate="Runnable" seed="1524124652" result="Passed" start-time="2021-03-06 06:27:06Z" end-time="2021-03-06 06:27:06Z" duration="0.030261" asserts="0">
                <properties />
              </test-case>
              <test-case id="5706" name="OnSpawn_GiveNoExtraErrorsWhenPrefabIsntSpawned" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_OnSpawn.OnSpawn_GiveNoExtraErrorsWhenPrefabIsntSpawned" methodname="OnSpawn_GiveNoExtraErrorsWhenPrefabIsntSpawned" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_OnSpawn" runstate="Runnable" seed="687605917" result="Passed" start-time="2021-03-06 06:27:06Z" end-time="2021-03-06 06:27:06Z" duration="0.030037" asserts="0">
                <properties />
                <output><![CDATA[OnSpawn message with netId '20033' has no AssetId or sceneId
]]></output>
              </test-case>
              <test-case id="5705" name="OnSpawn_SpawnsAndAppliesPayload" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_OnSpawn.OnSpawn_SpawnsAndAppliesPayload" methodname="OnSpawn_SpawnsAndAppliesPayload" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_OnSpawn" runstate="Runnable" seed="944393690" result="Passed" start-time="2021-03-06 06:27:06Z" end-time="2021-03-06 06:27:06Z" duration="0.023532" asserts="0">
                <properties />
              </test-case>
            </test-suite>
            <test-suite type="TestFixture" id="5707" name="ClientSceneTests_PrepareToSpawnSceneObjects" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_PrepareToSpawnSceneObjects" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_PrepareToSpawnSceneObjects" runstate="Runnable" testcasecount="5" result="Passed" start-time="2021-03-06 06:27:06Z" end-time="2021-03-06 06:27:06Z" duration="0.166011" total="5" passed="5" failed="0" inconclusive="0" skipped="0" asserts="0">
              <properties />
              <test-case id="5708" name="AddsAllInactiveIdentitiesInSceneWithSceneIdToDictionary" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_PrepareToSpawnSceneObjects.AddsAllInactiveIdentitiesInSceneWithSceneIdToDictionary" methodname="AddsAllInactiveIdentitiesInSceneWithSceneIdToDictionary" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_PrepareToSpawnSceneObjects" runstate="Runnable" seed="1086126925" result="Passed" start-time="2021-03-06 06:27:06Z" end-time="2021-03-06 06:27:06Z" duration="0.019139" asserts="0">
                <properties />
              </test-case>
              <test-case id="5711" name="AddsIdentitiesToDictionaryUsingSceneId" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_PrepareToSpawnSceneObjects.AddsIdentitiesToDictionaryUsingSceneId" methodname="AddsIdentitiesToDictionaryUsingSceneId" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_PrepareToSpawnSceneObjects" runstate="Runnable" seed="1769408672" result="Passed" start-time="2021-03-06 06:27:06Z" end-time="2021-03-06 06:27:06Z" duration="0.034839" asserts="0">
                <properties />
              </test-case>
              <test-case id="5712" name="ClearsExistingItemsFromDictionary" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_PrepareToSpawnSceneObjects.ClearsExistingItemsFromDictionary" methodname="ClearsExistingItemsFromDictionary" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_PrepareToSpawnSceneObjects" runstate="Runnable" seed="443703633" result="Passed" start-time="2021-03-06 06:27:06Z" end-time="2021-03-06 06:27:06Z" duration="0.030072" asserts="0">
                <properties />
              </test-case>
              <test-case id="5709" name="DoesNotAddActiveObjectsToDictionary" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_PrepareToSpawnSceneObjects.DoesNotAddActiveObjectsToDictionary" methodname="DoesNotAddActiveObjectsToDictionary" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_PrepareToSpawnSceneObjects" runstate="Runnable" seed="704838505" result="Passed" start-time="2021-03-06 06:27:06Z" end-time="2021-03-06 06:27:06Z" duration="0.035146" asserts="0">
                <properties />
              </test-case>
              <test-case id="5710" name="DoesNotAddObjectsWithNoSceneId" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_PrepareToSpawnSceneObjects.DoesNotAddObjectsWithNoSceneId" methodname="DoesNotAddObjectsWithNoSceneId" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_PrepareToSpawnSceneObjects" runstate="Runnable" seed="866132929" result="Passed" start-time="2021-03-06 06:27:06Z" end-time="2021-03-06 06:27:06Z" duration="0.030183" asserts="0">
                <properties />
              </test-case>
            </test-suite>
            <test-suite type="TestFixture" id="5713" name="ClientSceneTests_RegisterPrefab" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab" runstate="Runnable" testcasecount="54" result="Passed" start-time="2021-03-06 06:27:06Z" end-time="2021-03-06 06:27:07Z" duration="1.145973" total="54" passed="54" failed="0" inconclusive="0" skipped="0" asserts="0">
              <properties />
              <test-suite type="ParameterizedMethod" id="5781" name="CheckOverloadWithAssetId" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab.CheckOverloadWithAssetId" classname="Mirror.Tests.ClientSceneTests_RegisterPrefabBase" runstate="Runnable" testcasecount="6" result="Passed" start-time="2021-03-06 06:27:06Z" end-time="2021-03-06 06:27:06Z" duration="0.108368" total="6" passed="6" failed="0" inconclusive="0" skipped="0" asserts="0">
                <properties />
                <test-case id="5775" name="CheckOverloadWithAssetId(Prefab,False)" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab.CheckOverloadWithAssetId(Prefab,False)" methodname="CheckOverloadWithAssetId" classname="Mirror.Tests.ClientSceneTests_RegisterPrefabBase" runstate="Runnable" seed="333866736" result="Passed" start-time="2021-03-06 06:27:06Z" end-time="2021-03-06 06:27:06Z" duration="0.012305" asserts="0">
                  <properties />
                </test-case>
                <test-case id="5776" name="CheckOverloadWithAssetId(Prefab_NewAssetId,True)" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab.CheckOverloadWithAssetId(Prefab_NewAssetId,True)" methodname="CheckOverloadWithAssetId" classname="Mirror.Tests.ClientSceneTests_RegisterPrefabBase" runstate="Runnable" seed="1375081175" result="Passed" start-time="2021-03-06 06:27:06Z" end-time="2021-03-06 06:27:06Z" duration="0.019047" asserts="0">
                  <properties />
                </test-case>
                <test-case id="5777" name="CheckOverloadWithAssetId(Prefab_SpawnDelegate,False)" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab.CheckOverloadWithAssetId(Prefab_SpawnDelegate,False)" methodname="CheckOverloadWithAssetId" classname="Mirror.Tests.ClientSceneTests_RegisterPrefabBase" runstate="Runnable" seed="897401113" result="Passed" start-time="2021-03-06 06:27:06Z" end-time="2021-03-06 06:27:06Z" duration="0.018539" asserts="0">
                  <properties />
                </test-case>
                <test-case id="5778" name="CheckOverloadWithAssetId(Prefab_SpawnDelegate_NewAssetId,True)" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab.CheckOverloadWithAssetId(Prefab_SpawnDelegate_NewAssetId,True)" methodname="CheckOverloadWithAssetId" classname="Mirror.Tests.ClientSceneTests_RegisterPrefabBase" runstate="Runnable" seed="1459599684" result="Passed" start-time="2021-03-06 06:27:06Z" end-time="2021-03-06 06:27:06Z" duration="0.014701" asserts="0">
                  <properties />
                </test-case>
                <test-case id="5779" name="CheckOverloadWithAssetId(Prefab_SpawnHandlerDelegate,False)" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab.CheckOverloadWithAssetId(Prefab_SpawnHandlerDelegate,False)" methodname="CheckOverloadWithAssetId" classname="Mirror.Tests.ClientSceneTests_RegisterPrefabBase" runstate="Runnable" seed="334617477" result="Passed" start-time="2021-03-06 06:27:06Z" end-time="2021-03-06 06:27:06Z" duration="0.018323" asserts="0">
                  <properties />
                </test-case>
                <test-case id="5780" name="CheckOverloadWithAssetId(Prefab_SpawnHandlerDelegate_NewAssetId,True)" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab.CheckOverloadWithAssetId(Prefab_SpawnHandlerDelegate_NewAssetId,True)" methodname="CheckOverloadWithAssetId" classname="Mirror.Tests.ClientSceneTests_RegisterPrefabBase" runstate="Runnable" seed="905709230" result="Passed" start-time="2021-03-06 06:27:06Z" end-time="2021-03-06 06:27:06Z" duration="0.014677" asserts="0">
                  <properties />
                </test-case>
              </test-suite>
              <test-suite type="ParameterizedMethod" id="5788" name="CheckOverloadWithHandler" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab.CheckOverloadWithHandler" classname="Mirror.Tests.ClientSceneTests_RegisterPrefabBase" runstate="Runnable" testcasecount="6" result="Passed" start-time="2021-03-06 06:27:06Z" end-time="2021-03-06 06:27:06Z" duration="0.106768" total="6" passed="6" failed="0" inconclusive="0" skipped="0" asserts="0">
                <properties />
                <test-case id="5782" name="CheckOverloadWithHandler(Prefab,False)" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab.CheckOverloadWithHandler(Prefab,False)" methodname="CheckOverloadWithHandler" classname="Mirror.Tests.ClientSceneTests_RegisterPrefabBase" runstate="Runnable" seed="418291359" result="Passed" start-time="2021-03-06 06:27:06Z" end-time="2021-03-06 06:27:06Z" duration="0.012024" asserts="0">
                  <properties />
                </test-case>
                <test-case id="5783" name="CheckOverloadWithHandler(Prefab_NewAssetId,False)" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab.CheckOverloadWithHandler(Prefab_NewAssetId,False)" methodname="CheckOverloadWithHandler" classname="Mirror.Tests.ClientSceneTests_RegisterPrefabBase" runstate="Runnable" seed="464984859" result="Passed" start-time="2021-03-06 06:27:06Z" end-time="2021-03-06 06:27:06Z" duration="0.019117" asserts="0">
                  <properties />
                </test-case>
                <test-case id="5784" name="CheckOverloadWithHandler(Prefab_SpawnDelegate,True)" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab.CheckOverloadWithHandler(Prefab_SpawnDelegate,True)" methodname="CheckOverloadWithHandler" classname="Mirror.Tests.ClientSceneTests_RegisterPrefabBase" runstate="Runnable" seed="894739705" result="Passed" start-time="2021-03-06 06:27:06Z" end-time="2021-03-06 06:27:06Z" duration="0.014323" asserts="0">
                  <properties />
                </test-case>
                <test-case id="5785" name="CheckOverloadWithHandler(Prefab_SpawnDelegate_NewAssetId,True)" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab.CheckOverloadWithHandler(Prefab_SpawnDelegate_NewAssetId,True)" methodname="CheckOverloadWithHandler" classname="Mirror.Tests.ClientSceneTests_RegisterPrefabBase" runstate="Runnable" seed="776827715" result="Passed" start-time="2021-03-06 06:27:06Z" end-time="2021-03-06 06:27:06Z" duration="0.018536" asserts="0">
                  <properties />
                </test-case>
                <test-case id="5786" name="CheckOverloadWithHandler(Prefab_SpawnHandlerDelegate,True)" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab.CheckOverloadWithHandler(Prefab_SpawnHandlerDelegate,True)" methodname="CheckOverloadWithHandler" classname="Mirror.Tests.ClientSceneTests_RegisterPrefabBase" runstate="Runnable" seed="1982608137" result="Passed" start-time="2021-03-06 06:27:06Z" end-time="2021-03-06 06:27:06Z" duration="0.015428" asserts="0">
                  <properties />
                </test-case>
                <test-case id="5787" name="CheckOverloadWithHandler(Prefab_SpawnHandlerDelegate_NewAssetId,True)" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab.CheckOverloadWithHandler(Prefab_SpawnHandlerDelegate_NewAssetId,True)" methodname="CheckOverloadWithHandler" classname="Mirror.Tests.ClientSceneTests_RegisterPrefabBase" runstate="Runnable" seed="571532875" result="Passed" start-time="2021-03-06 06:27:06Z" end-time="2021-03-06 06:27:06Z" duration="0.014238" asserts="0">
                  <properties />
                </test-case>
              </test-suite>
              <test-suite type="ParameterizedMethod" id="5732" name="ErrorForNullPrefab" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab.ErrorForNullPrefab" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab" runstate="Runnable" testcasecount="6" result="Passed" start-time="2021-03-06 06:27:06Z" end-time="2021-03-06 06:27:06Z" duration="0.114382" total="6" passed="6" failed="0" inconclusive="0" skipped="0" asserts="0">
                <properties />
                <test-case id="5726" name="ErrorForNullPrefab(Prefab)" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab.ErrorForNullPrefab(Prefab)" methodname="ErrorForNullPrefab" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab" runstate="Runnable" seed="721460729" result="Passed" start-time="2021-03-06 06:27:06Z" end-time="2021-03-06 06:27:06Z" duration="0.011648" asserts="0">
                  <properties />
                  <output><![CDATA[Could not register prefab because it was null
]]></output>
                </test-case>
                <test-case id="5727" name="ErrorForNullPrefab(Prefab_NewAssetId)" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab.ErrorForNullPrefab(Prefab_NewAssetId)" methodname="ErrorForNullPrefab" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab" runstate="Runnable" seed="703720878" result="Passed" start-time="2021-03-06 06:27:06Z" end-time="2021-03-06 06:27:06Z" duration="0.023738" asserts="0">
                  <properties />
                  <output><![CDATA[Could not register prefab because it was null
]]></output>
                </test-case>
                <test-case id="5728" name="ErrorForNullPrefab(Prefab_SpawnDelegate)" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab.ErrorForNullPrefab(Prefab_SpawnDelegate)" methodname="ErrorForNullPrefab" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab" runstate="Runnable" seed="1358878322" result="Passed" start-time="2021-03-06 06:27:06Z" end-time="2021-03-06 06:27:06Z" duration="0.021971" asserts="0">
                  <properties />
                  <output><![CDATA[Could not register handler for prefab because the prefab was null
]]></output>
                </test-case>
                <test-case id="5729" name="ErrorForNullPrefab(Prefab_SpawnDelegate_NewAssetId)" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab.ErrorForNullPrefab(Prefab_SpawnDelegate_NewAssetId)" methodname="ErrorForNullPrefab" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab" runstate="Runnable" seed="1296357756" result="Passed" start-time="2021-03-06 06:27:06Z" end-time="2021-03-06 06:27:06Z" duration="0.014504" asserts="0">
                  <properties />
                  <output><![CDATA[Could not register handler for prefab because the prefab was null
]]></output>
                </test-case>
                <test-case id="5730" name="ErrorForNullPrefab(Prefab_SpawnHandlerDelegate)" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab.ErrorForNullPrefab(Prefab_SpawnHandlerDelegate)" methodname="ErrorForNullPrefab" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab" runstate="Runnable" seed="1000898561" result="Passed" start-time="2021-03-06 06:27:06Z" end-time="2021-03-06 06:27:06Z" duration="0.014999" asserts="0">
                  <properties />
                  <output><![CDATA[Could not register handler for prefab because the prefab was null
]]></output>
                </test-case>
                <test-case id="5731" name="ErrorForNullPrefab(Prefab_SpawnHandlerDelegate_NewAssetId)" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab.ErrorForNullPrefab(Prefab_SpawnHandlerDelegate_NewAssetId)" methodname="ErrorForNullPrefab" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab" runstate="Runnable" seed="341011876" result="Passed" start-time="2021-03-06 06:27:06Z" end-time="2021-03-06 06:27:06Z" duration="0.014528" asserts="0">
                  <properties />
                  <output><![CDATA[Could not register handler for prefab because the prefab was null
]]></output>
                </test-case>
              </test-suite>
              <test-suite type="ParameterizedMethod" id="5739" name="ErrorForPrefabWithoutNetworkIdentity" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab.ErrorForPrefabWithoutNetworkIdentity" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab" runstate="Runnable" testcasecount="6" result="Passed" start-time="2021-03-06 06:27:06Z" end-time="2021-03-06 06:27:07Z" duration="0.110463" total="6" passed="6" failed="0" inconclusive="0" skipped="0" asserts="0">
                <properties />
                <test-case id="5733" name="ErrorForPrefabWithoutNetworkIdentity(Prefab)" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab.ErrorForPrefabWithoutNetworkIdentity(Prefab)" methodname="ErrorForPrefabWithoutNetworkIdentity" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab" runstate="Runnable" seed="1744577487" result="Passed" start-time="2021-03-06 06:27:06Z" end-time="2021-03-06 06:27:06Z" duration="0.011906" asserts="0">
                  <properties />
                  <output><![CDATA[Could not register 'invalidPrefabForClientScene' since it contains no NetworkIdentity component
]]></output>
                </test-case>
                <test-case id="5734" name="ErrorForPrefabWithoutNetworkIdentity(Prefab_NewAssetId)" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab.ErrorForPrefabWithoutNetworkIdentity(Prefab_NewAssetId)" methodname="ErrorForPrefabWithoutNetworkIdentity" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab" runstate="Runnable" seed="1658973148" result="Passed" start-time="2021-03-06 06:27:06Z" end-time="2021-03-06 06:27:06Z" duration="0.022843" asserts="0">
                  <properties />
                  <output><![CDATA[Could not register 'invalidPrefabForClientScene' since it contains no NetworkIdentity component
]]></output>
                </test-case>
                <test-case id="5735" name="ErrorForPrefabWithoutNetworkIdentity(Prefab_SpawnDelegate)" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab.ErrorForPrefabWithoutNetworkIdentity(Prefab_SpawnDelegate)" methodname="ErrorForPrefabWithoutNetworkIdentity" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab" runstate="Runnable" seed="496157778" result="Passed" start-time="2021-03-06 06:27:06Z" end-time="2021-03-06 06:27:06Z" duration="0.014178" asserts="0">
                  <properties />
                  <output><![CDATA[Could not register handler for 'invalidPrefabForClientScene' since it contains no NetworkIdentity component
]]></output>
                </test-case>
                <test-case id="5736" name="ErrorForPrefabWithoutNetworkIdentity(Prefab_SpawnDelegate_NewAssetId)" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab.ErrorForPrefabWithoutNetworkIdentity(Prefab_SpawnDelegate_NewAssetId)" methodname="ErrorForPrefabWithoutNetworkIdentity" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab" runstate="Runnable" seed="1455659749" result="Passed" start-time="2021-03-06 06:27:06Z" end-time="2021-03-06 06:27:06Z" duration="0.014363" asserts="0">
                  <properties />
                  <output><![CDATA[Could not register handler for 'invalidPrefabForClientScene' since it contains no NetworkIdentity component
]]></output>
                </test-case>
                <test-case id="5737" name="ErrorForPrefabWithoutNetworkIdentity(Prefab_SpawnHandlerDelegate)" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab.ErrorForPrefabWithoutNetworkIdentity(Prefab_SpawnHandlerDelegate)" methodname="ErrorForPrefabWithoutNetworkIdentity" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab" runstate="Runnable" seed="529899745" result="Passed" start-time="2021-03-06 06:27:06Z" end-time="2021-03-06 06:27:06Z" duration="0.018649" asserts="0">
                  <properties />
                  <output><![CDATA[Could not register handler for 'invalidPrefabForClientScene' since it contains no NetworkIdentity component
]]></output>
                </test-case>
                <test-case id="5738" name="ErrorForPrefabWithoutNetworkIdentity(Prefab_SpawnHandlerDelegate_NewAssetId)" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab.ErrorForPrefabWithoutNetworkIdentity(Prefab_SpawnHandlerDelegate_NewAssetId)" methodname="ErrorForPrefabWithoutNetworkIdentity" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab" runstate="Runnable" seed="627952134" result="Passed" start-time="2021-03-06 06:27:06Z" end-time="2021-03-06 06:27:07Z" duration="0.014559" asserts="0">
                  <properties />
                  <output><![CDATA[Could not register handler for 'invalidPrefabForClientScene' since it contains no NetworkIdentity component
]]></output>
                </test-case>
              </test-suite>
              <test-suite type="ParameterizedMethod" id="5747" name="ErrorIfPrefabHadSceneId" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab.ErrorIfPrefabHadSceneId" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab" runstate="Runnable" testcasecount="3" result="Passed" start-time="2021-03-06 06:27:07Z" end-time="2021-03-06 06:27:07Z" duration="0.093181" total="3" passed="3" failed="0" inconclusive="0" skipped="0" asserts="0">
                <properties />
                <test-case id="5744" name="ErrorIfPrefabHadSceneId(Prefab)" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab.ErrorIfPrefabHadSceneId(Prefab)" methodname="ErrorIfPrefabHadSceneId" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab" runstate="Runnable" seed="57307617" result="Passed" start-time="2021-03-06 06:27:07Z" end-time="2021-03-06 06:27:07Z" duration="0.020311" asserts="0">
                  <properties />
                  <output><![CDATA[Can not Register 'ValidPrefabForClientScene(Clone)' because it has a sceneId, make sure you are passing in the original prefab and not an instance in the scene.
]]></output>
                </test-case>
                <test-case id="5745" name="ErrorIfPrefabHadSceneId(Prefab_SpawnDelegate)" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab.ErrorIfPrefabHadSceneId(Prefab_SpawnDelegate)" methodname="ErrorIfPrefabHadSceneId" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab" runstate="Runnable" seed="1357077447" result="Passed" start-time="2021-03-06 06:27:07Z" end-time="2021-03-06 06:27:07Z" duration="0.034406" asserts="0">
                  <properties />
                  <output><![CDATA[Can not Register 'ValidPrefabForClientScene(Clone)' because it has a sceneId, make sure you are passing in the original prefab and not an instance in the scene.
]]></output>
                </test-case>
                <test-case id="5746" name="ErrorIfPrefabHadSceneId(Prefab_SpawnHandlerDelegate)" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab.ErrorIfPrefabHadSceneId(Prefab_SpawnHandlerDelegate)" methodname="ErrorIfPrefabHadSceneId" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab" runstate="Runnable" seed="1627107233" result="Passed" start-time="2021-03-06 06:27:07Z" end-time="2021-03-06 06:27:07Z" duration="0.029593" asserts="0">
                  <properties />
                  <output><![CDATA[Can not Register 'ValidPrefabForClientScene(Clone)' because it has a sceneId, make sure you are passing in the original prefab and not an instance in the scene.
]]></output>
                </test-case>
              </test-suite>
              <test-suite type="ParameterizedMethod" id="5756" name="Handler_ErrorForAssetIdAlreadyExistingInPrefabsDictionary" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab.Handler_ErrorForAssetIdAlreadyExistingInPrefabsDictionary" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab" runstate="Runnable" testcasecount="2" result="Passed" start-time="2021-03-06 06:27:07Z" end-time="2021-03-06 06:27:07Z" duration="0.038521" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                <properties />
                <test-case id="5754" name="Handler_ErrorForAssetIdAlreadyExistingInPrefabsDictionary(Prefab_SpawnDelegate)" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab.Handler_ErrorForAssetIdAlreadyExistingInPrefabsDictionary(Prefab_SpawnDelegate)" methodname="Handler_ErrorForAssetIdAlreadyExistingInPrefabsDictionary" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab" runstate="Runnable" seed="1281838450" result="Passed" start-time="2021-03-06 06:27:07Z" end-time="2021-03-06 06:27:07Z" duration="0.015560" asserts="0">
                  <properties />
                  <output><![CDATA[assetId '33169286-da03-13d4-5ab5-bfccc6cf3775' is already used by prefab 'ValidPrefabForClientScene', unregister the prefab first before trying to add handler
]]></output>
                </test-case>
                <test-case id="5755" name="Handler_ErrorForAssetIdAlreadyExistingInPrefabsDictionary(Prefab_SpawnHandlerDelegate)" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab.Handler_ErrorForAssetIdAlreadyExistingInPrefabsDictionary(Prefab_SpawnHandlerDelegate)" methodname="Handler_ErrorForAssetIdAlreadyExistingInPrefabsDictionary" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab" runstate="Runnable" seed="1645882717" result="Passed" start-time="2021-03-06 06:27:07Z" end-time="2021-03-06 06:27:07Z" duration="0.014099" asserts="0">
                  <properties />
                  <output><![CDATA[assetId '33169286-da03-13d4-5ab5-bfccc6cf3775' is already used by prefab 'ValidPrefabForClientScene', unregister the prefab first before trying to add handler
]]></output>
                </test-case>
              </test-suite>
              <test-suite type="ParameterizedMethod" id="5774" name="Handler_ErrorWhenUnSpawnHandlerIsNull" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab.Handler_ErrorWhenUnSpawnHandlerIsNull" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab" runstate="Runnable" testcasecount="2" result="Passed" start-time="2021-03-06 06:27:07Z" end-time="2021-03-06 06:27:07Z" duration="0.049560" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                <properties />
                <test-case id="5772" name="Handler_ErrorWhenUnSpawnHandlerIsNull(Prefab_SpawnDelegate)" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab.Handler_ErrorWhenUnSpawnHandlerIsNull(Prefab_SpawnDelegate)" methodname="Handler_ErrorWhenUnSpawnHandlerIsNull" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab" runstate="Runnable" seed="218798133" result="Passed" start-time="2021-03-06 06:27:07Z" end-time="2021-03-06 06:27:07Z" duration="0.012645" asserts="0">
                  <properties />
                  <output><![CDATA[Can not Register null UnSpawnHandler for 33169286-da03-13d4-5ab5-bfccc6cf3775
]]></output>
                </test-case>
                <test-case id="5773" name="Handler_ErrorWhenUnSpawnHandlerIsNull(Prefab_SpawnHandlerDelegate)" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab.Handler_ErrorWhenUnSpawnHandlerIsNull(Prefab_SpawnHandlerDelegate)" methodname="Handler_ErrorWhenUnSpawnHandlerIsNull" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab" runstate="Runnable" seed="2064323859" result="Passed" start-time="2021-03-06 06:27:07Z" end-time="2021-03-06 06:27:07Z" duration="0.022509" asserts="0">
                  <properties />
                  <output><![CDATA[Can not Register null UnSpawnHandler for 33169286-da03-13d4-5ab5-bfccc6cf3775
]]></output>
                </test-case>
              </test-suite>
              <test-suite type="ParameterizedMethod" id="5720" name="HandlerNewGuid_ErrorDoesNotChangePrefabsAssetId" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab.HandlerNewGuid_ErrorDoesNotChangePrefabsAssetId" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab" runstate="Runnable" testcasecount="2" result="Passed" start-time="2021-03-06 06:27:07Z" end-time="2021-03-06 06:27:07Z" duration="0.044114" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                <properties />
                <test-case id="5718" name="HandlerNewGuid_ErrorDoesNotChangePrefabsAssetId(Prefab_SpawnDelegate_NewAssetId)" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab.HandlerNewGuid_ErrorDoesNotChangePrefabsAssetId(Prefab_SpawnDelegate_NewAssetId)" methodname="HandlerNewGuid_ErrorDoesNotChangePrefabsAssetId" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab" runstate="Runnable" seed="629007029" result="Passed" start-time="2021-03-06 06:27:07Z" end-time="2021-03-06 06:27:07Z" duration="0.011376" asserts="0">
                  <properties />
                  <output><![CDATA[Could not register Handler for 'ValidPrefabForClientScene' to 5794128c-dfda-0454-2985-151f82990d05 because it already had an AssetId, Existing assetId 33169286-da03-13d4-5ab5-bfccc6cf3775
]]></output>
                </test-case>
                <test-case id="5719" name="HandlerNewGuid_ErrorDoesNotChangePrefabsAssetId(Prefab_SpawnHandlerDelegate_NewAssetId)" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab.HandlerNewGuid_ErrorDoesNotChangePrefabsAssetId(Prefab_SpawnHandlerDelegate_NewAssetId)" methodname="HandlerNewGuid_ErrorDoesNotChangePrefabsAssetId" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab" runstate="Runnable" seed="1220040103" result="Passed" start-time="2021-03-06 06:27:07Z" end-time="2021-03-06 06:27:07Z" duration="0.022220" asserts="0">
                  <properties />
                  <output><![CDATA[Could not register Handler for 'ValidPrefabForClientScene' to 5794128c-dfda-0454-2985-151f82990d05 because it already had an AssetId, Existing assetId 33169286-da03-13d4-5ab5-bfccc6cf3775
]]></output>
                </test-case>
              </test-suite>
              <test-suite type="ParameterizedMethod" id="5725" name="HandlerNewGuid_NoErrorWhenAssetIdIsSameAsCurrentPrefab" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab.HandlerNewGuid_NoErrorWhenAssetIdIsSameAsCurrentPrefab" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab" runstate="Runnable" testcasecount="2" result="Passed" start-time="2021-03-06 06:27:07Z" end-time="2021-03-06 06:27:07Z" duration="0.040985" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                <properties />
                <test-case id="5723" name="HandlerNewGuid_NoErrorWhenAssetIdIsSameAsCurrentPrefab(Prefab_SpawnDelegate_NewAssetId)" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab.HandlerNewGuid_NoErrorWhenAssetIdIsSameAsCurrentPrefab(Prefab_SpawnDelegate_NewAssetId)" methodname="HandlerNewGuid_NoErrorWhenAssetIdIsSameAsCurrentPrefab" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab" runstate="Runnable" seed="1885274220" result="Passed" start-time="2021-03-06 06:27:07Z" end-time="2021-03-06 06:27:07Z" duration="0.011280" asserts="0">
                  <properties />
                </test-case>
                <test-case id="5724" name="HandlerNewGuid_NoErrorWhenAssetIdIsSameAsCurrentPrefab(Prefab_SpawnHandlerDelegate_NewAssetId)" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab.HandlerNewGuid_NoErrorWhenAssetIdIsSameAsCurrentPrefab(Prefab_SpawnHandlerDelegate_NewAssetId)" methodname="HandlerNewGuid_NoErrorWhenAssetIdIsSameAsCurrentPrefab" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab" runstate="Runnable" seed="23168360" result="Passed" start-time="2021-03-06 06:27:07Z" end-time="2021-03-06 06:27:07Z" duration="0.018893" asserts="0">
                  <properties />
                </test-case>
              </test-suite>
              <test-suite type="ParameterizedMethod" id="5743" name="NewGuid_ErrorForEmptyGuid" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab.NewGuid_ErrorForEmptyGuid" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab" runstate="Runnable" testcasecount="3" result="Passed" start-time="2021-03-06 06:27:07Z" end-time="2021-03-06 06:27:07Z" duration="0.056573" total="3" passed="3" failed="0" inconclusive="0" skipped="0" asserts="0">
                <properties />
                <test-case id="5740" name="NewGuid_ErrorForEmptyGuid(Prefab_NewAssetId)" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab.NewGuid_ErrorForEmptyGuid(Prefab_NewAssetId)" methodname="NewGuid_ErrorForEmptyGuid" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab" runstate="Runnable" seed="1954134011" result="Passed" start-time="2021-03-06 06:27:07Z" end-time="2021-03-06 06:27:07Z" duration="0.011308" asserts="0">
                  <properties />
                  <output><![CDATA[Could not register 'ValidPrefabForClientScene' with new assetId because the new assetId was empty
]]></output>
                </test-case>
                <test-case id="5741" name="NewGuid_ErrorForEmptyGuid(Prefab_SpawnDelegate_NewAssetId)" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab.NewGuid_ErrorForEmptyGuid(Prefab_SpawnDelegate_NewAssetId)" methodname="NewGuid_ErrorForEmptyGuid" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab" runstate="Runnable" seed="1706250528" result="Passed" start-time="2021-03-06 06:27:07Z" end-time="2021-03-06 06:27:07Z" duration="0.018721" asserts="0">
                  <properties />
                  <output><![CDATA[Could not register handler for 'ValidPrefabForClientScene' with new assetId because the new assetId was empty
]]></output>
                </test-case>
                <test-case id="5742" name="NewGuid_ErrorForEmptyGuid(Prefab_SpawnHandlerDelegate_NewAssetId)" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab.NewGuid_ErrorForEmptyGuid(Prefab_SpawnHandlerDelegate_NewAssetId)" methodname="NewGuid_ErrorForEmptyGuid" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab" runstate="Runnable" seed="1400464646" result="Passed" start-time="2021-03-06 06:27:07Z" end-time="2021-03-06 06:27:07Z" duration="0.015186" asserts="0">
                  <properties />
                  <output><![CDATA[Could not register handler for 'ValidPrefabForClientScene' with new assetId because the new assetId was empty
]]></output>
                </test-case>
              </test-suite>
              <test-suite type="ParameterizedMethod" id="5715" name="Prefab_AddsPrefabToDictionary" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab.Prefab_AddsPrefabToDictionary" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab" runstate="Runnable" testcasecount="1" result="Passed" start-time="2021-03-06 06:27:07Z" end-time="2021-03-06 06:27:07Z" duration="0.018936" total="1" passed="1" failed="0" inconclusive="0" skipped="0" asserts="0">
                <properties />
                <test-case id="5714" name="Prefab_AddsPrefabToDictionary(Prefab)" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab.Prefab_AddsPrefabToDictionary(Prefab)" methodname="Prefab_AddsPrefabToDictionary" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab" runstate="Runnable" seed="94680583" result="Passed" start-time="2021-03-06 06:27:07Z" end-time="2021-03-06 06:27:07Z" duration="0.012138" asserts="0">
                  <properties />
                </test-case>
              </test-suite>
              <test-suite type="ParameterizedMethod" id="5753" name="Prefab_WarningForAssetIdAlreadyExistingInPrefabsDictionary" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab.Prefab_WarningForAssetIdAlreadyExistingInPrefabsDictionary" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab" runstate="Runnable" testcasecount="1" result="Passed" start-time="2021-03-06 06:27:07Z" end-time="2021-03-06 06:27:07Z" duration="0.021680" total="1" passed="1" failed="0" inconclusive="0" skipped="0" asserts="0">
                <properties />
                <test-case id="5752" name="Prefab_WarningForAssetIdAlreadyExistingInPrefabsDictionary(Prefab)" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab.Prefab_WarningForAssetIdAlreadyExistingInPrefabsDictionary(Prefab)" methodname="Prefab_WarningForAssetIdAlreadyExistingInPrefabsDictionary" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab" runstate="Runnable" seed="1158352211" result="Passed" start-time="2021-03-06 06:27:07Z" end-time="2021-03-06 06:27:07Z" duration="0.015731" asserts="0">
                  <properties />
                  <output><![CDATA[Replacing existing prefab with assetId '33169286-da03-13d4-5ab5-bfccc6cf3775'. Old prefab 'ValidPrefabForClientScene', New prefab 'ValidPrefabForClientScene'
]]></output>
                </test-case>
              </test-suite>
              <test-suite type="ParameterizedMethod" id="5717" name="PrefabNewGuid_ErrorDoesNotChangePrefabsAssetId" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab.PrefabNewGuid_ErrorDoesNotChangePrefabsAssetId" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab" runstate="Runnable" testcasecount="1" result="Passed" start-time="2021-03-06 06:27:07Z" end-time="2021-03-06 06:27:07Z" duration="0.017657" total="1" passed="1" failed="0" inconclusive="0" skipped="0" asserts="0">
                <properties />
                <test-case id="5716" name="PrefabNewGuid_ErrorDoesNotChangePrefabsAssetId(Prefab_NewAssetId)" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab.PrefabNewGuid_ErrorDoesNotChangePrefabsAssetId(Prefab_NewAssetId)" methodname="PrefabNewGuid_ErrorDoesNotChangePrefabsAssetId" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab" runstate="Runnable" seed="1885992798" result="Passed" start-time="2021-03-06 06:27:07Z" end-time="2021-03-06 06:27:07Z" duration="0.012056" asserts="0">
                  <properties />
                  <output><![CDATA[Could not register 'ValidPrefabForClientScene' to 5794128c-dfda-0454-2985-151f82990d05 because it already had an AssetId, Existing assetId 33169286-da03-13d4-5ab5-bfccc6cf3775
]]></output>
                </test-case>
              </test-suite>
              <test-suite type="ParameterizedMethod" id="5722" name="PrefabNewGuid_NoErrorWhenNewAssetIdIsSameAsCurrentPrefab" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab.PrefabNewGuid_NoErrorWhenNewAssetIdIsSameAsCurrentPrefab" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab" runstate="Runnable" testcasecount="1" result="Passed" start-time="2021-03-06 06:27:07Z" end-time="2021-03-06 06:27:07Z" duration="0.017561" total="1" passed="1" failed="0" inconclusive="0" skipped="0" asserts="0">
                <properties />
                <test-case id="5721" name="PrefabNewGuid_NoErrorWhenNewAssetIdIsSameAsCurrentPrefab(Prefab_NewAssetId)" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab.PrefabNewGuid_NoErrorWhenNewAssetIdIsSameAsCurrentPrefab(Prefab_NewAssetId)" methodname="PrefabNewGuid_NoErrorWhenNewAssetIdIsSameAsCurrentPrefab" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab" runstate="Runnable" seed="1898119178" result="Passed" start-time="2021-03-06 06:27:07Z" end-time="2021-03-06 06:27:07Z" duration="0.011682" asserts="0">
                  <properties />
                </test-case>
              </test-suite>
              <test-suite type="ParameterizedMethod" id="5762" name="SpawnDelegate_AddsHandlerToSpawnHandlers" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab.SpawnDelegate_AddsHandlerToSpawnHandlers" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab" runstate="Runnable" testcasecount="1" result="Passed" start-time="2021-03-06 06:27:07Z" end-time="2021-03-06 06:27:07Z" duration="0.017610" total="1" passed="1" failed="0" inconclusive="0" skipped="0" asserts="0">
                <properties />
                <test-case id="5761" name="SpawnDelegate_AddsHandlerToSpawnHandlers(Prefab_SpawnDelegate)" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab.SpawnDelegate_AddsHandlerToSpawnHandlers(Prefab_SpawnDelegate)" methodname="SpawnDelegate_AddsHandlerToSpawnHandlers" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab" runstate="Runnable" seed="1189267422" result="Passed" start-time="2021-03-06 06:27:07Z" end-time="2021-03-06 06:27:07Z" duration="0.011724" asserts="0">
                  <properties />
                </test-case>
              </test-suite>
              <test-suite type="ParameterizedMethod" id="5764" name="SpawnDelegate_AddsHandlerToSpawnHandlersWithCorrectArguments" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab.SpawnDelegate_AddsHandlerToSpawnHandlersWithCorrectArguments" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab" runstate="Runnable" testcasecount="1" result="Passed" start-time="2021-03-06 06:27:07Z" end-time="2021-03-06 06:27:07Z" duration="0.018696" total="1" passed="1" failed="0" inconclusive="0" skipped="0" asserts="0">
                <properties />
                <test-case id="5763" name="SpawnDelegate_AddsHandlerToSpawnHandlersWithCorrectArguments(Prefab_SpawnDelegate)" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab.SpawnDelegate_AddsHandlerToSpawnHandlersWithCorrectArguments(Prefab_SpawnDelegate)" methodname="SpawnDelegate_AddsHandlerToSpawnHandlersWithCorrectArguments" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab" runstate="Runnable" seed="952433878" result="Passed" start-time="2021-03-06 06:27:07Z" end-time="2021-03-06 06:27:07Z" duration="0.011725" asserts="0">
                  <properties />
                </test-case>
              </test-suite>
              <test-suite type="ParameterizedMethod" id="5767" name="SpawnDelegate_ErrorWhenSpawnHandlerIsNull" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab.SpawnDelegate_ErrorWhenSpawnHandlerIsNull" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab" runstate="Runnable" testcasecount="2" result="Passed" start-time="2021-03-06 06:27:07Z" end-time="2021-03-06 06:27:07Z" duration="0.037733" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                <properties />
                <test-case id="5765" name="SpawnDelegate_ErrorWhenSpawnHandlerIsNull(Prefab_SpawnDelegate)" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab.SpawnDelegate_ErrorWhenSpawnHandlerIsNull(Prefab_SpawnDelegate)" methodname="SpawnDelegate_ErrorWhenSpawnHandlerIsNull" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab" runstate="Runnable" seed="1258511455" result="Passed" start-time="2021-03-06 06:27:07Z" end-time="2021-03-06 06:27:07Z" duration="0.011822" asserts="0">
                  <properties />
                  <output><![CDATA[Can not Register null SpawnHandler for 33169286-da03-13d4-5ab5-bfccc6cf3775
]]></output>
                </test-case>
                <test-case id="5766" name="SpawnDelegate_ErrorWhenSpawnHandlerIsNull(Prefab_SpawnDelegate_NewAssetId)" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab.SpawnDelegate_ErrorWhenSpawnHandlerIsNull(Prefab_SpawnDelegate_NewAssetId)" methodname="SpawnDelegate_ErrorWhenSpawnHandlerIsNull" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab" runstate="Runnable" seed="1145134038" result="Passed" start-time="2021-03-06 06:27:07Z" end-time="2021-03-06 06:27:07Z" duration="0.018469" asserts="0">
                  <properties />
                  <output><![CDATA[Can not Register null SpawnHandler for 5794128c-dfda-0454-2985-151f82990d05
]]></output>
                </test-case>
              </test-suite>
              <test-suite type="ParameterizedMethod" id="5769" name="SpawnHandleDelegate_AddsHandlerToSpawnHandlers" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab.SpawnHandleDelegate_AddsHandlerToSpawnHandlers" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab" runstate="Runnable" testcasecount="1" result="Passed" start-time="2021-03-06 06:27:07Z" end-time="2021-03-06 06:27:07Z" duration="0.017458" total="1" passed="1" failed="0" inconclusive="0" skipped="0" asserts="0">
                <properties />
                <test-case id="5768" name="SpawnHandleDelegate_AddsHandlerToSpawnHandlers(Prefab_SpawnHandlerDelegate)" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab.SpawnHandleDelegate_AddsHandlerToSpawnHandlers(Prefab_SpawnHandlerDelegate)" methodname="SpawnHandleDelegate_AddsHandlerToSpawnHandlers" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab" runstate="Runnable" seed="1888764089" result="Passed" start-time="2021-03-06 06:27:07Z" end-time="2021-03-06 06:27:07Z" duration="0.012131" asserts="0">
                  <properties />
                </test-case>
              </test-suite>
              <test-suite type="ParameterizedMethod" id="5771" name="SpawnHandleDelegate_ErrorWhenSpawnHandlerIsNull" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab.SpawnHandleDelegate_ErrorWhenSpawnHandlerIsNull" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab" runstate="Runnable" testcasecount="1" result="Passed" start-time="2021-03-06 06:27:07Z" end-time="2021-03-06 06:27:07Z" duration="0.021952" total="1" passed="1" failed="0" inconclusive="0" skipped="0" asserts="0">
                <properties />
                <test-case id="5770" name="SpawnHandleDelegate_ErrorWhenSpawnHandlerIsNull(Prefab_SpawnHandlerDelegate)" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab.SpawnHandleDelegate_ErrorWhenSpawnHandlerIsNull(Prefab_SpawnHandlerDelegate)" methodname="SpawnHandleDelegate_ErrorWhenSpawnHandlerIsNull" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab" runstate="Runnable" seed="906238977" result="Passed" start-time="2021-03-06 06:27:07Z" end-time="2021-03-06 06:27:07Z" duration="0.016034" asserts="0">
                  <properties />
                  <output><![CDATA[Can not Register null SpawnHandler for 33169286-da03-13d4-5ab5-bfccc6cf3775
]]></output>
                </test-case>
              </test-suite>
              <test-suite type="ParameterizedMethod" id="5760" name="WarningForAssetIdAlreadyExistingInHandlersDictionary" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab.WarningForAssetIdAlreadyExistingInHandlersDictionary" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab" runstate="Runnable" testcasecount="3" result="Passed" start-time="2021-03-06 06:27:07Z" end-time="2021-03-06 06:27:07Z" duration="0.058113" total="3" passed="3" failed="0" inconclusive="0" skipped="0" asserts="0">
                <properties />
                <test-case id="5757" name="WarningForAssetIdAlreadyExistingInHandlersDictionary(Prefab)" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab.WarningForAssetIdAlreadyExistingInHandlersDictionary(Prefab)" methodname="WarningForAssetIdAlreadyExistingInHandlersDictionary" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab" runstate="Runnable" seed="653377568" result="Passed" start-time="2021-03-06 06:27:07Z" end-time="2021-03-06 06:27:07Z" duration="0.011846" asserts="0">
                  <properties />
                  <output><![CDATA[Adding prefab 'ValidPrefabForClientScene' with assetId '33169286-da03-13d4-5ab5-bfccc6cf3775' when spawnHandlers with same assetId already exists.
]]></output>
                </test-case>
                <test-case id="5758" name="WarningForAssetIdAlreadyExistingInHandlersDictionary(Prefab_SpawnDelegate)" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab.WarningForAssetIdAlreadyExistingInHandlersDictionary(Prefab_SpawnDelegate)" methodname="WarningForAssetIdAlreadyExistingInHandlersDictionary" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab" runstate="Runnable" seed="2065320487" result="Passed" start-time="2021-03-06 06:27:07Z" end-time="2021-03-06 06:27:07Z" duration="0.022360" asserts="0">
                  <properties />
                  <output><![CDATA[Replacing existing spawnHandlers for prefab 'ValidPrefabForClientScene' with assetId '33169286-da03-13d4-5ab5-bfccc6cf3775'
]]></output>
                </test-case>
                <test-case id="5759" name="WarningForAssetIdAlreadyExistingInHandlersDictionary(Prefab_SpawnHandlerDelegate)" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab.WarningForAssetIdAlreadyExistingInHandlersDictionary(Prefab_SpawnHandlerDelegate)" methodname="WarningForAssetIdAlreadyExistingInHandlersDictionary" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab" runstate="Runnable" seed="331540252" result="Passed" start-time="2021-03-06 06:27:07Z" end-time="2021-03-06 06:27:07Z" duration="0.014361" asserts="0">
                  <properties />
                  <output><![CDATA[Replacing existing spawnHandlers for prefab 'ValidPrefabForClientScene' with assetId '33169286-da03-13d4-5ab5-bfccc6cf3775'
]]></output>
                </test-case>
              </test-suite>
              <test-suite type="ParameterizedMethod" id="5751" name="WarningForNetworkIdentityInChildren" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab.WarningForNetworkIdentityInChildren" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab" runstate="Runnable" testcasecount="3" result="Passed" start-time="2021-03-06 06:27:07Z" end-time="2021-03-06 06:27:07Z" duration="0.055069" total="3" passed="3" failed="0" inconclusive="0" skipped="0" asserts="0">
                <properties />
                <test-case id="5748" name="WarningForNetworkIdentityInChildren(Prefab)" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab.WarningForNetworkIdentityInChildren(Prefab)" methodname="WarningForNetworkIdentityInChildren" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab" runstate="Runnable" seed="1983767210" result="Passed" start-time="2021-03-06 06:27:07Z" end-time="2021-03-06 06:27:07Z" duration="0.011777" asserts="0">
                  <properties />
                  <output><![CDATA[Prefab 'PrefabWithChildrenForClientScene' has multiple NetworkIdentity components. There should only be one NetworkIdentity on a prefab, and it must be on the root object.
]]></output>
                </test-case>
                <test-case id="5749" name="WarningForNetworkIdentityInChildren(Prefab_SpawnDelegate)" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab.WarningForNetworkIdentityInChildren(Prefab_SpawnDelegate)" methodname="WarningForNetworkIdentityInChildren" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab" runstate="Runnable" seed="74943979" result="Passed" start-time="2021-03-06 06:27:07Z" end-time="2021-03-06 06:27:07Z" duration="0.019020" asserts="0">
                  <properties />
                  <output><![CDATA[Prefab 'PrefabWithChildrenForClientScene' has multiple NetworkIdentity components. There should only be one NetworkIdentity on a prefab, and it must be on the root object.
]]></output>
                </test-case>
                <test-case id="5750" name="WarningForNetworkIdentityInChildren(Prefab_SpawnHandlerDelegate)" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab.WarningForNetworkIdentityInChildren(Prefab_SpawnHandlerDelegate)" methodname="WarningForNetworkIdentityInChildren" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab" runstate="Runnable" seed="1757793594" result="Passed" start-time="2021-03-06 06:27:07Z" end-time="2021-03-06 06:27:07Z" duration="0.013579" asserts="0">
                  <properties />
                  <output><![CDATA[Prefab 'PrefabWithChildrenForClientScene' has multiple NetworkIdentity components. There should only be one NetworkIdentity on a prefab, and it must be on the root object.
]]></output>
                </test-case>
              </test-suite>
            </test-suite>
            <test-suite type="TestFixture" id="5789" name="ClientSceneTests_RegisterSpawnHandler" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterSpawnHandler" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterSpawnHandler" runstate="Runnable" testcasecount="15" result="Passed" start-time="2021-03-06 06:27:07Z" end-time="2021-03-06 06:27:08Z" duration="0.270856" total="15" passed="15" failed="0" inconclusive="0" skipped="0" asserts="0">
              <properties />
              <test-case id="5790" name="SpawnDelegate_AddsHandlerToSpawnHandlers" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterSpawnHandler.SpawnDelegate_AddsHandlerToSpawnHandlers" methodname="SpawnDelegate_AddsHandlerToSpawnHandlers" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterSpawnHandler" runstate="Runnable" seed="801373995" result="Passed" start-time="2021-03-06 06:27:07Z" end-time="2021-03-06 06:27:07Z" duration="0.011230" asserts="0">
                <properties />
              </test-case>
              <test-case id="5791" name="SpawnDelegate_AddsHandlerToSpawnHandlersWithCorrectArguments" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterSpawnHandler.SpawnDelegate_AddsHandlerToSpawnHandlersWithCorrectArguments" methodname="SpawnDelegate_AddsHandlerToSpawnHandlersWithCorrectArguments" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterSpawnHandler" runstate="Runnable" seed="2058877685" result="Passed" start-time="2021-03-06 06:27:07Z" end-time="2021-03-06 06:27:07Z" duration="0.018637" asserts="0">
                <properties />
              </test-case>
              <test-case id="5792" name="SpawnDelegate_AddsHandlerToUnSpawnHandlers" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterSpawnHandler.SpawnDelegate_AddsHandlerToUnSpawnHandlers" methodname="SpawnDelegate_AddsHandlerToUnSpawnHandlers" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterSpawnHandler" runstate="Runnable" seed="388164850" result="Passed" start-time="2021-03-06 06:27:07Z" end-time="2021-03-06 06:27:07Z" duration="0.019504" asserts="0">
                <properties />
              </test-case>
              <test-case id="5795" name="SpawnDelegate_ErrorWhenAssetIdIsEmpty" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterSpawnHandler.SpawnDelegate_ErrorWhenAssetIdIsEmpty" methodname="SpawnDelegate_ErrorWhenAssetIdIsEmpty" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterSpawnHandler" runstate="Runnable" seed="2106261103" result="Passed" start-time="2021-03-06 06:27:07Z" end-time="2021-03-06 06:27:07Z" duration="0.018048" asserts="0">
                <properties />
                <output><![CDATA[Can not Register SpawnHandler for empty Guid
]]></output>
              </test-case>
              <test-case id="5797" name="SpawnDelegate_ErrorWhenHandlerForGuidAlreadyExistsInPrefabDictionary" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterSpawnHandler.SpawnDelegate_ErrorWhenHandlerForGuidAlreadyExistsInPrefabDictionary" methodname="SpawnDelegate_ErrorWhenHandlerForGuidAlreadyExistsInPrefabDictionary" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterSpawnHandler" runstate="Runnable" seed="29928300" result="Passed" start-time="2021-03-06 06:27:07Z" end-time="2021-03-06 06:27:07Z" duration="0.018198" asserts="0">
                <properties />
                <output><![CDATA[assetId '29abad6a-4c2c-4d2c-a449-66fa65a0ae7c' is already used by prefab 'ValidPrefabForClientScene'
]]></output>
              </test-case>
              <test-case id="5793" name="SpawnDelegate_ErrorWhenSpawnHandlerIsNull" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterSpawnHandler.SpawnDelegate_ErrorWhenSpawnHandlerIsNull" methodname="SpawnDelegate_ErrorWhenSpawnHandlerIsNull" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterSpawnHandler" runstate="Runnable" seed="617685338" result="Passed" start-time="2021-03-06 06:27:07Z" end-time="2021-03-06 06:27:07Z" duration="0.014710" asserts="0">
                <properties />
                <output><![CDATA[Can not Register null SpawnHandler for 26b3685d-8420-4db5-9454-906ae7fd7543
]]></output>
              </test-case>
              <test-case id="5794" name="SpawnDelegate_ErrorWhenUnSpawnHandlerIsNull" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterSpawnHandler.SpawnDelegate_ErrorWhenUnSpawnHandlerIsNull" methodname="SpawnDelegate_ErrorWhenUnSpawnHandlerIsNull" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterSpawnHandler" runstate="Runnable" seed="1204923079" result="Passed" start-time="2021-03-06 06:27:07Z" end-time="2021-03-06 06:27:07Z" duration="0.014511" asserts="0">
                <properties />
                <output><![CDATA[Can not Register null UnSpawnHandler for 78aefbb1-12cb-4fc4-90dd-78cea69f97e6
]]></output>
              </test-case>
              <test-case id="5796" name="SpawnDelegate_WarningWhenHandlerForGuidAlreadyExistsInHandlerDictionary" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterSpawnHandler.SpawnDelegate_WarningWhenHandlerForGuidAlreadyExistsInHandlerDictionary" methodname="SpawnDelegate_WarningWhenHandlerForGuidAlreadyExistsInHandlerDictionary" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterSpawnHandler" runstate="Runnable" seed="1373781793" result="Passed" start-time="2021-03-06 06:27:07Z" end-time="2021-03-06 06:27:07Z" duration="0.014579" asserts="0">
                <properties />
                <output><![CDATA[Replacing existing spawnHandlers for 7d39a546-3675-46cd-9789-884e545b9b1e
]]></output>
              </test-case>
              <test-case id="5798" name="SpawnHandlerDelegate_AddsHandlerToSpawnHandlers" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterSpawnHandler.SpawnHandlerDelegate_AddsHandlerToSpawnHandlers" methodname="SpawnHandlerDelegate_AddsHandlerToSpawnHandlers" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterSpawnHandler" runstate="Runnable" seed="2025179971" result="Passed" start-time="2021-03-06 06:27:07Z" end-time="2021-03-06 06:27:07Z" duration="0.014298" asserts="0">
                <properties />
              </test-case>
              <test-case id="5799" name="SpawnHandlerDelegate_AddsHandlerToUnSpawnHandlers" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterSpawnHandler.SpawnHandlerDelegate_AddsHandlerToUnSpawnHandlers" methodname="SpawnHandlerDelegate_AddsHandlerToUnSpawnHandlers" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterSpawnHandler" runstate="Runnable" seed="847155101" result="Passed" start-time="2021-03-06 06:27:07Z" end-time="2021-03-06 06:27:07Z" duration="0.015186" asserts="0">
                <properties />
              </test-case>
              <test-case id="5802" name="SpawnHandlerDelegate_ErrorWhenAssetIdIsEmpty" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterSpawnHandler.SpawnHandlerDelegate_ErrorWhenAssetIdIsEmpty" methodname="SpawnHandlerDelegate_ErrorWhenAssetIdIsEmpty" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterSpawnHandler" runstate="Runnable" seed="1623750645" result="Passed" start-time="2021-03-06 06:27:07Z" end-time="2021-03-06 06:27:07Z" duration="0.018450" asserts="0">
                <properties />
                <output><![CDATA[Can not Register SpawnHandler for empty Guid
]]></output>
              </test-case>
              <test-case id="5804" name="SpawnHandlerDelegate_ErrorWhenHandlerForGuidAlreadyExistsInPrefabDictionary" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterSpawnHandler.SpawnHandlerDelegate_ErrorWhenHandlerForGuidAlreadyExistsInPrefabDictionary" methodname="SpawnHandlerDelegate_ErrorWhenHandlerForGuidAlreadyExistsInPrefabDictionary" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterSpawnHandler" runstate="Runnable" seed="1796573943" result="Passed" start-time="2021-03-06 06:27:07Z" end-time="2021-03-06 06:27:07Z" duration="0.014926" asserts="0">
                <properties />
                <output><![CDATA[assetId '985158ba-f0af-4af5-94b1-c6470494a995' is already used by prefab 'ValidPrefabForClientScene'
]]></output>
              </test-case>
              <test-case id="5800" name="SpawnHandlerDelegate_ErrorWhenSpawnHandlerIsNull" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterSpawnHandler.SpawnHandlerDelegate_ErrorWhenSpawnHandlerIsNull" methodname="SpawnHandlerDelegate_ErrorWhenSpawnHandlerIsNull" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterSpawnHandler" runstate="Runnable" seed="1064327682" result="Passed" start-time="2021-03-06 06:27:07Z" end-time="2021-03-06 06:27:07Z" duration="0.014379" asserts="0">
                <properties />
                <output><![CDATA[Can not Register null SpawnHandler for 75851632-0ff9-4dde-ac7f-9e9aff3affde
]]></output>
              </test-case>
              <test-case id="5801" name="SpawnHandlerDelegate_ErrorWhenUnSpawnHandlerIsNull" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterSpawnHandler.SpawnHandlerDelegate_ErrorWhenUnSpawnHandlerIsNull" methodname="SpawnHandlerDelegate_ErrorWhenUnSpawnHandlerIsNull" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterSpawnHandler" runstate="Runnable" seed="1073276634" result="Passed" start-time="2021-03-06 06:27:07Z" end-time="2021-03-06 06:27:08Z" duration="0.014468" asserts="0">
                <properties />
                <output><![CDATA[Can not Register null UnSpawnHandler for 472b2f2a-794b-4f44-8753-1b30c9f95c55
]]></output>
              </test-case>
              <test-case id="5803" name="SpawnHandlerDelegate_WarningWhenHandlerForGuidAlreadyExistsInHandlerDictionary" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterSpawnHandler.SpawnHandlerDelegate_WarningWhenHandlerForGuidAlreadyExistsInHandlerDictionary" methodname="SpawnHandlerDelegate_WarningWhenHandlerForGuidAlreadyExistsInHandlerDictionary" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterSpawnHandler" runstate="Runnable" seed="1270212894" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.018233" asserts="0">
                <properties />
                <output><![CDATA[Replacing existing spawnHandlers for 5e039ccf-861f-4854-9034-27411bce79cb
]]></output>
              </test-case>
            </test-suite>
            <test-suite type="TestFixture" id="5805" name="ClientSceneTests_UnregisterPrefab" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_UnregisterPrefab" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_UnregisterPrefab" runstate="Runnable" testcasecount="5" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.088459" total="5" passed="5" failed="0" inconclusive="0" skipped="0" asserts="0">
              <properties />
              <test-case id="5810" name="ErrorWhenPrefabHasNoNetworkIdentity" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_UnregisterPrefab.ErrorWhenPrefabHasNoNetworkIdentity" methodname="ErrorWhenPrefabHasNoNetworkIdentity" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_UnregisterPrefab" runstate="Runnable" seed="1593293260" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.011428" asserts="0">
                <properties />
                <output><![CDATA[Could not unregister 'invalidPrefabForClientScene' since it contains no NetworkIdentity component
]]></output>
              </test-case>
              <test-case id="5809" name="ErrorWhenPrefabIsNull" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_UnregisterPrefab.ErrorWhenPrefabIsNull" methodname="ErrorWhenPrefabIsNull" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_UnregisterPrefab" runstate="Runnable" seed="183557594" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.018525" asserts="0">
                <properties />
                <output><![CDATA[Could not unregister prefab because it was null
]]></output>
              </test-case>
              <test-case id="5806" name="RemovesPrefabFromDictionary" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_UnregisterPrefab.RemovesPrefabFromDictionary" methodname="RemovesPrefabFromDictionary" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_UnregisterPrefab" runstate="Runnable" seed="772963826" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.019365" asserts="0">
                <properties />
              </test-case>
              <test-case id="5807" name="RemovesSpawnHandlerFromDictionary" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_UnregisterPrefab.RemovesSpawnHandlerFromDictionary" methodname="RemovesSpawnHandlerFromDictionary" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_UnregisterPrefab" runstate="Runnable" seed="230162158" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.014891" asserts="0">
                <properties />
              </test-case>
              <test-case id="5808" name="RemovesUnSpawnHandlerFromDictionary" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_UnregisterPrefab.RemovesUnSpawnHandlerFromDictionary" methodname="RemovesUnSpawnHandlerFromDictionary" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_UnregisterPrefab" runstate="Runnable" seed="1913219324" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.014266" asserts="0">
                <properties />
              </test-case>
            </test-suite>
            <test-suite type="TestFixture" id="5811" name="ClientSceneTests_UnregisterSpawnHandler" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_UnregisterSpawnHandler" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_UnregisterSpawnHandler" runstate="Runnable" testcasecount="3" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.055914" total="3" passed="3" failed="0" inconclusive="0" skipped="0" asserts="0">
              <properties />
              <test-case id="5814" name="DoesNotRemovePrefabDictionary" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_UnregisterSpawnHandler.DoesNotRemovePrefabDictionary" methodname="DoesNotRemovePrefabDictionary" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_UnregisterSpawnHandler" runstate="Runnable" seed="429267196" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.011944" asserts="0">
                <properties />
              </test-case>
              <test-case id="5812" name="RemovesSpawnHandlersFromDictionary" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_UnregisterSpawnHandler.RemovesSpawnHandlersFromDictionary" methodname="RemovesSpawnHandlersFromDictionary" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_UnregisterSpawnHandler" runstate="Runnable" seed="114550694" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.018611" asserts="0">
                <properties />
              </test-case>
              <test-case id="5813" name="RemovesUnSpawnHandlersFromDictionary" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_UnregisterSpawnHandler.RemovesUnSpawnHandlersFromDictionary" methodname="RemovesUnSpawnHandlersFromDictionary" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_UnregisterSpawnHandler" runstate="Runnable" seed="972922233" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.015177" asserts="0">
                <properties />
              </test-case>
            </test-suite>
          </test-suite>
          <test-suite type="TestFixture" id="3677" name="CompressionFloatTest" fullname="Mirror.Tests.CompressionFloatTest" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" testcasecount="456" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:09Z" duration="1.165953" total="456" passed="456" failed="0" inconclusive="0" skipped="0" asserts="0">
            <properties />
            <test-suite type="ParameterizedMethod" id="4092" name="CanScaleToUintAndBack" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" testcasecount="414" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:09Z" duration="0.724506" total="414" passed="414" failed="0" inconclusive="0" skipped="0" asserts="0">
              <properties />
              <test-case id="3678" name="CanScaleToUintAndBack(-2.2f,-2.2f,2.5f,uint.MinValue,255,0.01843137f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(-2.2f,-2.2f,2.5f,uint.MinValue,255,0.01843137f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="2123534162" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.004808" asserts="0">
                <properties />
              </test-case>
              <test-case id="3679" name="CanScaleToUintAndBack(-2.1f,-2.2f,2.5f,uint.MinValue,255,0.01843137f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(-2.1f,-2.2f,2.5f,uint.MinValue,255,0.01843137f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="1428985736" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000823" asserts="0">
                <properties />
              </test-case>
              <test-case id="3680" name="CanScaleToUintAndBack(-2.0f,-2.2f,2.5f,uint.MinValue,255,0.01843137f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(-2.0f,-2.2f,2.5f,uint.MinValue,255,0.01843137f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="953506849" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000605" asserts="0">
                <properties />
              </test-case>
              <test-case id="3681" name="CanScaleToUintAndBack(-1.9f,-2.2f,2.5f,uint.MinValue,255,0.01843137f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(-1.9f,-2.2f,2.5f,uint.MinValue,255,0.01843137f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="985720170" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000546" asserts="0">
                <properties />
              </test-case>
              <test-case id="3682" name="CanScaleToUintAndBack(-1.8f,-2.2f,2.5f,uint.MinValue,255,0.01843137f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(-1.8f,-2.2f,2.5f,uint.MinValue,255,0.01843137f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="1295342651" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000563" asserts="0">
                <properties />
              </test-case>
              <test-case id="3683" name="CanScaleToUintAndBack(-1.7f,-2.2f,2.5f,uint.MinValue,255,0.01843137f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(-1.7f,-2.2f,2.5f,uint.MinValue,255,0.01843137f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="1176700818" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000495" asserts="0">
                <properties />
              </test-case>
              <test-case id="3684" name="CanScaleToUintAndBack(-1.6f,-2.2f,2.5f,uint.MinValue,255,0.01843137f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(-1.6f,-2.2f,2.5f,uint.MinValue,255,0.01843137f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="1977546710" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000549" asserts="0">
                <properties />
              </test-case>
              <test-case id="3685" name="CanScaleToUintAndBack(-1.5f,-2.2f,2.5f,uint.MinValue,255,0.01843137f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(-1.5f,-2.2f,2.5f,uint.MinValue,255,0.01843137f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="1450336060" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000547" asserts="0">
                <properties />
              </test-case>
              <test-case id="3686" name="CanScaleToUintAndBack(-1.4f,-2.2f,2.5f,uint.MinValue,255,0.01843137f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(-1.4f,-2.2f,2.5f,uint.MinValue,255,0.01843137f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="1650996798" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000494" asserts="0">
                <properties />
              </test-case>
              <test-case id="3687" name="CanScaleToUintAndBack(-1.3f,-2.2f,2.5f,uint.MinValue,255,0.01843137f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(-1.3f,-2.2f,2.5f,uint.MinValue,255,0.01843137f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="1908076263" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000619" asserts="0">
                <properties />
              </test-case>
              <test-case id="3688" name="CanScaleToUintAndBack(-1.2f,-2.2f,2.5f,uint.MinValue,255,0.01843137f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(-1.2f,-2.2f,2.5f,uint.MinValue,255,0.01843137f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="314383771" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000566" asserts="0">
                <properties />
              </test-case>
              <test-case id="3689" name="CanScaleToUintAndBack(-1.1f,-2.2f,2.5f,uint.MinValue,255,0.01843137f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(-1.1f,-2.2f,2.5f,uint.MinValue,255,0.01843137f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="519488505" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000490" asserts="0">
                <properties />
              </test-case>
              <test-case id="3690" name="CanScaleToUintAndBack(-1.0f,-2.2f,2.5f,uint.MinValue,255,0.01843137f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(-1.0f,-2.2f,2.5f,uint.MinValue,255,0.01843137f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="1777775448" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000522" asserts="0">
                <properties />
              </test-case>
              <test-case id="3691" name="CanScaleToUintAndBack(-0.9f,-2.2f,2.5f,uint.MinValue,255,0.01843137f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(-0.9f,-2.2f,2.5f,uint.MinValue,255,0.01843137f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="1921338028" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000486" asserts="0">
                <properties />
              </test-case>
              <test-case id="3692" name="CanScaleToUintAndBack(-0.8f,-2.2f,2.5f,uint.MinValue,255,0.01843137f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(-0.8f,-2.2f,2.5f,uint.MinValue,255,0.01843137f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="1492606995" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000539" asserts="0">
                <properties />
              </test-case>
              <test-case id="3693" name="CanScaleToUintAndBack(-0.6999999f,-2.2f,2.5f,uint.MinValue,255,0.01843137f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(-0.6999999f,-2.2f,2.5f,uint.MinValue,255,0.01843137f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="819689511" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000631" asserts="0">
                <properties />
              </test-case>
              <test-case id="3694" name="CanScaleToUintAndBack(-0.5999999f,-2.2f,2.5f,uint.MinValue,255,0.01843137f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(-0.5999999f,-2.2f,2.5f,uint.MinValue,255,0.01843137f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="14229153" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000486" asserts="0">
                <properties />
              </test-case>
              <test-case id="3695" name="CanScaleToUintAndBack(-0.4999999f,-2.2f,2.5f,uint.MinValue,255,0.01843137f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(-0.4999999f,-2.2f,2.5f,uint.MinValue,255,0.01843137f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="1514546748" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000493" asserts="0">
                <properties />
              </test-case>
              <test-case id="3696" name="CanScaleToUintAndBack(-0.3999999f,-2.2f,2.5f,uint.MinValue,255,0.01843137f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(-0.3999999f,-2.2f,2.5f,uint.MinValue,255,0.01843137f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="369000335" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000481" asserts="0">
                <properties />
              </test-case>
              <test-case id="3697" name="CanScaleToUintAndBack(-0.2999999f,-2.2f,2.5f,uint.MinValue,255,0.01843137f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(-0.2999999f,-2.2f,2.5f,uint.MinValue,255,0.01843137f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="1441553923" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000483" asserts="0">
                <properties />
              </test-case>
              <test-case id="3698" name="CanScaleToUintAndBack(-0.1999999f,-2.2f,2.5f,uint.MinValue,255,0.01843137f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(-0.1999999f,-2.2f,2.5f,uint.MinValue,255,0.01843137f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="1595160965" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000507" asserts="0">
                <properties />
              </test-case>
              <test-case id="3699" name="CanScaleToUintAndBack(-0.09999993f,-2.2f,2.5f,uint.MinValue,255,0.01843137f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(-0.09999993f,-2.2f,2.5f,uint.MinValue,255,0.01843137f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="1280181891" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000876" asserts="0">
                <properties />
              </test-case>
              <test-case id="3700" name="CanScaleToUintAndBack(7.450581E-08f,-2.2f,2.5f,uint.MinValue,255,0.01843137f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(7.450581E-08f,-2.2f,2.5f,uint.MinValue,255,0.01843137f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="375335929" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000547" asserts="0">
                <properties />
              </test-case>
              <test-case id="3701" name="CanScaleToUintAndBack(0.1000001f,-2.2f,2.5f,uint.MinValue,255,0.01843137f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(0.1000001f,-2.2f,2.5f,uint.MinValue,255,0.01843137f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="793518307" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000541" asserts="0">
                <properties />
              </test-case>
              <test-case id="3702" name="CanScaleToUintAndBack(0.2000001f,-2.2f,2.5f,uint.MinValue,255,0.01843137f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(0.2000001f,-2.2f,2.5f,uint.MinValue,255,0.01843137f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="773182448" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000748" asserts="0">
                <properties />
              </test-case>
              <test-case id="3703" name="CanScaleToUintAndBack(0.3000001f,-2.2f,2.5f,uint.MinValue,255,0.01843137f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(0.3000001f,-2.2f,2.5f,uint.MinValue,255,0.01843137f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="526243179" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000673" asserts="0">
                <properties />
              </test-case>
              <test-case id="3704" name="CanScaleToUintAndBack(0.4000001f,-2.2f,2.5f,uint.MinValue,255,0.01843137f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(0.4000001f,-2.2f,2.5f,uint.MinValue,255,0.01843137f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="604914474" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000634" asserts="0">
                <properties />
              </test-case>
              <test-case id="3705" name="CanScaleToUintAndBack(0.5000001f,-2.2f,2.5f,uint.MinValue,255,0.01843137f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(0.5000001f,-2.2f,2.5f,uint.MinValue,255,0.01843137f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="835649506" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000501" asserts="0">
                <properties />
              </test-case>
              <test-case id="3706" name="CanScaleToUintAndBack(0.6000001f,-2.2f,2.5f,uint.MinValue,255,0.01843137f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(0.6000001f,-2.2f,2.5f,uint.MinValue,255,0.01843137f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="1738349063" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000496" asserts="0">
                <properties />
              </test-case>
              <test-case id="3707" name="CanScaleToUintAndBack(0.7000001f,-2.2f,2.5f,uint.MinValue,255,0.01843137f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(0.7000001f,-2.2f,2.5f,uint.MinValue,255,0.01843137f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="1746185928" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000496" asserts="0">
                <properties />
              </test-case>
              <test-case id="3708" name="CanScaleToUintAndBack(0.8000001f,-2.2f,2.5f,uint.MinValue,255,0.01843137f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(0.8000001f,-2.2f,2.5f,uint.MinValue,255,0.01843137f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="2081331021" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000561" asserts="0">
                <properties />
              </test-case>
              <test-case id="3709" name="CanScaleToUintAndBack(0.9000002f,-2.2f,2.5f,uint.MinValue,255,0.01843137f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(0.9000002f,-2.2f,2.5f,uint.MinValue,255,0.01843137f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="658197590" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000540" asserts="0">
                <properties />
              </test-case>
              <test-case id="3710" name="CanScaleToUintAndBack(1.0f,-2.2f,2.5f,uint.MinValue,255,0.01843137f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(1.0f,-2.2f,2.5f,uint.MinValue,255,0.01843137f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="2053855080" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000630" asserts="0">
                <properties />
              </test-case>
              <test-case id="3711" name="CanScaleToUintAndBack(1.1f,-2.2f,2.5f,uint.MinValue,255,0.01843137f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(1.1f,-2.2f,2.5f,uint.MinValue,255,0.01843137f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="508558765" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000544" asserts="0">
                <properties />
              </test-case>
              <test-case id="3712" name="CanScaleToUintAndBack(1.2f,-2.2f,2.5f,uint.MinValue,255,0.01843137f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(1.2f,-2.2f,2.5f,uint.MinValue,255,0.01843137f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="481741733" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000495" asserts="0">
                <properties />
              </test-case>
              <test-case id="3713" name="CanScaleToUintAndBack(1.3f,-2.2f,2.5f,uint.MinValue,255,0.01843137f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(1.3f,-2.2f,2.5f,uint.MinValue,255,0.01843137f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="1194830558" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000501" asserts="0">
                <properties />
              </test-case>
              <test-case id="3714" name="CanScaleToUintAndBack(1.4f,-2.2f,2.5f,uint.MinValue,255,0.01843137f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(1.4f,-2.2f,2.5f,uint.MinValue,255,0.01843137f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="1538032253" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000584" asserts="0">
                <properties />
              </test-case>
              <test-case id="3715" name="CanScaleToUintAndBack(1.5f,-2.2f,2.5f,uint.MinValue,255,0.01843137f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(1.5f,-2.2f,2.5f,uint.MinValue,255,0.01843137f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="1106154024" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000554" asserts="0">
                <properties />
              </test-case>
              <test-case id="3716" name="CanScaleToUintAndBack(1.6f,-2.2f,2.5f,uint.MinValue,255,0.01843137f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(1.6f,-2.2f,2.5f,uint.MinValue,255,0.01843137f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="1476377729" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000560" asserts="0">
                <properties />
              </test-case>
              <test-case id="3717" name="CanScaleToUintAndBack(1.7f,-2.2f,2.5f,uint.MinValue,255,0.01843137f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(1.7f,-2.2f,2.5f,uint.MinValue,255,0.01843137f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="2036748849" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000497" asserts="0">
                <properties />
              </test-case>
              <test-case id="3718" name="CanScaleToUintAndBack(1.8f,-2.2f,2.5f,uint.MinValue,255,0.01843137f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(1.8f,-2.2f,2.5f,uint.MinValue,255,0.01843137f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="1304634850" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000485" asserts="0">
                <properties />
              </test-case>
              <test-case id="3719" name="CanScaleToUintAndBack(1.9f,-2.2f,2.5f,uint.MinValue,255,0.01843137f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(1.9f,-2.2f,2.5f,uint.MinValue,255,0.01843137f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="971849416" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000504" asserts="0">
                <properties />
              </test-case>
              <test-case id="3720" name="CanScaleToUintAndBack(2.0f,-2.2f,2.5f,uint.MinValue,255,0.01843137f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(2.0f,-2.2f,2.5f,uint.MinValue,255,0.01843137f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="655402062" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000486" asserts="0">
                <properties />
              </test-case>
              <test-case id="3721" name="CanScaleToUintAndBack(2.1f,-2.2f,2.5f,uint.MinValue,255,0.01843137f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(2.1f,-2.2f,2.5f,uint.MinValue,255,0.01843137f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="325761490" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000874" asserts="0">
                <properties />
              </test-case>
              <test-case id="3722" name="CanScaleToUintAndBack(2.2f,-2.2f,2.5f,uint.MinValue,255,0.01843137f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(2.2f,-2.2f,2.5f,uint.MinValue,255,0.01843137f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="167134069" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000534" asserts="0">
                <properties />
              </test-case>
              <test-case id="3723" name="CanScaleToUintAndBack(2.3f,-2.2f,2.5f,uint.MinValue,255,0.01843137f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(2.3f,-2.2f,2.5f,uint.MinValue,255,0.01843137f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="510426906" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000511" asserts="0">
                <properties />
              </test-case>
              <test-case id="3724" name="CanScaleToUintAndBack(2.4f,-2.2f,2.5f,uint.MinValue,255,0.01843137f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(2.4f,-2.2f,2.5f,uint.MinValue,255,0.01843137f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="1516688385" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000568" asserts="0">
                <properties />
              </test-case>
              <test-case id="3725" name="CanScaleToUintAndBack(2.5f,-2.2f,2.5f,uint.MinValue,255,0.01843137f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(2.5f,-2.2f,2.5f,uint.MinValue,255,0.01843137f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="1926699775" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000501" asserts="0">
                <properties />
              </test-case>
              <test-case id="3726" name="CanScaleToUintAndBack(-2.2f,-2.2f,2.5f,255,65535,7.199755E-05f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(-2.2f,-2.2f,2.5f,255,65535,7.199755E-05f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="776066242" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000543" asserts="0">
                <properties />
              </test-case>
              <test-case id="3727" name="CanScaleToUintAndBack(-2.1f,-2.2f,2.5f,255,65535,7.199755E-05f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(-2.1f,-2.2f,2.5f,255,65535,7.199755E-05f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="1419260714" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000585" asserts="0">
                <properties />
              </test-case>
              <test-case id="3728" name="CanScaleToUintAndBack(-2.0f,-2.2f,2.5f,255,65535,7.199755E-05f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(-2.0f,-2.2f,2.5f,255,65535,7.199755E-05f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="1333499818" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000557" asserts="0">
                <properties />
              </test-case>
              <test-case id="3729" name="CanScaleToUintAndBack(-1.9f,-2.2f,2.5f,255,65535,7.199755E-05f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(-1.9f,-2.2f,2.5f,255,65535,7.199755E-05f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="374827744" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000484" asserts="0">
                <properties />
              </test-case>
              <test-case id="3730" name="CanScaleToUintAndBack(-1.8f,-2.2f,2.5f,255,65535,7.199755E-05f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(-1.8f,-2.2f,2.5f,255,65535,7.199755E-05f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="1156020720" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000535" asserts="0">
                <properties />
              </test-case>
              <test-case id="3731" name="CanScaleToUintAndBack(-1.7f,-2.2f,2.5f,255,65535,7.199755E-05f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(-1.7f,-2.2f,2.5f,255,65535,7.199755E-05f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="2096394043" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000807" asserts="0">
                <properties />
              </test-case>
              <test-case id="3732" name="CanScaleToUintAndBack(-1.6f,-2.2f,2.5f,255,65535,7.199755E-05f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(-1.6f,-2.2f,2.5f,255,65535,7.199755E-05f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="1755586505" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000980" asserts="0">
                <properties />
              </test-case>
              <test-case id="3733" name="CanScaleToUintAndBack(-1.5f,-2.2f,2.5f,255,65535,7.199755E-05f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(-1.5f,-2.2f,2.5f,255,65535,7.199755E-05f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="843352271" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000614" asserts="0">
                <properties />
              </test-case>
              <test-case id="3734" name="CanScaleToUintAndBack(-1.4f,-2.2f,2.5f,255,65535,7.199755E-05f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(-1.4f,-2.2f,2.5f,255,65535,7.199755E-05f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="1053649807" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000517" asserts="0">
                <properties />
              </test-case>
              <test-case id="3735" name="CanScaleToUintAndBack(-1.3f,-2.2f,2.5f,255,65535,7.199755E-05f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(-1.3f,-2.2f,2.5f,255,65535,7.199755E-05f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="159988542" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000501" asserts="0">
                <properties />
              </test-case>
              <test-case id="3736" name="CanScaleToUintAndBack(-1.2f,-2.2f,2.5f,255,65535,7.199755E-05f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(-1.2f,-2.2f,2.5f,255,65535,7.199755E-05f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="212537722" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000482" asserts="0">
                <properties />
              </test-case>
              <test-case id="3737" name="CanScaleToUintAndBack(-1.1f,-2.2f,2.5f,255,65535,7.199755E-05f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(-1.1f,-2.2f,2.5f,255,65535,7.199755E-05f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="769099472" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000539" asserts="0">
                <properties />
              </test-case>
              <test-case id="3738" name="CanScaleToUintAndBack(-1.0f,-2.2f,2.5f,255,65535,7.199755E-05f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(-1.0f,-2.2f,2.5f,255,65535,7.199755E-05f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="571786344" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000545" asserts="0">
                <properties />
              </test-case>
              <test-case id="3739" name="CanScaleToUintAndBack(-0.9f,-2.2f,2.5f,255,65535,7.199755E-05f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(-0.9f,-2.2f,2.5f,255,65535,7.199755E-05f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="1141897204" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000685" asserts="0">
                <properties />
              </test-case>
              <test-case id="3740" name="CanScaleToUintAndBack(-0.8f,-2.2f,2.5f,255,65535,7.199755E-05f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(-0.8f,-2.2f,2.5f,255,65535,7.199755E-05f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="1859470644" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000516" asserts="0">
                <properties />
              </test-case>
              <test-case id="3741" name="CanScaleToUintAndBack(-0.6999999f,-2.2f,2.5f,255,65535,7.199755E-05f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(-0.6999999f,-2.2f,2.5f,255,65535,7.199755E-05f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="2052294517" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000499" asserts="0">
                <properties />
              </test-case>
              <test-case id="3742" name="CanScaleToUintAndBack(-0.5999999f,-2.2f,2.5f,255,65535,7.199755E-05f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(-0.5999999f,-2.2f,2.5f,255,65535,7.199755E-05f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="1974228889" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000517" asserts="0">
                <properties />
              </test-case>
              <test-case id="3743" name="CanScaleToUintAndBack(-0.4999999f,-2.2f,2.5f,255,65535,7.199755E-05f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(-0.4999999f,-2.2f,2.5f,255,65535,7.199755E-05f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="1803669828" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000554" asserts="0">
                <properties />
              </test-case>
              <test-case id="3744" name="CanScaleToUintAndBack(-0.3999999f,-2.2f,2.5f,255,65535,7.199755E-05f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(-0.3999999f,-2.2f,2.5f,255,65535,7.199755E-05f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="613117072" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000554" asserts="0">
                <properties />
              </test-case>
              <test-case id="3745" name="CanScaleToUintAndBack(-0.2999999f,-2.2f,2.5f,255,65535,7.199755E-05f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(-0.2999999f,-2.2f,2.5f,255,65535,7.199755E-05f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="1269216683" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000539" asserts="0">
                <properties />
              </test-case>
              <test-case id="3746" name="CanScaleToUintAndBack(-0.1999999f,-2.2f,2.5f,255,65535,7.199755E-05f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(-0.1999999f,-2.2f,2.5f,255,65535,7.199755E-05f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="1439596295" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000734" asserts="0">
                <properties />
              </test-case>
              <test-case id="3747" name="CanScaleToUintAndBack(-0.09999993f,-2.2f,2.5f,255,65535,7.199755E-05f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(-0.09999993f,-2.2f,2.5f,255,65535,7.199755E-05f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="297776437" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000821" asserts="0">
                <properties />
              </test-case>
              <test-case id="3748" name="CanScaleToUintAndBack(7.450581E-08f,-2.2f,2.5f,255,65535,7.199755E-05f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(7.450581E-08f,-2.2f,2.5f,255,65535,7.199755E-05f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="1429140905" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000864" asserts="0">
                <properties />
              </test-case>
              <test-case id="3749" name="CanScaleToUintAndBack(0.1000001f,-2.2f,2.5f,255,65535,7.199755E-05f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(0.1000001f,-2.2f,2.5f,255,65535,7.199755E-05f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="1055558776" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000505" asserts="0">
                <properties />
              </test-case>
              <test-case id="3750" name="CanScaleToUintAndBack(0.2000001f,-2.2f,2.5f,255,65535,7.199755E-05f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(0.2000001f,-2.2f,2.5f,255,65535,7.199755E-05f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="38169019" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000505" asserts="0">
                <properties />
              </test-case>
              <test-case id="3751" name="CanScaleToUintAndBack(0.3000001f,-2.2f,2.5f,255,65535,7.199755E-05f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(0.3000001f,-2.2f,2.5f,255,65535,7.199755E-05f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="479735133" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000500" asserts="0">
                <properties />
              </test-case>
              <test-case id="3752" name="CanScaleToUintAndBack(0.4000001f,-2.2f,2.5f,255,65535,7.199755E-05f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(0.4000001f,-2.2f,2.5f,255,65535,7.199755E-05f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="136919073" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000490" asserts="0">
                <properties />
              </test-case>
              <test-case id="3753" name="CanScaleToUintAndBack(0.5000001f,-2.2f,2.5f,255,65535,7.199755E-05f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(0.5000001f,-2.2f,2.5f,255,65535,7.199755E-05f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="623311549" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000501" asserts="0">
                <properties />
              </test-case>
              <test-case id="3754" name="CanScaleToUintAndBack(0.6000001f,-2.2f,2.5f,255,65535,7.199755E-05f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(0.6000001f,-2.2f,2.5f,255,65535,7.199755E-05f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="624779829" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000998" asserts="0">
                <properties />
              </test-case>
              <test-case id="3755" name="CanScaleToUintAndBack(0.7000001f,-2.2f,2.5f,255,65535,7.199755E-05f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(0.7000001f,-2.2f,2.5f,255,65535,7.199755E-05f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="49574439" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000506" asserts="0">
                <properties />
              </test-case>
              <test-case id="3756" name="CanScaleToUintAndBack(0.8000001f,-2.2f,2.5f,255,65535,7.199755E-05f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(0.8000001f,-2.2f,2.5f,255,65535,7.199755E-05f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="626384238" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000503" asserts="0">
                <properties />
              </test-case>
              <test-case id="3757" name="CanScaleToUintAndBack(0.9000002f,-2.2f,2.5f,255,65535,7.199755E-05f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(0.9000002f,-2.2f,2.5f,255,65535,7.199755E-05f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="262755542" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000549" asserts="0">
                <properties />
              </test-case>
              <test-case id="3758" name="CanScaleToUintAndBack(1.0f,-2.2f,2.5f,255,65535,7.199755E-05f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(1.0f,-2.2f,2.5f,255,65535,7.199755E-05f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="1157038441" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000744" asserts="0">
                <properties />
              </test-case>
              <test-case id="3759" name="CanScaleToUintAndBack(1.1f,-2.2f,2.5f,255,65535,7.199755E-05f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(1.1f,-2.2f,2.5f,255,65535,7.199755E-05f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="825698346" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000706" asserts="0">
                <properties />
              </test-case>
              <test-case id="3760" name="CanScaleToUintAndBack(1.2f,-2.2f,2.5f,255,65535,7.199755E-05f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(1.2f,-2.2f,2.5f,255,65535,7.199755E-05f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="59583264" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000630" asserts="0">
                <properties />
              </test-case>
              <test-case id="3761" name="CanScaleToUintAndBack(1.3f,-2.2f,2.5f,255,65535,7.199755E-05f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(1.3f,-2.2f,2.5f,255,65535,7.199755E-05f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="319088349" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000576" asserts="0">
                <properties />
              </test-case>
              <test-case id="3762" name="CanScaleToUintAndBack(1.4f,-2.2f,2.5f,255,65535,7.199755E-05f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(1.4f,-2.2f,2.5f,255,65535,7.199755E-05f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="412686110" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000555" asserts="0">
                <properties />
              </test-case>
              <test-case id="3763" name="CanScaleToUintAndBack(1.5f,-2.2f,2.5f,255,65535,7.199755E-05f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(1.5f,-2.2f,2.5f,255,65535,7.199755E-05f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="1706503277" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000523" asserts="0">
                <properties />
              </test-case>
              <test-case id="3764" name="CanScaleToUintAndBack(1.6f,-2.2f,2.5f,255,65535,7.199755E-05f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(1.6f,-2.2f,2.5f,255,65535,7.199755E-05f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="1649660517" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000505" asserts="0">
                <properties />
              </test-case>
              <test-case id="3765" name="CanScaleToUintAndBack(1.7f,-2.2f,2.5f,255,65535,7.199755E-05f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(1.7f,-2.2f,2.5f,255,65535,7.199755E-05f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="2104944684" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000550" asserts="0">
                <properties />
              </test-case>
              <test-case id="3766" name="CanScaleToUintAndBack(1.8f,-2.2f,2.5f,255,65535,7.199755E-05f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(1.8f,-2.2f,2.5f,255,65535,7.199755E-05f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="900455907" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000509" asserts="0">
                <properties />
              </test-case>
              <test-case id="3767" name="CanScaleToUintAndBack(1.9f,-2.2f,2.5f,255,65535,7.199755E-05f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(1.9f,-2.2f,2.5f,255,65535,7.199755E-05f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="1785873109" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000512" asserts="0">
                <properties />
              </test-case>
              <test-case id="3768" name="CanScaleToUintAndBack(2.0f,-2.2f,2.5f,255,65535,7.199755E-05f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(2.0f,-2.2f,2.5f,255,65535,7.199755E-05f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="141180751" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000507" asserts="0">
                <properties />
              </test-case>
              <test-case id="3769" name="CanScaleToUintAndBack(2.1f,-2.2f,2.5f,255,65535,7.199755E-05f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(2.1f,-2.2f,2.5f,255,65535,7.199755E-05f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="1378043711" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000516" asserts="0">
                <properties />
              </test-case>
              <test-case id="3770" name="CanScaleToUintAndBack(2.2f,-2.2f,2.5f,255,65535,7.199755E-05f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(2.2f,-2.2f,2.5f,255,65535,7.199755E-05f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="893616302" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000635" asserts="0">
                <properties />
              </test-case>
              <test-case id="3771" name="CanScaleToUintAndBack(2.3f,-2.2f,2.5f,255,65535,7.199755E-05f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(2.3f,-2.2f,2.5f,255,65535,7.199755E-05f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="707278257" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000625" asserts="0">
                <properties />
              </test-case>
              <test-case id="3772" name="CanScaleToUintAndBack(2.4f,-2.2f,2.5f,255,65535,7.199755E-05f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(2.4f,-2.2f,2.5f,255,65535,7.199755E-05f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="1464962505" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000494" asserts="0">
                <properties />
              </test-case>
              <test-case id="3773" name="CanScaleToUintAndBack(2.5f,-2.2f,2.5f,255,65535,7.199755E-05f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(2.5f,-2.2f,2.5f,255,65535,7.199755E-05f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="162737646" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000495" asserts="0">
                <properties />
              </test-case>
              <test-case id="3774" name="CanScaleToUintAndBack(-200.0f,-200.0f,200.0f,uint.MinValue,1023,0.3910069f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(-200.0f,-200.0f,200.0f,uint.MinValue,1023,0.3910069f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="1259862419" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000513" asserts="0">
                <properties />
              </test-case>
              <test-case id="3775" name="CanScaleToUintAndBack(-196.8584f,-200.0f,200.0f,uint.MinValue,1023,0.3910069f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(-196.8584f,-200.0f,200.0f,uint.MinValue,1023,0.3910069f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="750591192" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000493" asserts="0">
                <properties />
              </test-case>
              <test-case id="3776" name="CanScaleToUintAndBack(-193.7168f,-200.0f,200.0f,uint.MinValue,1023,0.3910069f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(-193.7168f,-200.0f,200.0f,uint.MinValue,1023,0.3910069f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="499016248" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000569" asserts="0">
                <properties />
              </test-case>
              <test-case id="3777" name="CanScaleToUintAndBack(-190.5752f,-200.0f,200.0f,uint.MinValue,1023,0.3910069f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(-190.5752f,-200.0f,200.0f,uint.MinValue,1023,0.3910069f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="510947888" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000609" asserts="0">
                <properties />
              </test-case>
              <test-case id="3778" name="CanScaleToUintAndBack(-187.4337f,-200.0f,200.0f,uint.MinValue,1023,0.3910069f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(-187.4337f,-200.0f,200.0f,uint.MinValue,1023,0.3910069f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="2044793481" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000542" asserts="0">
                <properties />
              </test-case>
              <test-case id="3779" name="CanScaleToUintAndBack(-184.2921f,-200.0f,200.0f,uint.MinValue,1023,0.3910069f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(-184.2921f,-200.0f,200.0f,uint.MinValue,1023,0.3910069f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="247471702" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000508" asserts="0">
                <properties />
              </test-case>
              <test-case id="3780" name="CanScaleToUintAndBack(-181.1505f,-200.0f,200.0f,uint.MinValue,1023,0.3910069f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(-181.1505f,-200.0f,200.0f,uint.MinValue,1023,0.3910069f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="487103480" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000507" asserts="0">
                <properties />
              </test-case>
              <test-case id="3781" name="CanScaleToUintAndBack(-178.0089f,-200.0f,200.0f,uint.MinValue,1023,0.3910069f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(-178.0089f,-200.0f,200.0f,uint.MinValue,1023,0.3910069f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="478289805" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000500" asserts="0">
                <properties />
              </test-case>
              <test-case id="3782" name="CanScaleToUintAndBack(-174.8673f,-200.0f,200.0f,uint.MinValue,1023,0.3910069f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(-174.8673f,-200.0f,200.0f,uint.MinValue,1023,0.3910069f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="2137603456" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000496" asserts="0">
                <properties />
              </test-case>
              <test-case id="3783" name="CanScaleToUintAndBack(-171.7257f,-200.0f,200.0f,uint.MinValue,1023,0.3910069f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(-171.7257f,-200.0f,200.0f,uint.MinValue,1023,0.3910069f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="277941042" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000494" asserts="0">
                <properties />
              </test-case>
              <test-case id="3784" name="CanScaleToUintAndBack(-168.5841f,-200.0f,200.0f,uint.MinValue,1023,0.3910069f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(-168.5841f,-200.0f,200.0f,uint.MinValue,1023,0.3910069f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="336658725" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000482" asserts="0">
                <properties />
              </test-case>
              <test-case id="3785" name="CanScaleToUintAndBack(-165.4426f,-200.0f,200.0f,uint.MinValue,1023,0.3910069f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(-165.4426f,-200.0f,200.0f,uint.MinValue,1023,0.3910069f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="676285587" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000502" asserts="0">
                <properties />
              </test-case>
              <test-case id="3786" name="CanScaleToUintAndBack(-162.301f,-200.0f,200.0f,uint.MinValue,1023,0.3910069f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(-162.301f,-200.0f,200.0f,uint.MinValue,1023,0.3910069f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="1959474970" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000740" asserts="0">
                <properties />
              </test-case>
              <test-case id="3787" name="CanScaleToUintAndBack(-159.1594f,-200.0f,200.0f,uint.MinValue,1023,0.3910069f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(-159.1594f,-200.0f,200.0f,uint.MinValue,1023,0.3910069f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="1132274956" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.001055" asserts="0">
                <properties />
              </test-case>
              <test-case id="3788" name="CanScaleToUintAndBack(-156.0178f,-200.0f,200.0f,uint.MinValue,1023,0.3910069f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(-156.0178f,-200.0f,200.0f,uint.MinValue,1023,0.3910069f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="218572442" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000609" asserts="0">
                <properties />
              </test-case>
              <test-case id="3789" name="CanScaleToUintAndBack(-152.8762f,-200.0f,200.0f,uint.MinValue,1023,0.3910069f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(-152.8762f,-200.0f,200.0f,uint.MinValue,1023,0.3910069f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="1004075368" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000531" asserts="0">
                <properties />
              </test-case>
              <test-case id="3790" name="CanScaleToUintAndBack(-149.7346f,-200.0f,200.0f,uint.MinValue,1023,0.3910069f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(-149.7346f,-200.0f,200.0f,uint.MinValue,1023,0.3910069f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="1681087951" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000504" asserts="0">
                <properties />
              </test-case>
              <test-case id="3791" name="CanScaleToUintAndBack(-146.593f,-200.0f,200.0f,uint.MinValue,1023,0.3910069f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(-146.593f,-200.0f,200.0f,uint.MinValue,1023,0.3910069f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="2097265827" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000541" asserts="0">
                <properties />
              </test-case>
              <test-case id="3792" name="CanScaleToUintAndBack(-143.4514f,-200.0f,200.0f,uint.MinValue,1023,0.3910069f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(-143.4514f,-200.0f,200.0f,uint.MinValue,1023,0.3910069f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="1759544678" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000687" asserts="0">
                <properties />
              </test-case>
              <test-case id="3793" name="CanScaleToUintAndBack(-140.3099f,-200.0f,200.0f,uint.MinValue,1023,0.3910069f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(-140.3099f,-200.0f,200.0f,uint.MinValue,1023,0.3910069f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="1893571645" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000589" asserts="0">
                <properties />
              </test-case>
              <test-case id="3794" name="CanScaleToUintAndBack(-137.1683f,-200.0f,200.0f,uint.MinValue,1023,0.3910069f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(-137.1683f,-200.0f,200.0f,uint.MinValue,1023,0.3910069f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="1082313940" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000513" asserts="0">
                <properties />
              </test-case>
              <test-case id="3795" name="CanScaleToUintAndBack(-134.0267f,-200.0f,200.0f,uint.MinValue,1023,0.3910069f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(-134.0267f,-200.0f,200.0f,uint.MinValue,1023,0.3910069f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="1540382295" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000522" asserts="0">
                <properties />
              </test-case>
              <test-case id="3796" name="CanScaleToUintAndBack(-130.8851f,-200.0f,200.0f,uint.MinValue,1023,0.3910069f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(-130.8851f,-200.0f,200.0f,uint.MinValue,1023,0.3910069f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="1639608407" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000499" asserts="0">
                <properties />
              </test-case>
              <test-case id="3797" name="CanScaleToUintAndBack(-127.7435f,-200.0f,200.0f,uint.MinValue,1023,0.3910069f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(-127.7435f,-200.0f,200.0f,uint.MinValue,1023,0.3910069f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="267725612" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000603" asserts="0">
                <properties />
              </test-case>
              <test-case id="3798" name="CanScaleToUintAndBack(-124.6019f,-200.0f,200.0f,uint.MinValue,1023,0.3910069f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(-124.6019f,-200.0f,200.0f,uint.MinValue,1023,0.3910069f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="154009311" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000593" asserts="0">
                <properties />
              </test-case>
              <test-case id="3799" name="CanScaleToUintAndBack(-121.4603f,-200.0f,200.0f,uint.MinValue,1023,0.3910069f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(-121.4603f,-200.0f,200.0f,uint.MinValue,1023,0.3910069f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="655656035" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000504" asserts="0">
                <properties />
              </test-case>
              <test-case id="3800" name="CanScaleToUintAndBack(-118.3187f,-200.0f,200.0f,uint.MinValue,1023,0.3910069f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(-118.3187f,-200.0f,200.0f,uint.MinValue,1023,0.3910069f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="368760776" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000557" asserts="0">
                <properties />
              </test-case>
              <test-case id="3801" name="CanScaleToUintAndBack(-115.1771f,-200.0f,200.0f,uint.MinValue,1023,0.3910069f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(-115.1771f,-200.0f,200.0f,uint.MinValue,1023,0.3910069f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="1801206833" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000497" asserts="0">
                <properties />
              </test-case>
              <test-case id="3802" name="CanScaleToUintAndBack(-112.0355f,-200.0f,200.0f,uint.MinValue,1023,0.3910069f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(-112.0355f,-200.0f,200.0f,uint.MinValue,1023,0.3910069f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="156595686" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000537" asserts="0">
                <properties />
              </test-case>
              <test-case id="3803" name="CanScaleToUintAndBack(-108.8939f,-200.0f,200.0f,uint.MinValue,1023,0.3910069f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(-108.8939f,-200.0f,200.0f,uint.MinValue,1023,0.3910069f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="51097194" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000559" asserts="0">
                <properties />
              </test-case>
              <test-case id="3804" name="CanScaleToUintAndBack(-105.7523f,-200.0f,200.0f,uint.MinValue,1023,0.3910069f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(-105.7523f,-200.0f,200.0f,uint.MinValue,1023,0.3910069f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="161942474" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000507" asserts="0">
                <properties />
              </test-case>
              <test-case id="3805" name="CanScaleToUintAndBack(-102.6108f,-200.0f,200.0f,uint.MinValue,1023,0.3910069f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(-102.6108f,-200.0f,200.0f,uint.MinValue,1023,0.3910069f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="1478374409" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000507" asserts="0">
                <properties />
              </test-case>
              <test-case id="3806" name="CanScaleToUintAndBack(-99.46916f,-200.0f,200.0f,uint.MinValue,1023,0.3910069f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(-99.46916f,-200.0f,200.0f,uint.MinValue,1023,0.3910069f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="1162256275" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000520" asserts="0">
                <properties />
              </test-case>
              <test-case id="3807" name="CanScaleToUintAndBack(-96.32757f,-200.0f,200.0f,uint.MinValue,1023,0.3910069f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(-96.32757f,-200.0f,200.0f,uint.MinValue,1023,0.3910069f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="2121665074" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000539" asserts="0">
                <properties />
              </test-case>
              <test-case id="3808" name="CanScaleToUintAndBack(-93.18597f,-200.0f,200.0f,uint.MinValue,1023,0.3910069f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(-93.18597f,-200.0f,200.0f,uint.MinValue,1023,0.3910069f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="1510932777" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000985" asserts="0">
                <properties />
              </test-case>
              <test-case id="3809" name="CanScaleToUintAndBack(-90.04438f,-200.0f,200.0f,uint.MinValue,1023,0.3910069f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(-90.04438f,-200.0f,200.0f,uint.MinValue,1023,0.3910069f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="2021672284" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000549" asserts="0">
                <properties />
              </test-case>
              <test-case id="3810" name="CanScaleToUintAndBack(-86.90279f,-200.0f,200.0f,uint.MinValue,1023,0.3910069f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(-86.90279f,-200.0f,200.0f,uint.MinValue,1023,0.3910069f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="1698041838" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000517" asserts="0">
                <properties />
              </test-case>
              <test-case id="3811" name="CanScaleToUintAndBack(-83.76119f,-200.0f,200.0f,uint.MinValue,1023,0.3910069f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(-83.76119f,-200.0f,200.0f,uint.MinValue,1023,0.3910069f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="115436350" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.001049" asserts="0">
                <properties />
              </test-case>
              <test-case id="3812" name="CanScaleToUintAndBack(-80.6196f,-200.0f,200.0f,uint.MinValue,1023,0.3910069f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(-80.6196f,-200.0f,200.0f,uint.MinValue,1023,0.3910069f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="365445708" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000699" asserts="0">
                <properties />
              </test-case>
              <test-case id="3813" name="CanScaleToUintAndBack(-77.478f,-200.0f,200.0f,uint.MinValue,1023,0.3910069f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(-77.478f,-200.0f,200.0f,uint.MinValue,1023,0.3910069f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="909566739" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000644" asserts="0">
                <properties />
              </test-case>
              <test-case id="3814" name="CanScaleToUintAndBack(-74.33641f,-200.0f,200.0f,uint.MinValue,1023,0.3910069f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(-74.33641f,-200.0f,200.0f,uint.MinValue,1023,0.3910069f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="338594866" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000757" asserts="0">
                <properties />
              </test-case>
              <test-case id="3815" name="CanScaleToUintAndBack(-71.19482f,-200.0f,200.0f,uint.MinValue,1023,0.3910069f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(-71.19482f,-200.0f,200.0f,uint.MinValue,1023,0.3910069f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="1728777106" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000530" asserts="0">
                <properties />
              </test-case>
              <test-case id="3816" name="CanScaleToUintAndBack(-68.05322f,-200.0f,200.0f,uint.MinValue,1023,0.3910069f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(-68.05322f,-200.0f,200.0f,uint.MinValue,1023,0.3910069f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="328968540" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000519" asserts="0">
                <properties />
              </test-case>
              <test-case id="3817" name="CanScaleToUintAndBack(-64.91163f,-200.0f,200.0f,uint.MinValue,1023,0.3910069f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(-64.91163f,-200.0f,200.0f,uint.MinValue,1023,0.3910069f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="134745068" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000512" asserts="0">
                <properties />
              </test-case>
              <test-case id="3818" name="CanScaleToUintAndBack(-61.77003f,-200.0f,200.0f,uint.MinValue,1023,0.3910069f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(-61.77003f,-200.0f,200.0f,uint.MinValue,1023,0.3910069f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="1369844552" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000570" asserts="0">
                <properties />
              </test-case>
              <test-case id="3819" name="CanScaleToUintAndBack(-58.62844f,-200.0f,200.0f,uint.MinValue,1023,0.3910069f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(-58.62844f,-200.0f,200.0f,uint.MinValue,1023,0.3910069f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="973374930" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000593" asserts="0">
                <properties />
              </test-case>
              <test-case id="3820" name="CanScaleToUintAndBack(-55.48685f,-200.0f,200.0f,uint.MinValue,1023,0.3910069f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(-55.48685f,-200.0f,200.0f,uint.MinValue,1023,0.3910069f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="145469714" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000537" asserts="0">
                <properties />
              </test-case>
              <test-case id="3821" name="CanScaleToUintAndBack(-52.34525f,-200.0f,200.0f,uint.MinValue,1023,0.3910069f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(-52.34525f,-200.0f,200.0f,uint.MinValue,1023,0.3910069f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="1915664598" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000613" asserts="0">
                <properties />
              </test-case>
              <test-case id="3822" name="CanScaleToUintAndBack(-49.20366f,-200.0f,200.0f,uint.MinValue,1023,0.3910069f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(-49.20366f,-200.0f,200.0f,uint.MinValue,1023,0.3910069f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="1567300667" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000570" asserts="0">
                <properties />
              </test-case>
              <test-case id="3823" name="CanScaleToUintAndBack(-46.06207f,-200.0f,200.0f,uint.MinValue,1023,0.3910069f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(-46.06207f,-200.0f,200.0f,uint.MinValue,1023,0.3910069f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="1284589030" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000513" asserts="0">
                <properties />
              </test-case>
              <test-case id="3824" name="CanScaleToUintAndBack(-42.92047f,-200.0f,200.0f,uint.MinValue,1023,0.3910069f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(-42.92047f,-200.0f,200.0f,uint.MinValue,1023,0.3910069f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="1844439407" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000518" asserts="0">
                <properties />
              </test-case>
              <test-case id="3825" name="CanScaleToUintAndBack(-39.77888f,-200.0f,200.0f,uint.MinValue,1023,0.3910069f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(-39.77888f,-200.0f,200.0f,uint.MinValue,1023,0.3910069f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="943834122" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000509" asserts="0">
                <properties />
              </test-case>
              <test-case id="3826" name="CanScaleToUintAndBack(-36.63728f,-200.0f,200.0f,uint.MinValue,1023,0.3910069f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(-36.63728f,-200.0f,200.0f,uint.MinValue,1023,0.3910069f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="1095217226" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000505" asserts="0">
                <properties />
              </test-case>
              <test-case id="3827" name="CanScaleToUintAndBack(-33.49569f,-200.0f,200.0f,uint.MinValue,1023,0.3910069f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(-33.49569f,-200.0f,200.0f,uint.MinValue,1023,0.3910069f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="1718874507" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000513" asserts="0">
                <properties />
              </test-case>
              <test-case id="3828" name="CanScaleToUintAndBack(-30.3541f,-200.0f,200.0f,uint.MinValue,1023,0.3910069f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(-30.3541f,-200.0f,200.0f,uint.MinValue,1023,0.3910069f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="1227907353" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000497" asserts="0">
                <properties />
              </test-case>
              <test-case id="3829" name="CanScaleToUintAndBack(-27.21251f,-200.0f,200.0f,uint.MinValue,1023,0.3910069f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(-27.21251f,-200.0f,200.0f,uint.MinValue,1023,0.3910069f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="1866963771" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000564" asserts="0">
                <properties />
              </test-case>
              <test-case id="3830" name="CanScaleToUintAndBack(-24.07091f,-200.0f,200.0f,uint.MinValue,1023,0.3910069f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(-24.07091f,-200.0f,200.0f,uint.MinValue,1023,0.3910069f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="1258466432" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000611" asserts="0">
                <properties />
              </test-case>
              <test-case id="3831" name="CanScaleToUintAndBack(-20.92932f,-200.0f,200.0f,uint.MinValue,1023,0.3910069f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(-20.92932f,-200.0f,200.0f,uint.MinValue,1023,0.3910069f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="231290636" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000575" asserts="0">
                <properties />
              </test-case>
              <test-case id="3832" name="CanScaleToUintAndBack(-17.78773f,-200.0f,200.0f,uint.MinValue,1023,0.3910069f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(-17.78773f,-200.0f,200.0f,uint.MinValue,1023,0.3910069f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="356938577" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000534" asserts="0">
                <properties />
              </test-case>
              <test-case id="3833" name="CanScaleToUintAndBack(-14.64614f,-200.0f,200.0f,uint.MinValue,1023,0.3910069f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(-14.64614f,-200.0f,200.0f,uint.MinValue,1023,0.3910069f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="1389137446" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000506" asserts="0">
                <properties />
              </test-case>
              <test-case id="3834" name="CanScaleToUintAndBack(-11.50454f,-200.0f,200.0f,uint.MinValue,1023,0.3910069f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(-11.50454f,-200.0f,200.0f,uint.MinValue,1023,0.3910069f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="2026194573" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000514" asserts="0">
                <properties />
              </test-case>
              <test-case id="3835" name="CanScaleToUintAndBack(-8.36295f,-200.0f,200.0f,uint.MinValue,1023,0.3910069f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(-8.36295f,-200.0f,200.0f,uint.MinValue,1023,0.3910069f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="833380294" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000494" asserts="0">
                <properties />
              </test-case>
              <test-case id="3836" name="CanScaleToUintAndBack(-5.221357f,-200.0f,200.0f,uint.MinValue,1023,0.3910069f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(-5.221357f,-200.0f,200.0f,uint.MinValue,1023,0.3910069f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="321694119" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000627" asserts="0">
                <properties />
              </test-case>
              <test-case id="3837" name="CanScaleToUintAndBack(-2.079765f,-200.0f,200.0f,uint.MinValue,1023,0.3910069f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(-2.079765f,-200.0f,200.0f,uint.MinValue,1023,0.3910069f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="2086506262" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000691" asserts="0">
                <properties />
              </test-case>
              <test-case id="3838" name="CanScaleToUintAndBack(1.061828f,-200.0f,200.0f,uint.MinValue,1023,0.3910069f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(1.061828f,-200.0f,200.0f,uint.MinValue,1023,0.3910069f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="115998568" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.001010" asserts="0">
                <properties />
              </test-case>
              <test-case id="3839" name="CanScaleToUintAndBack(4.203421f,-200.0f,200.0f,uint.MinValue,1023,0.3910069f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(4.203421f,-200.0f,200.0f,uint.MinValue,1023,0.3910069f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="1005767963" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000757" asserts="0">
                <properties />
              </test-case>
              <test-case id="3840" name="CanScaleToUintAndBack(7.345014f,-200.0f,200.0f,uint.MinValue,1023,0.3910069f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(7.345014f,-200.0f,200.0f,uint.MinValue,1023,0.3910069f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="1661512959" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000735" asserts="0">
                <properties />
              </test-case>
              <test-case id="3841" name="CanScaleToUintAndBack(10.48661f,-200.0f,200.0f,uint.MinValue,1023,0.3910069f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(10.48661f,-200.0f,200.0f,uint.MinValue,1023,0.3910069f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="1985293543" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000518" asserts="0">
                <properties />
              </test-case>
              <test-case id="3842" name="CanScaleToUintAndBack(13.6282f,-200.0f,200.0f,uint.MinValue,1023,0.3910069f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(13.6282f,-200.0f,200.0f,uint.MinValue,1023,0.3910069f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="1768825826" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000516" asserts="0">
                <properties />
              </test-case>
              <test-case id="3843" name="CanScaleToUintAndBack(16.76979f,-200.0f,200.0f,uint.MinValue,1023,0.3910069f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(16.76979f,-200.0f,200.0f,uint.MinValue,1023,0.3910069f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="344383805" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000516" asserts="0">
                <properties />
              </test-case>
              <test-case id="3844" name="CanScaleToUintAndBack(19.91138f,-200.0f,200.0f,uint.MinValue,1023,0.3910069f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(19.91138f,-200.0f,200.0f,uint.MinValue,1023,0.3910069f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="1453517177" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000601" asserts="0">
                <properties />
              </test-case>
              <test-case id="3845" name="CanScaleToUintAndBack(23.05298f,-200.0f,200.0f,uint.MinValue,1023,0.3910069f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(23.05298f,-200.0f,200.0f,uint.MinValue,1023,0.3910069f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="1565651601" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000569" asserts="0">
                <properties />
              </test-case>
              <test-case id="3846" name="CanScaleToUintAndBack(26.19457f,-200.0f,200.0f,uint.MinValue,1023,0.3910069f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(26.19457f,-200.0f,200.0f,uint.MinValue,1023,0.3910069f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="1731820119" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000504" asserts="0">
                <properties />
              </test-case>
              <test-case id="3847" name="CanScaleToUintAndBack(29.33616f,-200.0f,200.0f,uint.MinValue,1023,0.3910069f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(29.33616f,-200.0f,200.0f,uint.MinValue,1023,0.3910069f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="849977939" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000506" asserts="0">
                <properties />
              </test-case>
              <test-case id="3848" name="CanScaleToUintAndBack(32.47775f,-200.0f,200.0f,uint.MinValue,1023,0.3910069f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(32.47775f,-200.0f,200.0f,uint.MinValue,1023,0.3910069f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="1554976779" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000515" asserts="0">
                <properties />
              </test-case>
              <test-case id="3849" name="CanScaleToUintAndBack(35.61935f,-200.0f,200.0f,uint.MinValue,1023,0.3910069f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(35.61935f,-200.0f,200.0f,uint.MinValue,1023,0.3910069f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="1501020481" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000526" asserts="0">
                <properties />
              </test-case>
              <test-case id="3850" name="CanScaleToUintAndBack(38.76094f,-200.0f,200.0f,uint.MinValue,1023,0.3910069f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(38.76094f,-200.0f,200.0f,uint.MinValue,1023,0.3910069f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="1211413755" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000650" asserts="0">
                <properties />
              </test-case>
              <test-case id="3851" name="CanScaleToUintAndBack(41.90253f,-200.0f,200.0f,uint.MinValue,1023,0.3910069f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(41.90253f,-200.0f,200.0f,uint.MinValue,1023,0.3910069f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="1504863339" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000645" asserts="0">
                <properties />
              </test-case>
              <test-case id="3852" name="CanScaleToUintAndBack(45.04413f,-200.0f,200.0f,uint.MinValue,1023,0.3910069f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(45.04413f,-200.0f,200.0f,uint.MinValue,1023,0.3910069f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="1045364707" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000665" asserts="0">
                <properties />
              </test-case>
              <test-case id="3853" name="CanScaleToUintAndBack(48.18572f,-200.0f,200.0f,uint.MinValue,1023,0.3910069f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(48.18572f,-200.0f,200.0f,uint.MinValue,1023,0.3910069f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="1328118028" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000617" asserts="0">
                <properties />
              </test-case>
              <test-case id="3854" name="CanScaleToUintAndBack(51.32732f,-200.0f,200.0f,uint.MinValue,1023,0.3910069f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(51.32732f,-200.0f,200.0f,uint.MinValue,1023,0.3910069f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="510186321" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000565" asserts="0">
                <properties />
              </test-case>
              <test-case id="3855" name="CanScaleToUintAndBack(54.46891f,-200.0f,200.0f,uint.MinValue,1023,0.3910069f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(54.46891f,-200.0f,200.0f,uint.MinValue,1023,0.3910069f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="600579825" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000670" asserts="0">
                <properties />
              </test-case>
              <test-case id="3856" name="CanScaleToUintAndBack(57.6105f,-200.0f,200.0f,uint.MinValue,1023,0.3910069f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(57.6105f,-200.0f,200.0f,uint.MinValue,1023,0.3910069f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="233906166" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000614" asserts="0">
                <properties />
              </test-case>
              <test-case id="3857" name="CanScaleToUintAndBack(60.7521f,-200.0f,200.0f,uint.MinValue,1023,0.3910069f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(60.7521f,-200.0f,200.0f,uint.MinValue,1023,0.3910069f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="1019490303" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000526" asserts="0">
                <properties />
              </test-case>
              <test-case id="3858" name="CanScaleToUintAndBack(63.89369f,-200.0f,200.0f,uint.MinValue,1023,0.3910069f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(63.89369f,-200.0f,200.0f,uint.MinValue,1023,0.3910069f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="354141434" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000520" asserts="0">
                <properties />
              </test-case>
              <test-case id="3859" name="CanScaleToUintAndBack(67.03529f,-200.0f,200.0f,uint.MinValue,1023,0.3910069f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(67.03529f,-200.0f,200.0f,uint.MinValue,1023,0.3910069f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="1365591999" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000588" asserts="0">
                <properties />
              </test-case>
              <test-case id="3860" name="CanScaleToUintAndBack(70.17688f,-200.0f,200.0f,uint.MinValue,1023,0.3910069f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(70.17688f,-200.0f,200.0f,uint.MinValue,1023,0.3910069f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="383157183" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000511" asserts="0">
                <properties />
              </test-case>
              <test-case id="3861" name="CanScaleToUintAndBack(73.31847f,-200.0f,200.0f,uint.MinValue,1023,0.3910069f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(73.31847f,-200.0f,200.0f,uint.MinValue,1023,0.3910069f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="1590865415" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000808" asserts="0">
                <properties />
              </test-case>
              <test-case id="3862" name="CanScaleToUintAndBack(76.46007f,-200.0f,200.0f,uint.MinValue,1023,0.3910069f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(76.46007f,-200.0f,200.0f,uint.MinValue,1023,0.3910069f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="893757721" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000529" asserts="0">
                <properties />
              </test-case>
              <test-case id="3863" name="CanScaleToUintAndBack(79.60166f,-200.0f,200.0f,uint.MinValue,1023,0.3910069f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(79.60166f,-200.0f,200.0f,uint.MinValue,1023,0.3910069f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="1791452653" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000526" asserts="0">
                <properties />
              </test-case>
              <test-case id="3864" name="CanScaleToUintAndBack(82.74326f,-200.0f,200.0f,uint.MinValue,1023,0.3910069f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(82.74326f,-200.0f,200.0f,uint.MinValue,1023,0.3910069f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="763205852" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000507" asserts="0">
                <properties />
              </test-case>
              <test-case id="3865" name="CanScaleToUintAndBack(85.88485f,-200.0f,200.0f,uint.MinValue,1023,0.3910069f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(85.88485f,-200.0f,200.0f,uint.MinValue,1023,0.3910069f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="1466751202" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000771" asserts="0">
                <properties />
              </test-case>
              <test-case id="3866" name="CanScaleToUintAndBack(89.02644f,-200.0f,200.0f,uint.MinValue,1023,0.3910069f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(89.02644f,-200.0f,200.0f,uint.MinValue,1023,0.3910069f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="1905981420" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000901" asserts="0">
                <properties />
              </test-case>
              <test-case id="3867" name="CanScaleToUintAndBack(92.16804f,-200.0f,200.0f,uint.MinValue,1023,0.3910069f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(92.16804f,-200.0f,200.0f,uint.MinValue,1023,0.3910069f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="1123791909" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000624" asserts="0">
                <properties />
              </test-case>
              <test-case id="3868" name="CanScaleToUintAndBack(95.30963f,-200.0f,200.0f,uint.MinValue,1023,0.3910069f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(95.30963f,-200.0f,200.0f,uint.MinValue,1023,0.3910069f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="1030855813" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000574" asserts="0">
                <properties />
              </test-case>
              <test-case id="3869" name="CanScaleToUintAndBack(98.45123f,-200.0f,200.0f,uint.MinValue,1023,0.3910069f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(98.45123f,-200.0f,200.0f,uint.MinValue,1023,0.3910069f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="1652698219" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000527" asserts="0">
                <properties />
              </test-case>
              <test-case id="3870" name="CanScaleToUintAndBack(101.5928f,-200.0f,200.0f,uint.MinValue,1023,0.3910069f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(101.5928f,-200.0f,200.0f,uint.MinValue,1023,0.3910069f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="1407082987" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000532" asserts="0">
                <properties />
              </test-case>
              <test-case id="3871" name="CanScaleToUintAndBack(104.7344f,-200.0f,200.0f,uint.MinValue,1023,0.3910069f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(104.7344f,-200.0f,200.0f,uint.MinValue,1023,0.3910069f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="389945925" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000616" asserts="0">
                <properties />
              </test-case>
              <test-case id="3872" name="CanScaleToUintAndBack(107.876f,-200.0f,200.0f,uint.MinValue,1023,0.3910069f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(107.876f,-200.0f,200.0f,uint.MinValue,1023,0.3910069f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="18746500" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000601" asserts="0">
                <properties />
              </test-case>
              <test-case id="3873" name="CanScaleToUintAndBack(111.0176f,-200.0f,200.0f,uint.MinValue,1023,0.3910069f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(111.0176f,-200.0f,200.0f,uint.MinValue,1023,0.3910069f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="364076589" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000515" asserts="0">
                <properties />
              </test-case>
              <test-case id="3874" name="CanScaleToUintAndBack(114.1592f,-200.0f,200.0f,uint.MinValue,1023,0.3910069f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(114.1592f,-200.0f,200.0f,uint.MinValue,1023,0.3910069f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="1459345618" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000633" asserts="0">
                <properties />
              </test-case>
              <test-case id="3875" name="CanScaleToUintAndBack(117.3008f,-200.0f,200.0f,uint.MinValue,1023,0.3910069f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(117.3008f,-200.0f,200.0f,uint.MinValue,1023,0.3910069f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="307659818" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000506" asserts="0">
                <properties />
              </test-case>
              <test-case id="3876" name="CanScaleToUintAndBack(120.4424f,-200.0f,200.0f,uint.MinValue,1023,0.3910069f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(120.4424f,-200.0f,200.0f,uint.MinValue,1023,0.3910069f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="146838772" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000533" asserts="0">
                <properties />
              </test-case>
              <test-case id="3877" name="CanScaleToUintAndBack(123.584f,-200.0f,200.0f,uint.MinValue,1023,0.3910069f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(123.584f,-200.0f,200.0f,uint.MinValue,1023,0.3910069f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="1222916862" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000558" asserts="0">
                <properties />
              </test-case>
              <test-case id="3878" name="CanScaleToUintAndBack(126.7256f,-200.0f,200.0f,uint.MinValue,1023,0.3910069f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(126.7256f,-200.0f,200.0f,uint.MinValue,1023,0.3910069f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="1978555500" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000519" asserts="0">
                <properties />
              </test-case>
              <test-case id="3879" name="CanScaleToUintAndBack(129.8672f,-200.0f,200.0f,uint.MinValue,1023,0.3910069f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(129.8672f,-200.0f,200.0f,uint.MinValue,1023,0.3910069f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="278787806" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000518" asserts="0">
                <properties />
              </test-case>
              <test-case id="3880" name="CanScaleToUintAndBack(133.0087f,-200.0f,200.0f,uint.MinValue,1023,0.3910069f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(133.0087f,-200.0f,200.0f,uint.MinValue,1023,0.3910069f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="1359497650" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000605" asserts="0">
                <properties />
              </test-case>
              <test-case id="3881" name="CanScaleToUintAndBack(136.1503f,-200.0f,200.0f,uint.MinValue,1023,0.3910069f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(136.1503f,-200.0f,200.0f,uint.MinValue,1023,0.3910069f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="245239287" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000575" asserts="0">
                <properties />
              </test-case>
              <test-case id="3882" name="CanScaleToUintAndBack(139.2919f,-200.0f,200.0f,uint.MinValue,1023,0.3910069f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(139.2919f,-200.0f,200.0f,uint.MinValue,1023,0.3910069f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="163897728" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000695" asserts="0">
                <properties />
              </test-case>
              <test-case id="3883" name="CanScaleToUintAndBack(142.4335f,-200.0f,200.0f,uint.MinValue,1023,0.3910069f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(142.4335f,-200.0f,200.0f,uint.MinValue,1023,0.3910069f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="1874370519" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000531" asserts="0">
                <properties />
              </test-case>
              <test-case id="3884" name="CanScaleToUintAndBack(145.5751f,-200.0f,200.0f,uint.MinValue,1023,0.3910069f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(145.5751f,-200.0f,200.0f,uint.MinValue,1023,0.3910069f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="655550016" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000519" asserts="0">
                <properties />
              </test-case>
              <test-case id="3885" name="CanScaleToUintAndBack(148.7167f,-200.0f,200.0f,uint.MinValue,1023,0.3910069f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(148.7167f,-200.0f,200.0f,uint.MinValue,1023,0.3910069f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="1901086740" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000507" asserts="0">
                <properties />
              </test-case>
              <test-case id="3886" name="CanScaleToUintAndBack(151.8583f,-200.0f,200.0f,uint.MinValue,1023,0.3910069f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(151.8583f,-200.0f,200.0f,uint.MinValue,1023,0.3910069f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="1333409576" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000509" asserts="0">
                <properties />
              </test-case>
              <test-case id="3887" name="CanScaleToUintAndBack(154.9998f,-200.0f,200.0f,uint.MinValue,1023,0.3910069f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(154.9998f,-200.0f,200.0f,uint.MinValue,1023,0.3910069f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="1176304196" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000521" asserts="0">
                <properties />
              </test-case>
              <test-case id="3888" name="CanScaleToUintAndBack(158.1414f,-200.0f,200.0f,uint.MinValue,1023,0.3910069f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(158.1414f,-200.0f,200.0f,uint.MinValue,1023,0.3910069f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="878951125" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000653" asserts="0">
                <properties />
              </test-case>
              <test-case id="3889" name="CanScaleToUintAndBack(161.283f,-200.0f,200.0f,uint.MinValue,1023,0.3910069f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(161.283f,-200.0f,200.0f,uint.MinValue,1023,0.3910069f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="1425614748" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000688" asserts="0">
                <properties />
              </test-case>
              <test-case id="3890" name="CanScaleToUintAndBack(164.4246f,-200.0f,200.0f,uint.MinValue,1023,0.3910069f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(164.4246f,-200.0f,200.0f,uint.MinValue,1023,0.3910069f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="599474128" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000562" asserts="0">
                <properties />
              </test-case>
              <test-case id="3891" name="CanScaleToUintAndBack(167.5662f,-200.0f,200.0f,uint.MinValue,1023,0.3910069f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(167.5662f,-200.0f,200.0f,uint.MinValue,1023,0.3910069f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="1449687463" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000552" asserts="0">
                <properties />
              </test-case>
              <test-case id="3892" name="CanScaleToUintAndBack(170.7078f,-200.0f,200.0f,uint.MinValue,1023,0.3910069f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(170.7078f,-200.0f,200.0f,uint.MinValue,1023,0.3910069f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="1732364828" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000528" asserts="0">
                <properties />
              </test-case>
              <test-case id="3893" name="CanScaleToUintAndBack(173.8494f,-200.0f,200.0f,uint.MinValue,1023,0.3910069f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(173.8494f,-200.0f,200.0f,uint.MinValue,1023,0.3910069f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="897890216" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.001239" asserts="0">
                <properties />
              </test-case>
              <test-case id="3894" name="CanScaleToUintAndBack(176.991f,-200.0f,200.0f,uint.MinValue,1023,0.3910069f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(176.991f,-200.0f,200.0f,uint.MinValue,1023,0.3910069f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="622610780" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000642" asserts="0">
                <properties />
              </test-case>
              <test-case id="3895" name="CanScaleToUintAndBack(180.1325f,-200.0f,200.0f,uint.MinValue,1023,0.3910069f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(180.1325f,-200.0f,200.0f,uint.MinValue,1023,0.3910069f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="70647544" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000706" asserts="0">
                <properties />
              </test-case>
              <test-case id="3896" name="CanScaleToUintAndBack(183.2741f,-200.0f,200.0f,uint.MinValue,1023,0.3910069f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(183.2741f,-200.0f,200.0f,uint.MinValue,1023,0.3910069f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="1091535822" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000559" asserts="0">
                <properties />
              </test-case>
              <test-case id="3897" name="CanScaleToUintAndBack(186.4157f,-200.0f,200.0f,uint.MinValue,1023,0.3910069f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(186.4157f,-200.0f,200.0f,uint.MinValue,1023,0.3910069f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="2124856820" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000572" asserts="0">
                <properties />
              </test-case>
              <test-case id="3898" name="CanScaleToUintAndBack(189.5573f,-200.0f,200.0f,uint.MinValue,1023,0.3910069f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(189.5573f,-200.0f,200.0f,uint.MinValue,1023,0.3910069f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="1728661600" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000581" asserts="0">
                <properties />
              </test-case>
              <test-case id="3899" name="CanScaleToUintAndBack(192.6989f,-200.0f,200.0f,uint.MinValue,1023,0.3910069f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(192.6989f,-200.0f,200.0f,uint.MinValue,1023,0.3910069f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="2134249622" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000558" asserts="0">
                <properties />
              </test-case>
              <test-case id="3900" name="CanScaleToUintAndBack(195.8405f,-200.0f,200.0f,uint.MinValue,1023,0.3910069f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(195.8405f,-200.0f,200.0f,uint.MinValue,1023,0.3910069f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="1807153828" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000528" asserts="0">
                <properties />
              </test-case>
              <test-case id="3901" name="CanScaleToUintAndBack(198.9821f,-200.0f,200.0f,uint.MinValue,1023,0.3910069f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(198.9821f,-200.0f,200.0f,uint.MinValue,1023,0.3910069f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="608028210" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000509" asserts="0">
                <properties />
              </test-case>
              <test-case id="3902" name="CanScaleToUintAndBack(-0.7f,-0.7f,0.7f,uint.MinValue,524287,2.670293E-06f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(-0.7f,-0.7f,0.7f,uint.MinValue,524287,2.670293E-06f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="1966605773" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000514" asserts="0">
                <properties />
              </test-case>
              <test-case id="3903" name="CanScaleToUintAndBack(-0.67f,-0.7f,0.7f,uint.MinValue,524287,2.670293E-06f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(-0.67f,-0.7f,0.7f,uint.MinValue,524287,2.670293E-06f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="2049762207" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000661" asserts="0">
                <properties />
              </test-case>
              <test-case id="3904" name="CanScaleToUintAndBack(-0.64f,-0.7f,0.7f,uint.MinValue,524287,2.670293E-06f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(-0.64f,-0.7f,0.7f,uint.MinValue,524287,2.670293E-06f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="93937494" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000562" asserts="0">
                <properties />
              </test-case>
              <test-case id="3905" name="CanScaleToUintAndBack(-0.6100001f,-0.7f,0.7f,uint.MinValue,524287,2.670293E-06f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(-0.6100001f,-0.7f,0.7f,uint.MinValue,524287,2.670293E-06f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="821467830" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000534" asserts="0">
                <properties />
              </test-case>
              <test-case id="3906" name="CanScaleToUintAndBack(-0.5800001f,-0.7f,0.7f,uint.MinValue,524287,2.670293E-06f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(-0.5800001f,-0.7f,0.7f,uint.MinValue,524287,2.670293E-06f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="1486116839" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000538" asserts="0">
                <properties />
              </test-case>
              <test-case id="3907" name="CanScaleToUintAndBack(-0.5500001f,-0.7f,0.7f,uint.MinValue,524287,2.670293E-06f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(-0.5500001f,-0.7f,0.7f,uint.MinValue,524287,2.670293E-06f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="681288118" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000574" asserts="0">
                <properties />
              </test-case>
              <test-case id="3908" name="CanScaleToUintAndBack(-0.5200002f,-0.7f,0.7f,uint.MinValue,524287,2.670293E-06f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(-0.5200002f,-0.7f,0.7f,uint.MinValue,524287,2.670293E-06f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="2016256057" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000518" asserts="0">
                <properties />
              </test-case>
              <test-case id="3909" name="CanScaleToUintAndBack(-0.4900002f,-0.7f,0.7f,uint.MinValue,524287,2.670293E-06f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(-0.4900002f,-0.7f,0.7f,uint.MinValue,524287,2.670293E-06f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="202526503" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000581" asserts="0">
                <properties />
              </test-case>
              <test-case id="3910" name="CanScaleToUintAndBack(-0.4600002f,-0.7f,0.7f,uint.MinValue,524287,2.670293E-06f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(-0.4600002f,-0.7f,0.7f,uint.MinValue,524287,2.670293E-06f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="453741053" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000509" asserts="0">
                <properties />
              </test-case>
              <test-case id="3911" name="CanScaleToUintAndBack(-0.4300002f,-0.7f,0.7f,uint.MinValue,524287,2.670293E-06f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(-0.4300002f,-0.7f,0.7f,uint.MinValue,524287,2.670293E-06f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="1158472951" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000561" asserts="0">
                <properties />
              </test-case>
              <test-case id="3912" name="CanScaleToUintAndBack(-0.4000002f,-0.7f,0.7f,uint.MinValue,524287,2.670293E-06f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(-0.4000002f,-0.7f,0.7f,uint.MinValue,524287,2.670293E-06f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="1188418450" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000532" asserts="0">
                <properties />
              </test-case>
              <test-case id="3913" name="CanScaleToUintAndBack(-0.3700002f,-0.7f,0.7f,uint.MinValue,524287,2.670293E-06f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(-0.3700002f,-0.7f,0.7f,uint.MinValue,524287,2.670293E-06f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="75353628" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000511" asserts="0">
                <properties />
              </test-case>
              <test-case id="3914" name="CanScaleToUintAndBack(-0.3400002f,-0.7f,0.7f,uint.MinValue,524287,2.670293E-06f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(-0.3400002f,-0.7f,0.7f,uint.MinValue,524287,2.670293E-06f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="6094349" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000693" asserts="0">
                <properties />
              </test-case>
              <test-case id="3915" name="CanScaleToUintAndBack(-0.3100002f,-0.7f,0.7f,uint.MinValue,524287,2.670293E-06f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(-0.3100002f,-0.7f,0.7f,uint.MinValue,524287,2.670293E-06f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="137917896" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000537" asserts="0">
                <properties />
              </test-case>
              <test-case id="3916" name="CanScaleToUintAndBack(-0.2800002f,-0.7f,0.7f,uint.MinValue,524287,2.670293E-06f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(-0.2800002f,-0.7f,0.7f,uint.MinValue,524287,2.670293E-06f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="1426967687" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000514" asserts="0">
                <properties />
              </test-case>
              <test-case id="3917" name="CanScaleToUintAndBack(-0.2500001f,-0.7f,0.7f,uint.MinValue,524287,2.670293E-06f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(-0.2500001f,-0.7f,0.7f,uint.MinValue,524287,2.670293E-06f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="1166870849" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000502" asserts="0">
                <properties />
              </test-case>
              <test-case id="3918" name="CanScaleToUintAndBack(-0.2200001f,-0.7f,0.7f,uint.MinValue,524287,2.670293E-06f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(-0.2200001f,-0.7f,0.7f,uint.MinValue,524287,2.670293E-06f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="1135902637" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000682" asserts="0">
                <properties />
              </test-case>
              <test-case id="3919" name="CanScaleToUintAndBack(-0.1900001f,-0.7f,0.7f,uint.MinValue,524287,2.670293E-06f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(-0.1900001f,-0.7f,0.7f,uint.MinValue,524287,2.670293E-06f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="1009602759" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000821" asserts="0">
                <properties />
              </test-case>
              <test-case id="3920" name="CanScaleToUintAndBack(-0.1600001f,-0.7f,0.7f,uint.MinValue,524287,2.670293E-06f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(-0.1600001f,-0.7f,0.7f,uint.MinValue,524287,2.670293E-06f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="133341626" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000585" asserts="0">
                <properties />
              </test-case>
              <test-case id="3921" name="CanScaleToUintAndBack(-0.1300001f,-0.7f,0.7f,uint.MinValue,524287,2.670293E-06f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(-0.1300001f,-0.7f,0.7f,uint.MinValue,524287,2.670293E-06f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="729677224" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000640" asserts="0">
                <properties />
              </test-case>
              <test-case id="3922" name="CanScaleToUintAndBack(-0.1000001f,-0.7f,0.7f,uint.MinValue,524287,2.670293E-06f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(-0.1000001f,-0.7f,0.7f,uint.MinValue,524287,2.670293E-06f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="244840784" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000558" asserts="0">
                <properties />
              </test-case>
              <test-case id="3923" name="CanScaleToUintAndBack(-0.07000014f,-0.7f,0.7f,uint.MinValue,524287,2.670293E-06f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(-0.07000014f,-0.7f,0.7f,uint.MinValue,524287,2.670293E-06f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="1752724712" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000505" asserts="0">
                <properties />
              </test-case>
              <test-case id="3924" name="CanScaleToUintAndBack(-0.04000014f,-0.7f,0.7f,uint.MinValue,524287,2.670293E-06f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(-0.04000014f,-0.7f,0.7f,uint.MinValue,524287,2.670293E-06f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="1053224091" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000615" asserts="0">
                <properties />
              </test-case>
              <test-case id="3925" name="CanScaleToUintAndBack(-0.01000014f,-0.7f,0.7f,uint.MinValue,524287,2.670293E-06f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(-0.01000014f,-0.7f,0.7f,uint.MinValue,524287,2.670293E-06f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="2104879171" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000674" asserts="0">
                <properties />
              </test-case>
              <test-case id="3926" name="CanScaleToUintAndBack(0.01999986f,-0.7f,0.7f,uint.MinValue,524287,2.670293E-06f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(0.01999986f,-0.7f,0.7f,uint.MinValue,524287,2.670293E-06f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="805064744" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000528" asserts="0">
                <properties />
              </test-case>
              <test-case id="3927" name="CanScaleToUintAndBack(0.04999986f,-0.7f,0.7f,uint.MinValue,524287,2.670293E-06f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(0.04999986f,-0.7f,0.7f,uint.MinValue,524287,2.670293E-06f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="1268339931" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000517" asserts="0">
                <properties />
              </test-case>
              <test-case id="3928" name="CanScaleToUintAndBack(0.07999986f,-0.7f,0.7f,uint.MinValue,524287,2.670293E-06f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(0.07999986f,-0.7f,0.7f,uint.MinValue,524287,2.670293E-06f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="1888949456" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000514" asserts="0">
                <properties />
              </test-case>
              <test-case id="3929" name="CanScaleToUintAndBack(0.1099999f,-0.7f,0.7f,uint.MinValue,524287,2.670293E-06f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(0.1099999f,-0.7f,0.7f,uint.MinValue,524287,2.670293E-06f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="1388698074" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000585" asserts="0">
                <properties />
              </test-case>
              <test-case id="3930" name="CanScaleToUintAndBack(0.1399999f,-0.7f,0.7f,uint.MinValue,524287,2.670293E-06f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(0.1399999f,-0.7f,0.7f,uint.MinValue,524287,2.670293E-06f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="1363607643" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000638" asserts="0">
                <properties />
              </test-case>
              <test-case id="3931" name="CanScaleToUintAndBack(0.1699999f,-0.7f,0.7f,uint.MinValue,524287,2.670293E-06f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(0.1699999f,-0.7f,0.7f,uint.MinValue,524287,2.670293E-06f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="169465599" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000528" asserts="0">
                <properties />
              </test-case>
              <test-case id="3932" name="CanScaleToUintAndBack(0.1999999f,-0.7f,0.7f,uint.MinValue,524287,2.670293E-06f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(0.1999999f,-0.7f,0.7f,uint.MinValue,524287,2.670293E-06f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="1641738909" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000605" asserts="0">
                <properties />
              </test-case>
              <test-case id="3933" name="CanScaleToUintAndBack(0.2299999f,-0.7f,0.7f,uint.MinValue,524287,2.670293E-06f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(0.2299999f,-0.7f,0.7f,uint.MinValue,524287,2.670293E-06f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="1991789525" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000528" asserts="0">
                <properties />
              </test-case>
              <test-case id="3934" name="CanScaleToUintAndBack(0.2599998f,-0.7f,0.7f,uint.MinValue,524287,2.670293E-06f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(0.2599998f,-0.7f,0.7f,uint.MinValue,524287,2.670293E-06f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="619117625" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000520" asserts="0">
                <properties />
              </test-case>
              <test-case id="3935" name="CanScaleToUintAndBack(0.2899998f,-0.7f,0.7f,uint.MinValue,524287,2.670293E-06f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(0.2899998f,-0.7f,0.7f,uint.MinValue,524287,2.670293E-06f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="751469440" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000940" asserts="0">
                <properties />
              </test-case>
              <test-case id="3936" name="CanScaleToUintAndBack(0.3199998f,-0.7f,0.7f,uint.MinValue,524287,2.670293E-06f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(0.3199998f,-0.7f,0.7f,uint.MinValue,524287,2.670293E-06f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="426117161" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000535" asserts="0">
                <properties />
              </test-case>
              <test-case id="3937" name="CanScaleToUintAndBack(0.3499998f,-0.7f,0.7f,uint.MinValue,524287,2.670293E-06f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(0.3499998f,-0.7f,0.7f,uint.MinValue,524287,2.670293E-06f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="261619168" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000526" asserts="0">
                <properties />
              </test-case>
              <test-case id="3938" name="CanScaleToUintAndBack(0.3799998f,-0.7f,0.7f,uint.MinValue,524287,2.670293E-06f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(0.3799998f,-0.7f,0.7f,uint.MinValue,524287,2.670293E-06f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="1780433025" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000559" asserts="0">
                <properties />
              </test-case>
              <test-case id="3939" name="CanScaleToUintAndBack(0.4099998f,-0.7f,0.7f,uint.MinValue,524287,2.670293E-06f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(0.4099998f,-0.7f,0.7f,uint.MinValue,524287,2.670293E-06f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="1981565833" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000674" asserts="0">
                <properties />
              </test-case>
              <test-case id="3940" name="CanScaleToUintAndBack(0.4399998f,-0.7f,0.7f,uint.MinValue,524287,2.670293E-06f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(0.4399998f,-0.7f,0.7f,uint.MinValue,524287,2.670293E-06f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="414969901" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000585" asserts="0">
                <properties />
              </test-case>
              <test-case id="3941" name="CanScaleToUintAndBack(0.4699998f,-0.7f,0.7f,uint.MinValue,524287,2.670293E-06f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(0.4699998f,-0.7f,0.7f,uint.MinValue,524287,2.670293E-06f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="652121458" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000519" asserts="0">
                <properties />
              </test-case>
              <test-case id="3942" name="CanScaleToUintAndBack(0.4999999f,-0.7f,0.7f,uint.MinValue,524287,2.670293E-06f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(0.4999999f,-0.7f,0.7f,uint.MinValue,524287,2.670293E-06f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="1307531786" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000531" asserts="0">
                <properties />
              </test-case>
              <test-case id="3943" name="CanScaleToUintAndBack(0.5299999f,-0.7f,0.7f,uint.MinValue,524287,2.670293E-06f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(0.5299999f,-0.7f,0.7f,uint.MinValue,524287,2.670293E-06f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="676424622" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000514" asserts="0">
                <properties />
              </test-case>
              <test-case id="3944" name="CanScaleToUintAndBack(0.5599998f,-0.7f,0.7f,uint.MinValue,524287,2.670293E-06f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(0.5599998f,-0.7f,0.7f,uint.MinValue,524287,2.670293E-06f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="971873695" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000499" asserts="0">
                <properties />
              </test-case>
              <test-case id="3945" name="CanScaleToUintAndBack(0.5899998f,-0.7f,0.7f,uint.MinValue,524287,2.670293E-06f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(0.5899998f,-0.7f,0.7f,uint.MinValue,524287,2.670293E-06f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="1588484824" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.001338" asserts="0">
                <properties />
              </test-case>
              <test-case id="3946" name="CanScaleToUintAndBack(0.6199998f,-0.7f,0.7f,uint.MinValue,524287,2.670293E-06f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(0.6199998f,-0.7f,0.7f,uint.MinValue,524287,2.670293E-06f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="261269013" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000656" asserts="0">
                <properties />
              </test-case>
              <test-case id="3947" name="CanScaleToUintAndBack(0.6499997f,-0.7f,0.7f,uint.MinValue,524287,2.670293E-06f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(0.6499997f,-0.7f,0.7f,uint.MinValue,524287,2.670293E-06f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="1657011200" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000575" asserts="0">
                <properties />
              </test-case>
              <test-case id="3948" name="CanScaleToUintAndBack(0.6799997f,-0.7f,0.7f,uint.MinValue,524287,2.670293E-06f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(0.6799997f,-0.7f,0.7f,uint.MinValue,524287,2.670293E-06f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="891795867" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000519" asserts="0">
                <properties />
              </test-case>
              <test-case id="3949" name="CanScaleToUintAndBack(-0.7f,-0.7f,0.7f,1023,1048575,1.336449E-06f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(-0.7f,-0.7f,0.7f,1023,1048575,1.336449E-06f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="484692884" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000536" asserts="0">
                <properties />
              </test-case>
              <test-case id="3950" name="CanScaleToUintAndBack(-0.67f,-0.7f,0.7f,1023,1048575,1.336449E-06f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(-0.67f,-0.7f,0.7f,1023,1048575,1.336449E-06f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="791163504" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000717" asserts="0">
                <properties />
              </test-case>
              <test-case id="3951" name="CanScaleToUintAndBack(-0.64f,-0.7f,0.7f,1023,1048575,1.336449E-06f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(-0.64f,-0.7f,0.7f,1023,1048575,1.336449E-06f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="2072148620" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000557" asserts="0">
                <properties />
              </test-case>
              <test-case id="3952" name="CanScaleToUintAndBack(-0.6100001f,-0.7f,0.7f,1023,1048575,1.336449E-06f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(-0.6100001f,-0.7f,0.7f,1023,1048575,1.336449E-06f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="988954183" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000510" asserts="0">
                <properties />
              </test-case>
              <test-case id="3953" name="CanScaleToUintAndBack(-0.5800001f,-0.7f,0.7f,1023,1048575,1.336449E-06f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(-0.5800001f,-0.7f,0.7f,1023,1048575,1.336449E-06f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="719058841" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000552" asserts="0">
                <properties />
              </test-case>
              <test-case id="3954" name="CanScaleToUintAndBack(-0.5500001f,-0.7f,0.7f,1023,1048575,1.336449E-06f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(-0.5500001f,-0.7f,0.7f,1023,1048575,1.336449E-06f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="2000907996" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000584" asserts="0">
                <properties />
              </test-case>
              <test-case id="3955" name="CanScaleToUintAndBack(-0.5200002f,-0.7f,0.7f,1023,1048575,1.336449E-06f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(-0.5200002f,-0.7f,0.7f,1023,1048575,1.336449E-06f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="1077476604" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000620" asserts="0">
                <properties />
              </test-case>
              <test-case id="3956" name="CanScaleToUintAndBack(-0.4900002f,-0.7f,0.7f,1023,1048575,1.336449E-06f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(-0.4900002f,-0.7f,0.7f,1023,1048575,1.336449E-06f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="363187426" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000592" asserts="0">
                <properties />
              </test-case>
              <test-case id="3957" name="CanScaleToUintAndBack(-0.4600002f,-0.7f,0.7f,1023,1048575,1.336449E-06f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(-0.4600002f,-0.7f,0.7f,1023,1048575,1.336449E-06f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="213881061" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000555" asserts="0">
                <properties />
              </test-case>
              <test-case id="3958" name="CanScaleToUintAndBack(-0.4300002f,-0.7f,0.7f,1023,1048575,1.336449E-06f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(-0.4300002f,-0.7f,0.7f,1023,1048575,1.336449E-06f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="996538116" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000535" asserts="0">
                <properties />
              </test-case>
              <test-case id="3959" name="CanScaleToUintAndBack(-0.4000002f,-0.7f,0.7f,1023,1048575,1.336449E-06f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(-0.4000002f,-0.7f,0.7f,1023,1048575,1.336449E-06f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="136541970" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000536" asserts="0">
                <properties />
              </test-case>
              <test-case id="3960" name="CanScaleToUintAndBack(-0.3700002f,-0.7f,0.7f,1023,1048575,1.336449E-06f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(-0.3700002f,-0.7f,0.7f,1023,1048575,1.336449E-06f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="16403086" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000633" asserts="0">
                <properties />
              </test-case>
              <test-case id="3961" name="CanScaleToUintAndBack(-0.3400002f,-0.7f,0.7f,1023,1048575,1.336449E-06f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(-0.3400002f,-0.7f,0.7f,1023,1048575,1.336449E-06f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="217776908" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000558" asserts="0">
                <properties />
              </test-case>
              <test-case id="3962" name="CanScaleToUintAndBack(-0.3100002f,-0.7f,0.7f,1023,1048575,1.336449E-06f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(-0.3100002f,-0.7f,0.7f,1023,1048575,1.336449E-06f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="939822309" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000540" asserts="0">
                <properties />
              </test-case>
              <test-case id="3963" name="CanScaleToUintAndBack(-0.2800002f,-0.7f,0.7f,1023,1048575,1.336449E-06f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(-0.2800002f,-0.7f,0.7f,1023,1048575,1.336449E-06f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="627557983" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000512" asserts="0">
                <properties />
              </test-case>
              <test-case id="3964" name="CanScaleToUintAndBack(-0.2500001f,-0.7f,0.7f,1023,1048575,1.336449E-06f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(-0.2500001f,-0.7f,0.7f,1023,1048575,1.336449E-06f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="986402507" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000512" asserts="0">
                <properties />
              </test-case>
              <test-case id="3965" name="CanScaleToUintAndBack(-0.2200001f,-0.7f,0.7f,1023,1048575,1.336449E-06f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(-0.2200001f,-0.7f,0.7f,1023,1048575,1.336449E-06f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="284275454" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000514" asserts="0">
                <properties />
              </test-case>
              <test-case id="3966" name="CanScaleToUintAndBack(-0.1900001f,-0.7f,0.7f,1023,1048575,1.336449E-06f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(-0.1900001f,-0.7f,0.7f,1023,1048575,1.336449E-06f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="1664217689" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000607" asserts="0">
                <properties />
              </test-case>
              <test-case id="3967" name="CanScaleToUintAndBack(-0.1600001f,-0.7f,0.7f,1023,1048575,1.336449E-06f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(-0.1600001f,-0.7f,0.7f,1023,1048575,1.336449E-06f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="1344112572" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000547" asserts="0">
                <properties />
              </test-case>
              <test-case id="3968" name="CanScaleToUintAndBack(-0.1300001f,-0.7f,0.7f,1023,1048575,1.336449E-06f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(-0.1300001f,-0.7f,0.7f,1023,1048575,1.336449E-06f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="1603719650" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000595" asserts="0">
                <properties />
              </test-case>
              <test-case id="3969" name="CanScaleToUintAndBack(-0.1000001f,-0.7f,0.7f,1023,1048575,1.336449E-06f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(-0.1000001f,-0.7f,0.7f,1023,1048575,1.336449E-06f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="1402108556" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000575" asserts="0">
                <properties />
              </test-case>
              <test-case id="3970" name="CanScaleToUintAndBack(-0.07000014f,-0.7f,0.7f,1023,1048575,1.336449E-06f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(-0.07000014f,-0.7f,0.7f,1023,1048575,1.336449E-06f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="1859284382" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000520" asserts="0">
                <properties />
              </test-case>
              <test-case id="3971" name="CanScaleToUintAndBack(-0.04000014f,-0.7f,0.7f,1023,1048575,1.336449E-06f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(-0.04000014f,-0.7f,0.7f,1023,1048575,1.336449E-06f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="1165348519" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000521" asserts="0">
                <properties />
              </test-case>
              <test-case id="3972" name="CanScaleToUintAndBack(-0.01000014f,-0.7f,0.7f,1023,1048575,1.336449E-06f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(-0.01000014f,-0.7f,0.7f,1023,1048575,1.336449E-06f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="1533921471" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000838" asserts="0">
                <properties />
              </test-case>
              <test-case id="3973" name="CanScaleToUintAndBack(0.01999986f,-0.7f,0.7f,1023,1048575,1.336449E-06f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(0.01999986f,-0.7f,0.7f,1023,1048575,1.336449E-06f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="1301820451" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000634" asserts="0">
                <properties />
              </test-case>
              <test-case id="3974" name="CanScaleToUintAndBack(0.04999986f,-0.7f,0.7f,1023,1048575,1.336449E-06f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(0.04999986f,-0.7f,0.7f,1023,1048575,1.336449E-06f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="594632858" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000545" asserts="0">
                <properties />
              </test-case>
              <test-case id="3975" name="CanScaleToUintAndBack(0.07999986f,-0.7f,0.7f,1023,1048575,1.336449E-06f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(0.07999986f,-0.7f,0.7f,1023,1048575,1.336449E-06f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="1628703815" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000550" asserts="0">
                <properties />
              </test-case>
              <test-case id="3976" name="CanScaleToUintAndBack(0.1099999f,-0.7f,0.7f,1023,1048575,1.336449E-06f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(0.1099999f,-0.7f,0.7f,1023,1048575,1.336449E-06f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="1569629085" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000738" asserts="0">
                <properties />
              </test-case>
              <test-case id="3977" name="CanScaleToUintAndBack(0.1399999f,-0.7f,0.7f,1023,1048575,1.336449E-06f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(0.1399999f,-0.7f,0.7f,1023,1048575,1.336449E-06f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="1715899809" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000624" asserts="0">
                <properties />
              </test-case>
              <test-case id="3978" name="CanScaleToUintAndBack(0.1699999f,-0.7f,0.7f,1023,1048575,1.336449E-06f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(0.1699999f,-0.7f,0.7f,1023,1048575,1.336449E-06f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="780851017" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000523" asserts="0">
                <properties />
              </test-case>
              <test-case id="3979" name="CanScaleToUintAndBack(0.1999999f,-0.7f,0.7f,1023,1048575,1.336449E-06f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(0.1999999f,-0.7f,0.7f,1023,1048575,1.336449E-06f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="1612222914" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000512" asserts="0">
                <properties />
              </test-case>
              <test-case id="3980" name="CanScaleToUintAndBack(0.2299999f,-0.7f,0.7f,1023,1048575,1.336449E-06f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(0.2299999f,-0.7f,0.7f,1023,1048575,1.336449E-06f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="1843610158" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000584" asserts="0">
                <properties />
              </test-case>
              <test-case id="3981" name="CanScaleToUintAndBack(0.2599998f,-0.7f,0.7f,1023,1048575,1.336449E-06f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(0.2599998f,-0.7f,0.7f,1023,1048575,1.336449E-06f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="1295537191" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000519" asserts="0">
                <properties />
              </test-case>
              <test-case id="3982" name="CanScaleToUintAndBack(0.2899998f,-0.7f,0.7f,1023,1048575,1.336449E-06f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(0.2899998f,-0.7f,0.7f,1023,1048575,1.336449E-06f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="376544064" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000555" asserts="0">
                <properties />
              </test-case>
              <test-case id="3983" name="CanScaleToUintAndBack(0.3199998f,-0.7f,0.7f,1023,1048575,1.336449E-06f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(0.3199998f,-0.7f,0.7f,1023,1048575,1.336449E-06f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="1404256572" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000958" asserts="0">
                <properties />
              </test-case>
              <test-case id="3984" name="CanScaleToUintAndBack(0.3499998f,-0.7f,0.7f,1023,1048575,1.336449E-06f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(0.3499998f,-0.7f,0.7f,1023,1048575,1.336449E-06f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="597534570" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000617" asserts="0">
                <properties />
              </test-case>
              <test-case id="3985" name="CanScaleToUintAndBack(0.3799998f,-0.7f,0.7f,1023,1048575,1.336449E-06f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(0.3799998f,-0.7f,0.7f,1023,1048575,1.336449E-06f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="1438942670" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000537" asserts="0">
                <properties />
              </test-case>
              <test-case id="3986" name="CanScaleToUintAndBack(0.4099998f,-0.7f,0.7f,1023,1048575,1.336449E-06f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(0.4099998f,-0.7f,0.7f,1023,1048575,1.336449E-06f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="1327995063" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000540" asserts="0">
                <properties />
              </test-case>
              <test-case id="3987" name="CanScaleToUintAndBack(0.4399998f,-0.7f,0.7f,1023,1048575,1.336449E-06f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(0.4399998f,-0.7f,0.7f,1023,1048575,1.336449E-06f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="922680068" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000569" asserts="0">
                <properties />
              </test-case>
              <test-case id="3988" name="CanScaleToUintAndBack(0.4699998f,-0.7f,0.7f,1023,1048575,1.336449E-06f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(0.4699998f,-0.7f,0.7f,1023,1048575,1.336449E-06f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="2138365176" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000536" asserts="0">
                <properties />
              </test-case>
              <test-case id="3989" name="CanScaleToUintAndBack(0.4999999f,-0.7f,0.7f,1023,1048575,1.336449E-06f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(0.4999999f,-0.7f,0.7f,1023,1048575,1.336449E-06f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="1689124668" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000527" asserts="0">
                <properties />
              </test-case>
              <test-case id="3990" name="CanScaleToUintAndBack(0.5299999f,-0.7f,0.7f,1023,1048575,1.336449E-06f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(0.5299999f,-0.7f,0.7f,1023,1048575,1.336449E-06f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="388282014" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000524" asserts="0">
                <properties />
              </test-case>
              <test-case id="3991" name="CanScaleToUintAndBack(0.5599998f,-0.7f,0.7f,1023,1048575,1.336449E-06f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(0.5599998f,-0.7f,0.7f,1023,1048575,1.336449E-06f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="212236100" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000653" asserts="0">
                <properties />
              </test-case>
              <test-case id="3992" name="CanScaleToUintAndBack(0.5899998f,-0.7f,0.7f,1023,1048575,1.336449E-06f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(0.5899998f,-0.7f,0.7f,1023,1048575,1.336449E-06f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="1412564699" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000535" asserts="0">
                <properties />
              </test-case>
              <test-case id="3993" name="CanScaleToUintAndBack(0.6199998f,-0.7f,0.7f,1023,1048575,1.336449E-06f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(0.6199998f,-0.7f,0.7f,1023,1048575,1.336449E-06f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="1643891055" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000560" asserts="0">
                <properties />
              </test-case>
              <test-case id="3994" name="CanScaleToUintAndBack(0.6499997f,-0.7f,0.7f,1023,1048575,1.336449E-06f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(0.6499997f,-0.7f,0.7f,1023,1048575,1.336449E-06f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="1965162747" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000510" asserts="0">
                <properties />
              </test-case>
              <test-case id="3995" name="CanScaleToUintAndBack(0.6799997f,-0.7f,0.7f,1023,1048575,1.336449E-06f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(0.6799997f,-0.7f,0.7f,1023,1048575,1.336449E-06f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="197192993" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000516" asserts="0">
                <properties />
              </test-case>
              <test-case id="3996" name="CanScaleToUintAndBack(10.0f,10.0f,200.0f,uint.MinValue,524287,0.0003623969f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(10.0f,10.0f,200.0f,uint.MinValue,524287,0.0003623969f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="1859782796" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000534" asserts="0">
                <properties />
              </test-case>
              <test-case id="3997" name="CanScaleToUintAndBack(12.0f,10.0f,200.0f,uint.MinValue,524287,0.0003623969f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(12.0f,10.0f,200.0f,uint.MinValue,524287,0.0003623969f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="679973803" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000516" asserts="0">
                <properties />
              </test-case>
              <test-case id="3998" name="CanScaleToUintAndBack(14.0f,10.0f,200.0f,uint.MinValue,524287,0.0003623969f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(14.0f,10.0f,200.0f,uint.MinValue,524287,0.0003623969f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="1837505762" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.001535" asserts="0">
                <properties />
              </test-case>
              <test-case id="3999" name="CanScaleToUintAndBack(16.0f,10.0f,200.0f,uint.MinValue,524287,0.0003623969f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(16.0f,10.0f,200.0f,uint.MinValue,524287,0.0003623969f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="687598241" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000889" asserts="0">
                <properties />
              </test-case>
              <test-case id="4000" name="CanScaleToUintAndBack(18.0f,10.0f,200.0f,uint.MinValue,524287,0.0003623969f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(18.0f,10.0f,200.0f,uint.MinValue,524287,0.0003623969f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="2071750782" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000703" asserts="0">
                <properties />
              </test-case>
              <test-case id="4001" name="CanScaleToUintAndBack(20.0f,10.0f,200.0f,uint.MinValue,524287,0.0003623969f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(20.0f,10.0f,200.0f,uint.MinValue,524287,0.0003623969f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="1064640088" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000541" asserts="0">
                <properties />
              </test-case>
              <test-case id="4002" name="CanScaleToUintAndBack(22.0f,10.0f,200.0f,uint.MinValue,524287,0.0003623969f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(22.0f,10.0f,200.0f,uint.MinValue,524287,0.0003623969f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="53291550" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000550" asserts="0">
                <properties />
              </test-case>
              <test-case id="4003" name="CanScaleToUintAndBack(24.0f,10.0f,200.0f,uint.MinValue,524287,0.0003623969f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(24.0f,10.0f,200.0f,uint.MinValue,524287,0.0003623969f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="1637170958" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000651" asserts="0">
                <properties />
              </test-case>
              <test-case id="4004" name="CanScaleToUintAndBack(26.0f,10.0f,200.0f,uint.MinValue,524287,0.0003623969f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(26.0f,10.0f,200.0f,uint.MinValue,524287,0.0003623969f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="772892149" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000523" asserts="0">
                <properties />
              </test-case>
              <test-case id="4005" name="CanScaleToUintAndBack(28.0f,10.0f,200.0f,uint.MinValue,524287,0.0003623969f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(28.0f,10.0f,200.0f,uint.MinValue,524287,0.0003623969f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="1773298632" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000631" asserts="0">
                <properties />
              </test-case>
              <test-case id="4006" name="CanScaleToUintAndBack(30.0f,10.0f,200.0f,uint.MinValue,524287,0.0003623969f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(30.0f,10.0f,200.0f,uint.MinValue,524287,0.0003623969f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="538227149" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000542" asserts="0">
                <properties />
              </test-case>
              <test-case id="4007" name="CanScaleToUintAndBack(32.0f,10.0f,200.0f,uint.MinValue,524287,0.0003623969f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(32.0f,10.0f,200.0f,uint.MinValue,524287,0.0003623969f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="1834617379" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000567" asserts="0">
                <properties />
              </test-case>
              <test-case id="4008" name="CanScaleToUintAndBack(34.0f,10.0f,200.0f,uint.MinValue,524287,0.0003623969f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(34.0f,10.0f,200.0f,uint.MinValue,524287,0.0003623969f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="124425983" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000763" asserts="0">
                <properties />
              </test-case>
              <test-case id="4009" name="CanScaleToUintAndBack(36.0f,10.0f,200.0f,uint.MinValue,524287,0.0003623969f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(36.0f,10.0f,200.0f,uint.MinValue,524287,0.0003623969f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="372204181" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000521" asserts="0">
                <properties />
              </test-case>
              <test-case id="4010" name="CanScaleToUintAndBack(38.0f,10.0f,200.0f,uint.MinValue,524287,0.0003623969f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(38.0f,10.0f,200.0f,uint.MinValue,524287,0.0003623969f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="1655331166" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000552" asserts="0">
                <properties />
              </test-case>
              <test-case id="4011" name="CanScaleToUintAndBack(40.0f,10.0f,200.0f,uint.MinValue,524287,0.0003623969f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(40.0f,10.0f,200.0f,uint.MinValue,524287,0.0003623969f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="794771264" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000592" asserts="0">
                <properties />
              </test-case>
              <test-case id="4012" name="CanScaleToUintAndBack(42.0f,10.0f,200.0f,uint.MinValue,524287,0.0003623969f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(42.0f,10.0f,200.0f,uint.MinValue,524287,0.0003623969f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="1580513691" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000598" asserts="0">
                <properties />
              </test-case>
              <test-case id="4013" name="CanScaleToUintAndBack(44.0f,10.0f,200.0f,uint.MinValue,524287,0.0003623969f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(44.0f,10.0f,200.0f,uint.MinValue,524287,0.0003623969f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="1531798849" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000520" asserts="0">
                <properties />
              </test-case>
              <test-case id="4014" name="CanScaleToUintAndBack(46.0f,10.0f,200.0f,uint.MinValue,524287,0.0003623969f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(46.0f,10.0f,200.0f,uint.MinValue,524287,0.0003623969f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="440415459" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000535" asserts="0">
                <properties />
              </test-case>
              <test-case id="4015" name="CanScaleToUintAndBack(48.0f,10.0f,200.0f,uint.MinValue,524287,0.0003623969f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(48.0f,10.0f,200.0f,uint.MinValue,524287,0.0003623969f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="868349542" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000709" asserts="0">
                <properties />
              </test-case>
              <test-case id="4016" name="CanScaleToUintAndBack(50.0f,10.0f,200.0f,uint.MinValue,524287,0.0003623969f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(50.0f,10.0f,200.0f,uint.MinValue,524287,0.0003623969f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="1988716491" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000519" asserts="0">
                <properties />
              </test-case>
              <test-case id="4017" name="CanScaleToUintAndBack(52.0f,10.0f,200.0f,uint.MinValue,524287,0.0003623969f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(52.0f,10.0f,200.0f,uint.MinValue,524287,0.0003623969f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="1683049384" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000495" asserts="0">
                <properties />
              </test-case>
              <test-case id="4018" name="CanScaleToUintAndBack(54.0f,10.0f,200.0f,uint.MinValue,524287,0.0003623969f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(54.0f,10.0f,200.0f,uint.MinValue,524287,0.0003623969f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="30023413" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000797" asserts="0">
                <properties />
              </test-case>
              <test-case id="4019" name="CanScaleToUintAndBack(56.0f,10.0f,200.0f,uint.MinValue,524287,0.0003623969f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(56.0f,10.0f,200.0f,uint.MinValue,524287,0.0003623969f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="1694943484" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000709" asserts="0">
                <properties />
              </test-case>
              <test-case id="4020" name="CanScaleToUintAndBack(58.0f,10.0f,200.0f,uint.MinValue,524287,0.0003623969f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(58.0f,10.0f,200.0f,uint.MinValue,524287,0.0003623969f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="1103764038" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000817" asserts="0">
                <properties />
              </test-case>
              <test-case id="4021" name="CanScaleToUintAndBack(60.0f,10.0f,200.0f,uint.MinValue,524287,0.0003623969f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(60.0f,10.0f,200.0f,uint.MinValue,524287,0.0003623969f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="741537621" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000551" asserts="0">
                <properties />
              </test-case>
              <test-case id="4022" name="CanScaleToUintAndBack(62.0f,10.0f,200.0f,uint.MinValue,524287,0.0003623969f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(62.0f,10.0f,200.0f,uint.MinValue,524287,0.0003623969f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="1353231043" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000608" asserts="0">
                <properties />
              </test-case>
              <test-case id="4023" name="CanScaleToUintAndBack(64.0f,10.0f,200.0f,uint.MinValue,524287,0.0003623969f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(64.0f,10.0f,200.0f,uint.MinValue,524287,0.0003623969f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="2062078629" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000591" asserts="0">
                <properties />
              </test-case>
              <test-case id="4024" name="CanScaleToUintAndBack(66.0f,10.0f,200.0f,uint.MinValue,524287,0.0003623969f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(66.0f,10.0f,200.0f,uint.MinValue,524287,0.0003623969f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="1013826542" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000527" asserts="0">
                <properties />
              </test-case>
              <test-case id="4025" name="CanScaleToUintAndBack(68.0f,10.0f,200.0f,uint.MinValue,524287,0.0003623969f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(68.0f,10.0f,200.0f,uint.MinValue,524287,0.0003623969f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="1647048282" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000559" asserts="0">
                <properties />
              </test-case>
              <test-case id="4026" name="CanScaleToUintAndBack(70.0f,10.0f,200.0f,uint.MinValue,524287,0.0003623969f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(70.0f,10.0f,200.0f,uint.MinValue,524287,0.0003623969f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="1900267467" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000621" asserts="0">
                <properties />
              </test-case>
              <test-case id="4027" name="CanScaleToUintAndBack(72.0f,10.0f,200.0f,uint.MinValue,524287,0.0003623969f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(72.0f,10.0f,200.0f,uint.MinValue,524287,0.0003623969f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="2037514063" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000670" asserts="0">
                <properties />
              </test-case>
              <test-case id="4028" name="CanScaleToUintAndBack(74.0f,10.0f,200.0f,uint.MinValue,524287,0.0003623969f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(74.0f,10.0f,200.0f,uint.MinValue,524287,0.0003623969f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="1484141351" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000544" asserts="0">
                <properties />
              </test-case>
              <test-case id="4029" name="CanScaleToUintAndBack(76.0f,10.0f,200.0f,uint.MinValue,524287,0.0003623969f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(76.0f,10.0f,200.0f,uint.MinValue,524287,0.0003623969f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="397439865" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000520" asserts="0">
                <properties />
              </test-case>
              <test-case id="4030" name="CanScaleToUintAndBack(78.0f,10.0f,200.0f,uint.MinValue,524287,0.0003623969f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(78.0f,10.0f,200.0f,uint.MinValue,524287,0.0003623969f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="1916404666" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000546" asserts="0">
                <properties />
              </test-case>
              <test-case id="4031" name="CanScaleToUintAndBack(80.0f,10.0f,200.0f,uint.MinValue,524287,0.0003623969f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(80.0f,10.0f,200.0f,uint.MinValue,524287,0.0003623969f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="889655282" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000523" asserts="0">
                <properties />
              </test-case>
              <test-case id="4032" name="CanScaleToUintAndBack(82.0f,10.0f,200.0f,uint.MinValue,524287,0.0003623969f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(82.0f,10.0f,200.0f,uint.MinValue,524287,0.0003623969f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="2025877694" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000523" asserts="0">
                <properties />
              </test-case>
              <test-case id="4033" name="CanScaleToUintAndBack(84.0f,10.0f,200.0f,uint.MinValue,524287,0.0003623969f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(84.0f,10.0f,200.0f,uint.MinValue,524287,0.0003623969f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="93252776" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000529" asserts="0">
                <properties />
              </test-case>
              <test-case id="4034" name="CanScaleToUintAndBack(86.0f,10.0f,200.0f,uint.MinValue,524287,0.0003623969f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(86.0f,10.0f,200.0f,uint.MinValue,524287,0.0003623969f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="1687955779" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000593" asserts="0">
                <properties />
              </test-case>
              <test-case id="4035" name="CanScaleToUintAndBack(88.0f,10.0f,200.0f,uint.MinValue,524287,0.0003623969f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(88.0f,10.0f,200.0f,uint.MinValue,524287,0.0003623969f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="778970070" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000519" asserts="0">
                <properties />
              </test-case>
              <test-case id="4036" name="CanScaleToUintAndBack(90.0f,10.0f,200.0f,uint.MinValue,524287,0.0003623969f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(90.0f,10.0f,200.0f,uint.MinValue,524287,0.0003623969f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="1242245641" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000525" asserts="0">
                <properties />
              </test-case>
              <test-case id="4037" name="CanScaleToUintAndBack(92.0f,10.0f,200.0f,uint.MinValue,524287,0.0003623969f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(92.0f,10.0f,200.0f,uint.MinValue,524287,0.0003623969f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="886856753" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000532" asserts="0">
                <properties />
              </test-case>
              <test-case id="4038" name="CanScaleToUintAndBack(94.0f,10.0f,200.0f,uint.MinValue,524287,0.0003623969f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(94.0f,10.0f,200.0f,uint.MinValue,524287,0.0003623969f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="631364423" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000499" asserts="0">
                <properties />
              </test-case>
              <test-case id="4039" name="CanScaleToUintAndBack(96.0f,10.0f,200.0f,uint.MinValue,524287,0.0003623969f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(96.0f,10.0f,200.0f,uint.MinValue,524287,0.0003623969f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="971719585" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000869" asserts="0">
                <properties />
              </test-case>
              <test-case id="4040" name="CanScaleToUintAndBack(98.0f,10.0f,200.0f,uint.MinValue,524287,0.0003623969f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(98.0f,10.0f,200.0f,uint.MinValue,524287,0.0003623969f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="900715521" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000669" asserts="0">
                <properties />
              </test-case>
              <test-case id="4041" name="CanScaleToUintAndBack(100.0f,10.0f,200.0f,uint.MinValue,524287,0.0003623969f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(100.0f,10.0f,200.0f,uint.MinValue,524287,0.0003623969f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="1640861331" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000589" asserts="0">
                <properties />
              </test-case>
              <test-case id="4042" name="CanScaleToUintAndBack(102.0f,10.0f,200.0f,uint.MinValue,524287,0.0003623969f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(102.0f,10.0f,200.0f,uint.MinValue,524287,0.0003623969f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="798254085" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000553" asserts="0">
                <properties />
              </test-case>
              <test-case id="4043" name="CanScaleToUintAndBack(104.0f,10.0f,200.0f,uint.MinValue,524287,0.0003623969f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(104.0f,10.0f,200.0f,uint.MinValue,524287,0.0003623969f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="1766160995" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000581" asserts="0">
                <properties />
              </test-case>
              <test-case id="4044" name="CanScaleToUintAndBack(106.0f,10.0f,200.0f,uint.MinValue,524287,0.0003623969f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(106.0f,10.0f,200.0f,uint.MinValue,524287,0.0003623969f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="33793502" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000631" asserts="0">
                <properties />
              </test-case>
              <test-case id="4045" name="CanScaleToUintAndBack(108.0f,10.0f,200.0f,uint.MinValue,524287,0.0003623969f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(108.0f,10.0f,200.0f,uint.MinValue,524287,0.0003623969f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="1740994397" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000568" asserts="0">
                <properties />
              </test-case>
              <test-case id="4046" name="CanScaleToUintAndBack(110.0f,10.0f,200.0f,uint.MinValue,524287,0.0003623969f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(110.0f,10.0f,200.0f,uint.MinValue,524287,0.0003623969f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="779206056" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000522" asserts="0">
                <properties />
              </test-case>
              <test-case id="4047" name="CanScaleToUintAndBack(112.0f,10.0f,200.0f,uint.MinValue,524287,0.0003623969f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(112.0f,10.0f,200.0f,uint.MinValue,524287,0.0003623969f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="2028249497" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000540" asserts="0">
                <properties />
              </test-case>
              <test-case id="4048" name="CanScaleToUintAndBack(114.0f,10.0f,200.0f,uint.MinValue,524287,0.0003623969f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(114.0f,10.0f,200.0f,uint.MinValue,524287,0.0003623969f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="1203475596" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000570" asserts="0">
                <properties />
              </test-case>
              <test-case id="4049" name="CanScaleToUintAndBack(116.0f,10.0f,200.0f,uint.MinValue,524287,0.0003623969f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(116.0f,10.0f,200.0f,uint.MinValue,524287,0.0003623969f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="1096813205" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000888" asserts="0">
                <properties />
              </test-case>
              <test-case id="4050" name="CanScaleToUintAndBack(118.0f,10.0f,200.0f,uint.MinValue,524287,0.0003623969f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(118.0f,10.0f,200.0f,uint.MinValue,524287,0.0003623969f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="355960149" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000756" asserts="0">
                <properties />
              </test-case>
              <test-case id="4051" name="CanScaleToUintAndBack(120.0f,10.0f,200.0f,uint.MinValue,524287,0.0003623969f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(120.0f,10.0f,200.0f,uint.MinValue,524287,0.0003623969f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="176733412" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000651" asserts="0">
                <properties />
              </test-case>
              <test-case id="4052" name="CanScaleToUintAndBack(122.0f,10.0f,200.0f,uint.MinValue,524287,0.0003623969f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(122.0f,10.0f,200.0f,uint.MinValue,524287,0.0003623969f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="649950390" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000554" asserts="0">
                <properties />
              </test-case>
              <test-case id="4053" name="CanScaleToUintAndBack(124.0f,10.0f,200.0f,uint.MinValue,524287,0.0003623969f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(124.0f,10.0f,200.0f,uint.MinValue,524287,0.0003623969f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="142562278" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000544" asserts="0">
                <properties />
              </test-case>
              <test-case id="4054" name="CanScaleToUintAndBack(126.0f,10.0f,200.0f,uint.MinValue,524287,0.0003623969f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(126.0f,10.0f,200.0f,uint.MinValue,524287,0.0003623969f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="1731317850" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000598" asserts="0">
                <properties />
              </test-case>
              <test-case id="4055" name="CanScaleToUintAndBack(128.0f,10.0f,200.0f,uint.MinValue,524287,0.0003623969f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(128.0f,10.0f,200.0f,uint.MinValue,524287,0.0003623969f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="1330213161" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000624" asserts="0">
                <properties />
              </test-case>
              <test-case id="4056" name="CanScaleToUintAndBack(130.0f,10.0f,200.0f,uint.MinValue,524287,0.0003623969f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(130.0f,10.0f,200.0f,uint.MinValue,524287,0.0003623969f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="1858892692" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000589" asserts="0">
                <properties />
              </test-case>
              <test-case id="4057" name="CanScaleToUintAndBack(132.0f,10.0f,200.0f,uint.MinValue,524287,0.0003623969f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(132.0f,10.0f,200.0f,uint.MinValue,524287,0.0003623969f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="138696568" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000540" asserts="0">
                <properties />
              </test-case>
              <test-case id="4058" name="CanScaleToUintAndBack(134.0f,10.0f,200.0f,uint.MinValue,524287,0.0003623969f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(134.0f,10.0f,200.0f,uint.MinValue,524287,0.0003623969f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="623344416" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000525" asserts="0">
                <properties />
              </test-case>
              <test-case id="4059" name="CanScaleToUintAndBack(136.0f,10.0f,200.0f,uint.MinValue,524287,0.0003623969f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(136.0f,10.0f,200.0f,uint.MinValue,524287,0.0003623969f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="1273327514" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000558" asserts="0">
                <properties />
              </test-case>
              <test-case id="4060" name="CanScaleToUintAndBack(138.0f,10.0f,200.0f,uint.MinValue,524287,0.0003623969f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(138.0f,10.0f,200.0f,uint.MinValue,524287,0.0003623969f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="2020514812" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:08Z" duration="0.000625" asserts="0">
                <properties />
              </test-case>
              <test-case id="4061" name="CanScaleToUintAndBack(140.0f,10.0f,200.0f,uint.MinValue,524287,0.0003623969f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(140.0f,10.0f,200.0f,uint.MinValue,524287,0.0003623969f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="648196733" result="Passed" start-time="2021-03-06 06:27:08Z" end-time="2021-03-06 06:27:09Z" duration="0.000549" asserts="0">
                <properties />
              </test-case>
              <test-case id="4062" name="CanScaleToUintAndBack(142.0f,10.0f,200.0f,uint.MinValue,524287,0.0003623969f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(142.0f,10.0f,200.0f,uint.MinValue,524287,0.0003623969f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="350476028" result="Passed" start-time="2021-03-06 06:27:09Z" end-time="2021-03-06 06:27:09Z" duration="0.000549" asserts="0">
                <properties />
              </test-case>
              <test-case id="4063" name="CanScaleToUintAndBack(144.0f,10.0f,200.0f,uint.MinValue,524287,0.0003623969f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(144.0f,10.0f,200.0f,uint.MinValue,524287,0.0003623969f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="1874469765" result="Passed" start-time="2021-03-06 06:27:09Z" end-time="2021-03-06 06:27:09Z" duration="0.000582" asserts="0">
                <properties />
              </test-case>
              <test-case id="4064" name="CanScaleToUintAndBack(146.0f,10.0f,200.0f,uint.MinValue,524287,0.0003623969f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(146.0f,10.0f,200.0f,uint.MinValue,524287,0.0003623969f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="603283162" result="Passed" start-time="2021-03-06 06:27:09Z" end-time="2021-03-06 06:27:09Z" duration="0.000570" asserts="0">
                <properties />
              </test-case>
              <test-case id="4065" name="CanScaleToUintAndBack(148.0f,10.0f,200.0f,uint.MinValue,524287,0.0003623969f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(148.0f,10.0f,200.0f,uint.MinValue,524287,0.0003623969f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="765675884" result="Passed" start-time="2021-03-06 06:27:09Z" end-time="2021-03-06 06:27:09Z" duration="0.000557" asserts="0">
                <properties />
              </test-case>
              <test-case id="4066" name="CanScaleToUintAndBack(150.0f,10.0f,200.0f,uint.MinValue,524287,0.0003623969f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(150.0f,10.0f,200.0f,uint.MinValue,524287,0.0003623969f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="916377217" result="Passed" start-time="2021-03-06 06:27:09Z" end-time="2021-03-06 06:27:09Z" duration="0.000671" asserts="0">
                <properties />
              </test-case>
              <test-case id="4067" name="CanScaleToUintAndBack(152.0f,10.0f,200.0f,uint.MinValue,524287,0.0003623969f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(152.0f,10.0f,200.0f,uint.MinValue,524287,0.0003623969f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="1487260915" result="Passed" start-time="2021-03-06 06:27:09Z" end-time="2021-03-06 06:27:09Z" duration="0.000527" asserts="0">
                <properties />
              </test-case>
              <test-case id="4068" name="CanScaleToUintAndBack(154.0f,10.0f,200.0f,uint.MinValue,524287,0.0003623969f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(154.0f,10.0f,200.0f,uint.MinValue,524287,0.0003623969f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="1991326717" result="Passed" start-time="2021-03-06 06:27:09Z" end-time="2021-03-06 06:27:09Z" duration="0.000535" asserts="0">
                <properties />
              </test-case>
              <test-case id="4069" name="CanScaleToUintAndBack(156.0f,10.0f,200.0f,uint.MinValue,524287,0.0003623969f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(156.0f,10.0f,200.0f,uint.MinValue,524287,0.0003623969f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="1808929036" result="Passed" start-time="2021-03-06 06:27:09Z" end-time="2021-03-06 06:27:09Z" duration="0.000725" asserts="0">
                <properties />
              </test-case>
              <test-case id="4070" name="CanScaleToUintAndBack(158.0f,10.0f,200.0f,uint.MinValue,524287,0.0003623969f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(158.0f,10.0f,200.0f,uint.MinValue,524287,0.0003623969f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="1773587548" result="Passed" start-time="2021-03-06 06:27:09Z" end-time="2021-03-06 06:27:09Z" duration="0.000637" asserts="0">
                <properties />
              </test-case>
              <test-case id="4071" name="CanScaleToUintAndBack(160.0f,10.0f,200.0f,uint.MinValue,524287,0.0003623969f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(160.0f,10.0f,200.0f,uint.MinValue,524287,0.0003623969f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="1101859738" result="Passed" start-time="2021-03-06 06:27:09Z" end-time="2021-03-06 06:27:09Z" duration="0.000564" asserts="0">
                <properties />
              </test-case>
              <test-case id="4072" name="CanScaleToUintAndBack(162.0f,10.0f,200.0f,uint.MinValue,524287,0.0003623969f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(162.0f,10.0f,200.0f,uint.MinValue,524287,0.0003623969f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="1051684961" result="Passed" start-time="2021-03-06 06:27:09Z" end-time="2021-03-06 06:27:09Z" duration="0.000535" asserts="0">
                <properties />
              </test-case>
              <test-case id="4073" name="CanScaleToUintAndBack(164.0f,10.0f,200.0f,uint.MinValue,524287,0.0003623969f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(164.0f,10.0f,200.0f,uint.MinValue,524287,0.0003623969f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="1205787475" result="Passed" start-time="2021-03-06 06:27:09Z" end-time="2021-03-06 06:27:09Z" duration="0.000526" asserts="0">
                <properties />
              </test-case>
              <test-case id="4074" name="CanScaleToUintAndBack(166.0f,10.0f,200.0f,uint.MinValue,524287,0.0003623969f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(166.0f,10.0f,200.0f,uint.MinValue,524287,0.0003623969f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="794227963" result="Passed" start-time="2021-03-06 06:27:09Z" end-time="2021-03-06 06:27:09Z" duration="0.000512" asserts="0">
                <properties />
              </test-case>
              <test-case id="4075" name="CanScaleToUintAndBack(168.0f,10.0f,200.0f,uint.MinValue,524287,0.0003623969f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(168.0f,10.0f,200.0f,uint.MinValue,524287,0.0003623969f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="1610386354" result="Passed" start-time="2021-03-06 06:27:09Z" end-time="2021-03-06 06:27:09Z" duration="0.000874" asserts="0">
                <properties />
              </test-case>
              <test-case id="4076" name="CanScaleToUintAndBack(170.0f,10.0f,200.0f,uint.MinValue,524287,0.0003623969f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(170.0f,10.0f,200.0f,uint.MinValue,524287,0.0003623969f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="2090767183" result="Passed" start-time="2021-03-06 06:27:09Z" end-time="2021-03-06 06:27:09Z" duration="0.000647" asserts="0">
                <properties />
              </test-case>
              <test-case id="4077" name="CanScaleToUintAndBack(172.0f,10.0f,200.0f,uint.MinValue,524287,0.0003623969f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(172.0f,10.0f,200.0f,uint.MinValue,524287,0.0003623969f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="1734553695" result="Passed" start-time="2021-03-06 06:27:09Z" end-time="2021-03-06 06:27:09Z" duration="0.000674" asserts="0">
                <properties />
              </test-case>
              <test-case id="4078" name="CanScaleToUintAndBack(174.0f,10.0f,200.0f,uint.MinValue,524287,0.0003623969f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(174.0f,10.0f,200.0f,uint.MinValue,524287,0.0003623969f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="2028285127" result="Passed" start-time="2021-03-06 06:27:09Z" end-time="2021-03-06 06:27:09Z" duration="0.000625" asserts="0">
                <properties />
              </test-case>
              <test-case id="4079" name="CanScaleToUintAndBack(176.0f,10.0f,200.0f,uint.MinValue,524287,0.0003623969f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(176.0f,10.0f,200.0f,uint.MinValue,524287,0.0003623969f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="1420315792" result="Passed" start-time="2021-03-06 06:27:09Z" end-time="2021-03-06 06:27:09Z" duration="0.000594" asserts="0">
                <properties />
              </test-case>
              <test-case id="4080" name="CanScaleToUintAndBack(178.0f,10.0f,200.0f,uint.MinValue,524287,0.0003623969f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(178.0f,10.0f,200.0f,uint.MinValue,524287,0.0003623969f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="867842226" result="Passed" start-time="2021-03-06 06:27:09Z" end-time="2021-03-06 06:27:09Z" duration="0.000669" asserts="0">
                <properties />
              </test-case>
              <test-case id="4081" name="CanScaleToUintAndBack(180.0f,10.0f,200.0f,uint.MinValue,524287,0.0003623969f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(180.0f,10.0f,200.0f,uint.MinValue,524287,0.0003623969f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="2019501617" result="Passed" start-time="2021-03-06 06:27:09Z" end-time="2021-03-06 06:27:09Z" duration="0.000531" asserts="0">
                <properties />
              </test-case>
              <test-case id="4082" name="CanScaleToUintAndBack(182.0f,10.0f,200.0f,uint.MinValue,524287,0.0003623969f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(182.0f,10.0f,200.0f,uint.MinValue,524287,0.0003623969f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="834038467" result="Passed" start-time="2021-03-06 06:27:09Z" end-time="2021-03-06 06:27:09Z" duration="0.000582" asserts="0">
                <properties />
              </test-case>
              <test-case id="4083" name="CanScaleToUintAndBack(184.0f,10.0f,200.0f,uint.MinValue,524287,0.0003623969f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(184.0f,10.0f,200.0f,uint.MinValue,524287,0.0003623969f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="387328146" result="Passed" start-time="2021-03-06 06:27:09Z" end-time="2021-03-06 06:27:09Z" duration="0.000564" asserts="0">
                <properties />
              </test-case>
              <test-case id="4084" name="CanScaleToUintAndBack(186.0f,10.0f,200.0f,uint.MinValue,524287,0.0003623969f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(186.0f,10.0f,200.0f,uint.MinValue,524287,0.0003623969f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="41479716" result="Passed" start-time="2021-03-06 06:27:09Z" end-time="2021-03-06 06:27:09Z" duration="0.000594" asserts="0">
                <properties />
              </test-case>
              <test-case id="4085" name="CanScaleToUintAndBack(188.0f,10.0f,200.0f,uint.MinValue,524287,0.0003623969f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(188.0f,10.0f,200.0f,uint.MinValue,524287,0.0003623969f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="1739671254" result="Passed" start-time="2021-03-06 06:27:09Z" end-time="2021-03-06 06:27:09Z" duration="0.000589" asserts="0">
                <properties />
              </test-case>
              <test-case id="4086" name="CanScaleToUintAndBack(190.0f,10.0f,200.0f,uint.MinValue,524287,0.0003623969f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(190.0f,10.0f,200.0f,uint.MinValue,524287,0.0003623969f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="239704892" result="Passed" start-time="2021-03-06 06:27:09Z" end-time="2021-03-06 06:27:09Z" duration="0.000616" asserts="0">
                <properties />
              </test-case>
              <test-case id="4087" name="CanScaleToUintAndBack(192.0f,10.0f,200.0f,uint.MinValue,524287,0.0003623969f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(192.0f,10.0f,200.0f,uint.MinValue,524287,0.0003623969f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="1883315416" result="Passed" start-time="2021-03-06 06:27:09Z" end-time="2021-03-06 06:27:09Z" duration="0.000555" asserts="0">
                <properties />
              </test-case>
              <test-case id="4088" name="CanScaleToUintAndBack(194.0f,10.0f,200.0f,uint.MinValue,524287,0.0003623969f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(194.0f,10.0f,200.0f,uint.MinValue,524287,0.0003623969f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="509418573" result="Passed" start-time="2021-03-06 06:27:09Z" end-time="2021-03-06 06:27:09Z" duration="0.000546" asserts="0">
                <properties />
              </test-case>
              <test-case id="4089" name="CanScaleToUintAndBack(196.0f,10.0f,200.0f,uint.MinValue,524287,0.0003623969f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(196.0f,10.0f,200.0f,uint.MinValue,524287,0.0003623969f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="357742618" result="Passed" start-time="2021-03-06 06:27:09Z" end-time="2021-03-06 06:27:09Z" duration="0.000534" asserts="0">
                <properties />
              </test-case>
              <test-case id="4090" name="CanScaleToUintAndBack(198.0f,10.0f,200.0f,uint.MinValue,524287,0.0003623969f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(198.0f,10.0f,200.0f,uint.MinValue,524287,0.0003623969f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="1067561025" result="Passed" start-time="2021-03-06 06:27:09Z" end-time="2021-03-06 06:27:09Z" duration="0.000617" asserts="0">
                <properties />
              </test-case>
              <test-case id="4091" name="CanScaleToUintAndBack(200.0f,10.0f,200.0f,uint.MinValue,524287,0.0003623969f)" fullname="Mirror.Tests.CompressionFloatTest.CanScaleToUintAndBack(200.0f,10.0f,200.0f,uint.MinValue,524287,0.0003623969f)" methodname="CanScaleToUintAndBack" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="1103549073" result="Passed" start-time="2021-03-06 06:27:09Z" end-time="2021-03-06 06:27:09Z" duration="0.000654" asserts="0">
                <properties />
              </test-case>
            </test-suite>
            <test-suite type="ParameterizedMethod" id="4098" name="ShouldNotThrowWhenGivenInvalidValues" fullname="Mirror.Tests.CompressionFloatTest.ShouldNotThrowWhenGivenInvalidValues" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" testcasecount="5" result="Passed" start-time="2021-03-06 06:27:09Z" end-time="2021-03-06 06:27:09Z" duration="0.022189" total="5" passed="5" failed="0" inconclusive="0" skipped="0" asserts="0">
              <properties />
              <test-case id="4093" name="ShouldNotThrowWhenGivenInvalidValues(0,0,0,uint.MinValue,uint.MinValue)" fullname="Mirror.Tests.CompressionFloatTest.ShouldNotThrowWhenGivenInvalidValues(0,0,0,uint.MinValue,uint.MinValue)" methodname="ShouldNotThrowWhenGivenInvalidValues" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="506776640" result="Passed" start-time="2021-03-06 06:27:09Z" end-time="2021-03-06 06:27:09Z" duration="0.001172" asserts="0">
                <properties />
              </test-case>
              <test-case id="4094" name="ShouldNotThrowWhenGivenInvalidValues(0,0,0,1,uint.MinValue)" fullname="Mirror.Tests.CompressionFloatTest.ShouldNotThrowWhenGivenInvalidValues(0,0,0,1,uint.MinValue)" methodname="ShouldNotThrowWhenGivenInvalidValues" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="1665885334" result="Passed" start-time="2021-03-06 06:27:09Z" end-time="2021-03-06 06:27:09Z" duration="0.000782" asserts="0">
                <properties />
              </test-case>
              <test-case id="4095" name="ShouldNotThrowWhenGivenInvalidValues(0,0,0,1,1)" fullname="Mirror.Tests.CompressionFloatTest.ShouldNotThrowWhenGivenInvalidValues(0,0,0,1,1)" methodname="ShouldNotThrowWhenGivenInvalidValues" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="1940068037" result="Passed" start-time="2021-03-06 06:27:09Z" end-time="2021-03-06 06:27:09Z" duration="0.000563" asserts="0">
                <properties />
              </test-case>
              <test-case id="4096" name="ShouldNotThrowWhenGivenInvalidValues(0,1,-1,uint.MinValue,byte.MaxValue)" fullname="Mirror.Tests.CompressionFloatTest.ShouldNotThrowWhenGivenInvalidValues(0,1,-1,uint.MinValue,byte.MaxValue)" methodname="ShouldNotThrowWhenGivenInvalidValues" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="928016495" result="Passed" start-time="2021-03-06 06:27:09Z" end-time="2021-03-06 06:27:09Z" duration="0.001353" asserts="0">
                <properties />
              </test-case>
              <test-case id="4097" name="ShouldNotThrowWhenGivenInvalidValues(0,1.5f,1.5f,uint.MinValue,byte.MaxValue)" fullname="Mirror.Tests.CompressionFloatTest.ShouldNotThrowWhenGivenInvalidValues(0,1.5f,1.5f,uint.MinValue,byte.MaxValue)" methodname="ShouldNotThrowWhenGivenInvalidValues" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="1015677903" result="Passed" start-time="2021-03-06 06:27:09Z" end-time="2021-03-06 06:27:09Z" duration="0.000573" asserts="0">
                <properties />
              </test-case>
            </test-suite>
            <test-suite type="ParameterizedMethod" id="4119" name="ValuesOutOfRangeArePackedInRange" fullname="Mirror.Tests.CompressionFloatTest.ValuesOutOfRangeArePackedInRange" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" testcasecount="20" result="Passed" start-time="2021-03-06 06:27:09Z" end-time="2021-03-06 06:27:09Z" duration="0.047152" total="20" passed="20" failed="0" inconclusive="0" skipped="0" asserts="0">
              <properties />
              <test-case id="4099" name="ValuesOutOfRangeArePackedInRange(-2.0f,-1.0f,1.0f,uint.MinValue,10)" fullname="Mirror.Tests.CompressionFloatTest.ValuesOutOfRangeArePackedInRange(-2.0f,-1.0f,1.0f,uint.MinValue,10)" methodname="ValuesOutOfRangeArePackedInRange" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="606453065" result="Passed" start-time="2021-03-06 06:27:09Z" end-time="2021-03-06 06:27:09Z" duration="0.002348" asserts="0">
                <properties />
              </test-case>
              <test-case id="4100" name="ValuesOutOfRangeArePackedInRange(-1.9f,-1.0f,1.0f,uint.MinValue,10)" fullname="Mirror.Tests.CompressionFloatTest.ValuesOutOfRangeArePackedInRange(-1.9f,-1.0f,1.0f,uint.MinValue,10)" methodname="ValuesOutOfRangeArePackedInRange" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="1414748845" result="Passed" start-time="2021-03-06 06:27:09Z" end-time="2021-03-06 06:27:09Z" duration="0.000634" asserts="0">
                <properties />
              </test-case>
              <test-case id="4101" name="ValuesOutOfRangeArePackedInRange(-1.8f,-1.0f,1.0f,uint.MinValue,10)" fullname="Mirror.Tests.CompressionFloatTest.ValuesOutOfRangeArePackedInRange(-1.8f,-1.0f,1.0f,uint.MinValue,10)" methodname="ValuesOutOfRangeArePackedInRange" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="2061811393" result="Passed" start-time="2021-03-06 06:27:09Z" end-time="2021-03-06 06:27:09Z" duration="0.000567" asserts="0">
                <properties />
              </test-case>
              <test-case id="4102" name="ValuesOutOfRangeArePackedInRange(-1.7f,-1.0f,1.0f,uint.MinValue,10)" fullname="Mirror.Tests.CompressionFloatTest.ValuesOutOfRangeArePackedInRange(-1.7f,-1.0f,1.0f,uint.MinValue,10)" methodname="ValuesOutOfRangeArePackedInRange" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="2131635719" result="Passed" start-time="2021-03-06 06:27:09Z" end-time="2021-03-06 06:27:09Z" duration="0.000640" asserts="0">
                <properties />
              </test-case>
              <test-case id="4103" name="ValuesOutOfRangeArePackedInRange(-1.6f,-1.0f,1.0f,uint.MinValue,10)" fullname="Mirror.Tests.CompressionFloatTest.ValuesOutOfRangeArePackedInRange(-1.6f,-1.0f,1.0f,uint.MinValue,10)" methodname="ValuesOutOfRangeArePackedInRange" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="1563172015" result="Passed" start-time="2021-03-06 06:27:09Z" end-time="2021-03-06 06:27:09Z" duration="0.000722" asserts="0">
                <properties />
              </test-case>
              <test-case id="4104" name="ValuesOutOfRangeArePackedInRange(-1.5f,-1.0f,1.0f,uint.MinValue,10)" fullname="Mirror.Tests.CompressionFloatTest.ValuesOutOfRangeArePackedInRange(-1.5f,-1.0f,1.0f,uint.MinValue,10)" methodname="ValuesOutOfRangeArePackedInRange" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="1796850380" result="Passed" start-time="2021-03-06 06:27:09Z" end-time="2021-03-06 06:27:09Z" duration="0.000537" asserts="0">
                <properties />
              </test-case>
              <test-case id="4105" name="ValuesOutOfRangeArePackedInRange(-1.4f,-1.0f,1.0f,uint.MinValue,10)" fullname="Mirror.Tests.CompressionFloatTest.ValuesOutOfRangeArePackedInRange(-1.4f,-1.0f,1.0f,uint.MinValue,10)" methodname="ValuesOutOfRangeArePackedInRange" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="1012940167" result="Passed" start-time="2021-03-06 06:27:09Z" end-time="2021-03-06 06:27:09Z" duration="0.000529" asserts="0">
                <properties />
              </test-case>
              <test-case id="4106" name="ValuesOutOfRangeArePackedInRange(-1.3f,-1.0f,1.0f,uint.MinValue,10)" fullname="Mirror.Tests.CompressionFloatTest.ValuesOutOfRangeArePackedInRange(-1.3f,-1.0f,1.0f,uint.MinValue,10)" methodname="ValuesOutOfRangeArePackedInRange" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="495233492" result="Passed" start-time="2021-03-06 06:27:09Z" end-time="2021-03-06 06:27:09Z" duration="0.000589" asserts="0">
                <properties />
              </test-case>
              <test-case id="4107" name="ValuesOutOfRangeArePackedInRange(-1.2f,-1.0f,1.0f,uint.MinValue,10)" fullname="Mirror.Tests.CompressionFloatTest.ValuesOutOfRangeArePackedInRange(-1.2f,-1.0f,1.0f,uint.MinValue,10)" methodname="ValuesOutOfRangeArePackedInRange" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="778759316" result="Passed" start-time="2021-03-06 06:27:09Z" end-time="2021-03-06 06:27:09Z" duration="0.000661" asserts="0">
                <properties />
              </test-case>
              <test-case id="4108" name="ValuesOutOfRangeArePackedInRange(-1.1f,-1.0f,1.0f,uint.MinValue,10)" fullname="Mirror.Tests.CompressionFloatTest.ValuesOutOfRangeArePackedInRange(-1.1f,-1.0f,1.0f,uint.MinValue,10)" methodname="ValuesOutOfRangeArePackedInRange" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="567463263" result="Passed" start-time="2021-03-06 06:27:09Z" end-time="2021-03-06 06:27:09Z" duration="0.000744" asserts="0">
                <properties />
              </test-case>
              <test-case id="4109" name="ValuesOutOfRangeArePackedInRange(1.0f,-1.0f,1.0f,uint.MinValue,10)" fullname="Mirror.Tests.CompressionFloatTest.ValuesOutOfRangeArePackedInRange(1.0f,-1.0f,1.0f,uint.MinValue,10)" methodname="ValuesOutOfRangeArePackedInRange" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="1267040300" result="Passed" start-time="2021-03-06 06:27:09Z" end-time="2021-03-06 06:27:09Z" duration="0.000562" asserts="0">
                <properties />
              </test-case>
              <test-case id="4110" name="ValuesOutOfRangeArePackedInRange(1.1f,-1.0f,1.0f,uint.MinValue,10)" fullname="Mirror.Tests.CompressionFloatTest.ValuesOutOfRangeArePackedInRange(1.1f,-1.0f,1.0f,uint.MinValue,10)" methodname="ValuesOutOfRangeArePackedInRange" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="1120673106" result="Passed" start-time="2021-03-06 06:27:09Z" end-time="2021-03-06 06:27:09Z" duration="0.000558" asserts="0">
                <properties />
              </test-case>
              <test-case id="4111" name="ValuesOutOfRangeArePackedInRange(1.2f,-1.0f,1.0f,uint.MinValue,10)" fullname="Mirror.Tests.CompressionFloatTest.ValuesOutOfRangeArePackedInRange(1.2f,-1.0f,1.0f,uint.MinValue,10)" methodname="ValuesOutOfRangeArePackedInRange" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="1992206825" result="Passed" start-time="2021-03-06 06:27:09Z" end-time="2021-03-06 06:27:09Z" duration="0.000580" asserts="0">
                <properties />
              </test-case>
              <test-case id="4112" name="ValuesOutOfRangeArePackedInRange(1.3f,-1.0f,1.0f,uint.MinValue,10)" fullname="Mirror.Tests.CompressionFloatTest.ValuesOutOfRangeArePackedInRange(1.3f,-1.0f,1.0f,uint.MinValue,10)" methodname="ValuesOutOfRangeArePackedInRange" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="2136606200" result="Passed" start-time="2021-03-06 06:27:09Z" end-time="2021-03-06 06:27:09Z" duration="0.000619" asserts="0">
                <properties />
              </test-case>
              <test-case id="4113" name="ValuesOutOfRangeArePackedInRange(1.4f,-1.0f,1.0f,uint.MinValue,10)" fullname="Mirror.Tests.CompressionFloatTest.ValuesOutOfRangeArePackedInRange(1.4f,-1.0f,1.0f,uint.MinValue,10)" methodname="ValuesOutOfRangeArePackedInRange" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="1111445806" result="Passed" start-time="2021-03-06 06:27:09Z" end-time="2021-03-06 06:27:09Z" duration="0.000689" asserts="0">
                <properties />
              </test-case>
              <test-case id="4114" name="ValuesOutOfRangeArePackedInRange(1.5f,-1.0f,1.0f,uint.MinValue,10)" fullname="Mirror.Tests.CompressionFloatTest.ValuesOutOfRangeArePackedInRange(1.5f,-1.0f,1.0f,uint.MinValue,10)" methodname="ValuesOutOfRangeArePackedInRange" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="334035894" result="Passed" start-time="2021-03-06 06:27:09Z" end-time="2021-03-06 06:27:09Z" duration="0.000594" asserts="0">
                <properties />
              </test-case>
              <test-case id="4115" name="ValuesOutOfRangeArePackedInRange(1.6f,-1.0f,1.0f,uint.MinValue,10)" fullname="Mirror.Tests.CompressionFloatTest.ValuesOutOfRangeArePackedInRange(1.6f,-1.0f,1.0f,uint.MinValue,10)" methodname="ValuesOutOfRangeArePackedInRange" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="317975454" result="Passed" start-time="2021-03-06 06:27:09Z" end-time="2021-03-06 06:27:09Z" duration="0.000519" asserts="0">
                <properties />
              </test-case>
              <test-case id="4116" name="ValuesOutOfRangeArePackedInRange(1.7f,-1.0f,1.0f,uint.MinValue,10)" fullname="Mirror.Tests.CompressionFloatTest.ValuesOutOfRangeArePackedInRange(1.7f,-1.0f,1.0f,uint.MinValue,10)" methodname="ValuesOutOfRangeArePackedInRange" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="134119568" result="Passed" start-time="2021-03-06 06:27:09Z" end-time="2021-03-06 06:27:09Z" duration="0.000506" asserts="0">
                <properties />
              </test-case>
              <test-case id="4117" name="ValuesOutOfRangeArePackedInRange(1.8f,-1.0f,1.0f,uint.MinValue,10)" fullname="Mirror.Tests.CompressionFloatTest.ValuesOutOfRangeArePackedInRange(1.8f,-1.0f,1.0f,uint.MinValue,10)" methodname="ValuesOutOfRangeArePackedInRange" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="2096194066" result="Passed" start-time="2021-03-06 06:27:09Z" end-time="2021-03-06 06:27:09Z" duration="0.000678" asserts="0">
                <properties />
              </test-case>
              <test-case id="4118" name="ValuesOutOfRangeArePackedInRange(1.9f,-1.0f,1.0f,uint.MinValue,10)" fullname="Mirror.Tests.CompressionFloatTest.ValuesOutOfRangeArePackedInRange(1.9f,-1.0f,1.0f,uint.MinValue,10)" methodname="ValuesOutOfRangeArePackedInRange" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="381109527" result="Passed" start-time="2021-03-06 06:27:09Z" end-time="2021-03-06 06:27:09Z" duration="0.000630" asserts="0">
                <properties />
              </test-case>
            </test-suite>
            <test-suite type="ParameterizedMethod" id="4137" name="ValuesOutOfRangeAreUnPackedInRange" fullname="Mirror.Tests.CompressionFloatTest.ValuesOutOfRangeAreUnPackedInRange" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" testcasecount="17" result="Passed" start-time="2021-03-06 06:27:09Z" end-time="2021-03-06 06:27:09Z" duration="0.041741" total="17" passed="17" failed="0" inconclusive="0" skipped="0" asserts="0">
              <properties />
              <test-case id="4120" name="ValuesOutOfRangeAreUnPackedInRange(uint.MinValue,-1.0f,1.0f,5,25)" fullname="Mirror.Tests.CompressionFloatTest.ValuesOutOfRangeAreUnPackedInRange(uint.MinValue,-1.0f,1.0f,5,25)" methodname="ValuesOutOfRangeAreUnPackedInRange" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="1354225797" result="Passed" start-time="2021-03-06 06:27:09Z" end-time="2021-03-06 06:27:09Z" duration="0.001214" asserts="0">
                <properties />
              </test-case>
              <test-case id="4121" name="ValuesOutOfRangeAreUnPackedInRange(1,-1.0f,1.0f,5,25)" fullname="Mirror.Tests.CompressionFloatTest.ValuesOutOfRangeAreUnPackedInRange(1,-1.0f,1.0f,5,25)" methodname="ValuesOutOfRangeAreUnPackedInRange" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="22928849" result="Passed" start-time="2021-03-06 06:27:09Z" end-time="2021-03-06 06:27:09Z" duration="0.000596" asserts="0">
                <properties />
              </test-case>
              <test-case id="4122" name="ValuesOutOfRangeAreUnPackedInRange(2,-1.0f,1.0f,5,25)" fullname="Mirror.Tests.CompressionFloatTest.ValuesOutOfRangeAreUnPackedInRange(2,-1.0f,1.0f,5,25)" methodname="ValuesOutOfRangeAreUnPackedInRange" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="1162947996" result="Passed" start-time="2021-03-06 06:27:09Z" end-time="2021-03-06 06:27:09Z" duration="0.000773" asserts="0">
                <properties />
              </test-case>
              <test-case id="4123" name="ValuesOutOfRangeAreUnPackedInRange(3,-1.0f,1.0f,5,25)" fullname="Mirror.Tests.CompressionFloatTest.ValuesOutOfRangeAreUnPackedInRange(3,-1.0f,1.0f,5,25)" methodname="ValuesOutOfRangeAreUnPackedInRange" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="1923154017" result="Passed" start-time="2021-03-06 06:27:09Z" end-time="2021-03-06 06:27:09Z" duration="0.000552" asserts="0">
                <properties />
              </test-case>
              <test-case id="4124" name="ValuesOutOfRangeAreUnPackedInRange(4,-1.0f,1.0f,5,25)" fullname="Mirror.Tests.CompressionFloatTest.ValuesOutOfRangeAreUnPackedInRange(4,-1.0f,1.0f,5,25)" methodname="ValuesOutOfRangeAreUnPackedInRange" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="754887379" result="Passed" start-time="2021-03-06 06:27:09Z" end-time="2021-03-06 06:27:09Z" duration="0.000533" asserts="0">
                <properties />
              </test-case>
              <test-case id="4125" name="ValuesOutOfRangeAreUnPackedInRange(5,-1.0f,1.0f,5,25)" fullname="Mirror.Tests.CompressionFloatTest.ValuesOutOfRangeAreUnPackedInRange(5,-1.0f,1.0f,5,25)" methodname="ValuesOutOfRangeAreUnPackedInRange" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="589137820" result="Passed" start-time="2021-03-06 06:27:09Z" end-time="2021-03-06 06:27:09Z" duration="0.000536" asserts="0">
                <properties />
              </test-case>
              <test-case id="4126" name="ValuesOutOfRangeAreUnPackedInRange(25,-1.0f,1.0f,5,25)" fullname="Mirror.Tests.CompressionFloatTest.ValuesOutOfRangeAreUnPackedInRange(25,-1.0f,1.0f,5,25)" methodname="ValuesOutOfRangeAreUnPackedInRange" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="1055175176" result="Passed" start-time="2021-03-06 06:27:09Z" end-time="2021-03-06 06:27:09Z" duration="0.000635" asserts="0">
                <properties />
              </test-case>
              <test-case id="4127" name="ValuesOutOfRangeAreUnPackedInRange(26,-1.0f,1.0f,5,25)" fullname="Mirror.Tests.CompressionFloatTest.ValuesOutOfRangeAreUnPackedInRange(26,-1.0f,1.0f,5,25)" methodname="ValuesOutOfRangeAreUnPackedInRange" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="1437020921" result="Passed" start-time="2021-03-06 06:27:09Z" end-time="2021-03-06 06:27:09Z" duration="0.000641" asserts="0">
                <properties />
              </test-case>
              <test-case id="4128" name="ValuesOutOfRangeAreUnPackedInRange(27,-1.0f,1.0f,5,25)" fullname="Mirror.Tests.CompressionFloatTest.ValuesOutOfRangeAreUnPackedInRange(27,-1.0f,1.0f,5,25)" methodname="ValuesOutOfRangeAreUnPackedInRange" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="155889428" result="Passed" start-time="2021-03-06 06:27:09Z" end-time="2021-03-06 06:27:09Z" duration="0.001154" asserts="0">
                <properties />
              </test-case>
              <test-case id="4129" name="ValuesOutOfRangeAreUnPackedInRange(28,-1.0f,1.0f,5,25)" fullname="Mirror.Tests.CompressionFloatTest.ValuesOutOfRangeAreUnPackedInRange(28,-1.0f,1.0f,5,25)" methodname="ValuesOutOfRangeAreUnPackedInRange" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="470063275" result="Passed" start-time="2021-03-06 06:27:09Z" end-time="2021-03-06 06:27:09Z" duration="0.000732" asserts="0">
                <properties />
              </test-case>
              <test-case id="4130" name="ValuesOutOfRangeAreUnPackedInRange(29,-1.0f,1.0f,5,25)" fullname="Mirror.Tests.CompressionFloatTest.ValuesOutOfRangeAreUnPackedInRange(29,-1.0f,1.0f,5,25)" methodname="ValuesOutOfRangeAreUnPackedInRange" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="1411775736" result="Passed" start-time="2021-03-06 06:27:09Z" end-time="2021-03-06 06:27:09Z" duration="0.000615" asserts="0">
                <properties />
              </test-case>
              <test-case id="4131" name="ValuesOutOfRangeAreUnPackedInRange(30,-1.0f,1.0f,5,25)" fullname="Mirror.Tests.CompressionFloatTest.ValuesOutOfRangeAreUnPackedInRange(30,-1.0f,1.0f,5,25)" methodname="ValuesOutOfRangeAreUnPackedInRange" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="442447339" result="Passed" start-time="2021-03-06 06:27:09Z" end-time="2021-03-06 06:27:09Z" duration="0.000820" asserts="0">
                <properties />
              </test-case>
              <test-case id="4132" name="ValuesOutOfRangeAreUnPackedInRange(31,-1.0f,1.0f,5,25)" fullname="Mirror.Tests.CompressionFloatTest.ValuesOutOfRangeAreUnPackedInRange(31,-1.0f,1.0f,5,25)" methodname="ValuesOutOfRangeAreUnPackedInRange" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="1626364274" result="Passed" start-time="2021-03-06 06:27:09Z" end-time="2021-03-06 06:27:09Z" duration="0.000550" asserts="0">
                <properties />
              </test-case>
              <test-case id="4133" name="ValuesOutOfRangeAreUnPackedInRange(32,-1.0f,1.0f,5,25)" fullname="Mirror.Tests.CompressionFloatTest.ValuesOutOfRangeAreUnPackedInRange(32,-1.0f,1.0f,5,25)" methodname="ValuesOutOfRangeAreUnPackedInRange" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="449178160" result="Passed" start-time="2021-03-06 06:27:09Z" end-time="2021-03-06 06:27:09Z" duration="0.000695" asserts="0">
                <properties />
              </test-case>
              <test-case id="4134" name="ValuesOutOfRangeAreUnPackedInRange(33,-1.0f,1.0f,5,25)" fullname="Mirror.Tests.CompressionFloatTest.ValuesOutOfRangeAreUnPackedInRange(33,-1.0f,1.0f,5,25)" methodname="ValuesOutOfRangeAreUnPackedInRange" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="836524211" result="Passed" start-time="2021-03-06 06:27:09Z" end-time="2021-03-06 06:27:09Z" duration="0.000529" asserts="0">
                <properties />
              </test-case>
              <test-case id="4135" name="ValuesOutOfRangeAreUnPackedInRange(34,-1.0f,1.0f,5,25)" fullname="Mirror.Tests.CompressionFloatTest.ValuesOutOfRangeAreUnPackedInRange(34,-1.0f,1.0f,5,25)" methodname="ValuesOutOfRangeAreUnPackedInRange" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="1169167351" result="Passed" start-time="2021-03-06 06:27:09Z" end-time="2021-03-06 06:27:09Z" duration="0.000515" asserts="0">
                <properties />
              </test-case>
              <test-case id="4136" name="ValuesOutOfRangeAreUnPackedInRange(35,-1.0f,1.0f,5,25)" fullname="Mirror.Tests.CompressionFloatTest.ValuesOutOfRangeAreUnPackedInRange(35,-1.0f,1.0f,5,25)" methodname="ValuesOutOfRangeAreUnPackedInRange" classname="Mirror.Tests.CompressionFloatTest" runstate="Runnable" seed="1690448471" result="Passed" start-time="2021-03-06 06:27:09Z" end-time="2021-03-06 06:27:09Z" duration="0.000532" asserts="0">
                <properties />
              </test-case>
            </test-suite>
          </test-suite>
          <test-suite type="TestFixture" id="4138" name="CompressionQuaternionTest" fullname="Mirror.Tests.CompressionQuaternionTest" classname="Mirror.Tests.CompressionQuaternionTest" runstate="Runnable" testcasecount="82" result="Passed" start-time="2021-03-06 06:27:09Z" end-time="2021-03-06 06:27:10Z" duration="0.239090" total="82" passed="82" failed="0" inconclusive="0" skipped="0" asserts="0">
            <properties />
            <test-suite type="ParameterizedMethod" id="4223" name="FindLargestIndexWork" fullname="Mirror.Tests.CompressionQuaternionTest.FindLargestIndexWork" classname="Mirror.Tests.CompressionQuaternionTest" runstate="Runnable" testcasecount="16" result="Passed" start-time="2021-03-06 06:27:09Z" end-time="2021-03-06 06:27:09Z" duration="0.031079" total="16" passed="16" failed="0" inconclusive="0" skipped="0" asserts="0">
              <properties />
              <test-case id="4207" name="FindLargestIndexWork((1.0, 0.0, 0.0, 0.0),0)" fullname="Mirror.Tests.CompressionQuaternionTest.FindLargestIndexWork((1.0, 0.0, 0.0, 0.0),0)" methodname="FindLargestIndexWork" classname="Mirror.Tests.CompressionQuaternionTest" runstate="Runnable" seed="501876530" result="Passed" start-time="2021-03-06 06:27:09Z" end-time="2021-03-06 06:27:09Z" duration="0.001434" asserts="0">
                <properties />
              </test-case>
              <test-case id="4208" name="FindLargestIndexWork((0.0, 1.0, 0.0, 0.0),1)" fullname="Mirror.Tests.CompressionQuaternionTest.FindLargestIndexWork((0.0, 1.0, 0.0, 0.0),1)" methodname="FindLargestIndexWork" classname="Mirror.Tests.CompressionQuaternionTest" runstate="Runnable" seed="1983375423" result="Passed" start-time="2021-03-06 06:27:09Z" end-time="2021-03-06 06:27:09Z" duration="0.000765" asserts="0">
                <properties />
              </test-case>
              <test-case id="4209" name="FindLargestIndexWork((0.0, 0.0, 1.0, 0.0),2)" fullname="Mirror.Tests.CompressionQuaternionTest.FindLargestIndexWork((0.0, 0.0, 1.0, 0.0),2)" methodname="FindLargestIndexWork" classname="Mirror.Tests.CompressionQuaternionTest" runstate="Runnable" seed="1219208152" result="Passed" start-time="2021-03-06 06:27:09Z" end-time="2021-03-06 06:27:09Z" duration="0.000549" asserts="0">
                <properties />
              </test-case>
              <test-case id="4210" name="FindLargestIndexWork((0.0, 0.0, 0.0, 1.0),3)" fullname="Mirror.Tests.CompressionQuaternionTest.FindLargestIndexWork((0.0, 0.0, 0.0, 1.0),3)" methodname="FindLargestIndexWork" classname="Mirror.Tests.CompressionQuaternionTest" runstate="Runnable" seed="212035363" result="Passed" start-time="2021-03-06 06:27:09Z" end-time="2021-03-06 06:27:09Z" duration="0.000497" asserts="0">
                <properties />
              </test-case>
              <test-case id="4211" name="FindLargestIndexWork((-1.0, 0.0, 0.0, 0.0),0)" fullname="Mirror.Tests.CompressionQuaternionTest.FindLargestIndexWork((-1.0, 0.0, 0.0, 0.0),0)" methodname="FindLargestIndexWork" classname="Mirror.Tests.CompressionQuaternionTest" runstate="Runnable" seed="662883056" result="Passed" start-time="2021-03-06 06:27:09Z" end-time="2021-03-06 06:27:09Z" duration="0.000486" asserts="0">
                <properties />
              </test-case>
              <test-case id="4212" name="FindLargestIndexWork((0.0, -1.0, 0.0, 0.0),1)" fullname="Mirror.Tests.CompressionQuaternionTest.FindLargestIndexWork((0.0, -1.0, 0.0, 0.0),1)" methodname="FindLargestIndexWork" classname="Mirror.Tests.CompressionQuaternionTest" runstate="Runnable" seed="289913428" result="Passed" start-time="2021-03-06 06:27:09Z" end-time="2021-03-06 06:27:09Z" duration="0.000712" asserts="0">
                <properties />
              </test-case>
              <test-case id="4213" name="FindLargestIndexWork((0.0, 0.0, -1.0, 0.0),2)" fullname="Mirror.Tests.CompressionQuaternionTest.FindLargestIndexWork((0.0, 0.0, -1.0, 0.0),2)" methodname="FindLargestIndexWork" classname="Mirror.Tests.CompressionQuaternionTest" runstate="Runnable" seed="864640108" result="Passed" start-time="2021-03-06 06:27:09Z" end-time="2021-03-06 06:27:09Z" duration="0.000461" asserts="0">
                <properties />
              </test-case>
              <test-case id="4214" name="FindLargestIndexWork((0.0, 0.0, 0.0, -1.0),3)" fullname="Mirror.Tests.CompressionQuaternionTest.FindLargestIndexWork((0.0, 0.0, 0.0, -1.0),3)" methodname="FindLargestIndexWork" classname="Mirror.Tests.CompressionQuaternionTest" runstate="Runnable" seed="1817156509" result="Passed" start-time="2021-03-06 06:27:09Z" end-time="2021-03-06 06:27:09Z" duration="0.000501" asserts="0">
                <properties />
              </test-case>
              <test-case id="4215" name="FindLargestIndexWork((0.9, 0.0, 0.4, 0.0),0)" fullname="Mirror.Tests.CompressionQuaternionTest.FindLargestIndexWork((0.9, 0.0, 0.4, 0.0),0)" methodname="FindLargestIndexWork" classname="Mirror.Tests.CompressionQuaternionTest" runstate="Runnable" seed="97359282" result="Passed" start-time="2021-03-06 06:27:09Z" end-time="2021-03-06 06:27:09Z" duration="0.000459" asserts="0">
                <properties />
              </test-case>
              <test-case id="4216" name="FindLargestIndexWork((0.0, 0.9, 0.4, 0.0),1)" fullname="Mirror.Tests.CompressionQuaternionTest.FindLargestIndexWork((0.0, 0.9, 0.4, 0.0),1)" methodname="FindLargestIndexWork" classname="Mirror.Tests.CompressionQuaternionTest" runstate="Runnable" seed="2055142739" result="Passed" start-time="2021-03-06 06:27:09Z" end-time="2021-03-06 06:27:09Z" duration="0.000474" asserts="0">
                <properties />
              </test-case>
              <test-case id="4217" name="FindLargestIndexWork((0.0, 0.4, 0.9, 0.0),2)" fullname="Mirror.Tests.CompressionQuaternionTest.FindLargestIndexWork((0.0, 0.4, 0.9, 0.0),2)" methodname="FindLargestIndexWork" classname="Mirror.Tests.CompressionQuaternionTest" runstate="Runnable" seed="356169234" result="Passed" start-time="2021-03-06 06:27:09Z" end-time="2021-03-06 06:27:09Z" duration="0.000487" asserts="0">
                <properties />
              </test-case>
              <test-case id="4218" name="FindLargestIndexWork((0.0, 0.4, 0.0, 0.9),3)" fullname="Mirror.Tests.CompressionQuaternionTest.FindLargestIndexWork((0.0, 0.4, 0.0, 0.9),3)" methodname="FindLargestIndexWork" classname="Mirror.Tests.CompressionQuaternionTest" runstate="Runnable" seed="1484764036" result="Passed" start-time="2021-03-06 06:27:09Z" end-time="2021-03-06 06:27:09Z" duration="0.000514" asserts="0">
                <properties />
              </test-case>
              <test-case id="4219" name="FindLargestIndexWork((-0.7, 0.6, 0.3, 0.0),0)" fullname="Mirror.Tests.CompressionQuaternionTest.FindLargestIndexWork((-0.7, 0.6, 0.3, 0.0),0)" methodname="FindLargestIndexWork" classname="Mirror.Tests.CompressionQuaternionTest" runstate="Runnable" seed="1488408531" result="Passed" start-time="2021-03-06 06:27:09Z" end-time="2021-03-06 06:27:09Z" duration="0.000460" asserts="0">
                <properties />
              </test-case>
              <test-case id="4220" name="FindLargestIndexWork((0.6, -0.7, 0.3, 0.0),1)" fullname="Mirror.Tests.CompressionQuaternionTest.FindLargestIndexWork((0.6, -0.7, 0.3, 0.0),1)" methodname="FindLargestIndexWork" classname="Mirror.Tests.CompressionQuaternionTest" runstate="Runnable" seed="1877113431" result="Passed" start-time="2021-03-06 06:27:09Z" end-time="2021-03-06 06:27:09Z" duration="0.000477" asserts="0">
                <properties />
              </test-case>
              <test-case id="4221" name="FindLargestIndexWork((0.0, 0.3, -0.7, 0.6),2)" fullname="Mirror.Tests.CompressionQuaternionTest.FindLargestIndexWork((0.0, 0.3, -0.7, 0.6),2)" methodname="FindLargestIndexWork" classname="Mirror.Tests.CompressionQuaternionTest" runstate="Runnable" seed="532819696" result="Passed" start-time="2021-03-06 06:27:09Z" end-time="2021-03-06 06:27:09Z" duration="0.000454" asserts="0">
                <properties />
              </test-case>
              <test-case id="4222" name="FindLargestIndexWork((0.0, 0.3, 0.6, -0.7),3)" fullname="Mirror.Tests.CompressionQuaternionTest.FindLargestIndexWork((0.0, 0.3, 0.6, -0.7),3)" methodname="FindLargestIndexWork" classname="Mirror.Tests.CompressionQuaternionTest" runstate="Runnable" seed="1859361597" result="Passed" start-time="2021-03-06 06:27:09Z" end-time="2021-03-06 06:27:09Z" duration="0.000501" asserts="0">
                <properties />
              </test-case>
            </test-suite>
            <test-suite type="ParameterizedMethod" id="4172" name="QuaternionCompressIsWithinPrecision" fullname="Mirror.Tests.CompressionQuaternionTest.QuaternionCompressIsWithinPrecision" classname="Mirror.Tests.CompressionQuaternionTest" runstate="Runnable" testcasecount="33" result="Passed" start-time="2021-03-06 06:27:09Z" end-time="2021-03-06 06:27:09Z" duration="0.070357" total="33" passed="33" failed="0" inconclusive="0" skipped="0" asserts="0">
              <properties />
              <test-case id="4139" name="QuaternionCompressIsWithinPrecision((0.0, 0.0, 0.0, 1.0))" fullname="Mirror.Tests.CompressionQuaternionTest.QuaternionCompressIsWithinPrecision((0.0, 0.0, 0.0, 1.0))" methodname="QuaternionCompressIsWithinPrecision" classname="Mirror.Tests.CompressionQuaternionTest" runstate="Runnable" seed="1019247686" result="Passed" start-time="2021-03-06 06:27:09Z" end-time="2021-03-06 06:27:09Z" duration="0.003644" asserts="0">
                <properties />
              </test-case>
              <test-case id="4140" name="QuaternionCompressIsWithinPrecision((1.0, 0.0, 0.0, 0.0))" fullname="Mirror.Tests.CompressionQuaternionTest.QuaternionCompressIsWithinPrecision((1.0, 0.0, 0.0, 0.0))" methodname="QuaternionCompressIsWithinPrecision" classname="Mirror.Tests.CompressionQuaternionTest" runstate="Runnable" seed="697665984" result="Passed" start-time="2021-03-06 06:27:09Z" end-time="2021-03-06 06:27:09Z" duration="0.000711" asserts="0">
                <properties />
              </test-case>
              <test-case id="4141" name="QuaternionCompressIsWithinPrecision((0.0, 1.0, 0.0, 0.0))" fullname="Mirror.Tests.CompressionQuaternionTest.QuaternionCompressIsWithinPrecision((0.0, 1.0, 0.0, 0.0))" methodname="QuaternionCompressIsWithinPrecision" classname="Mirror.Tests.CompressionQuaternionTest" runstate="Runnable" seed="1159730369" result="Passed" start-time="2021-03-06 06:27:09Z" end-time="2021-03-06 06:27:09Z" duration="0.000587" asserts="0">
                <properties />
              </test-case>
              <test-case id="4142" name="QuaternionCompressIsWithinPrecision((0.0, 0.0, 1.0, 0.0))" fullname="Mirror.Tests.CompressionQuaternionTest.QuaternionCompressIsWithinPrecision((0.0, 0.0, 1.0, 0.0))" methodname="QuaternionCompressIsWithinPrecision" classname="Mirror.Tests.CompressionQuaternionTest" runstate="Runnable" seed="783742659" result="Passed" start-time="2021-03-06 06:27:09Z" end-time="2021-03-06 06:27:09Z" duration="0.000560" asserts="0">
                <properties />
              </test-case>
              <test-case id="4143" name="QuaternionCompressIsWithinPrecision((0.7, 0.7, 0.0, 0.0))" fullname="Mirror.Tests.CompressionQuaternionTest.QuaternionCompressIsWithinPrecision((0.7, 0.7, 0.0, 0.0))" methodname="QuaternionCompressIsWithinPrecision" classname="Mirror.Tests.CompressionQuaternionTest" runstate="Runnable" seed="1234398576" result="Passed" start-time="2021-03-06 06:27:09Z" end-time="2021-03-06 06:27:09Z" duration="0.000541" asserts="0">
                <properties />
              </test-case>
              <test-case id="4144" name="QuaternionCompressIsWithinPrecision((0.0, 0.7, 0.7, 0.0))" fullname="Mirror.Tests.CompressionQuaternionTest.QuaternionCompressIsWithinPrecision((0.0, 0.7, 0.7, 0.0))" methodname="QuaternionCompressIsWithinPrecision" classname="Mirror.Tests.CompressionQuaternionTest" runstate="Runnable" seed="1088852913" result="Passed" start-time="2021-03-06 06:27:09Z" end-time="2021-03-06 06:27:09Z" duration="0.000609" asserts="0">
                <properties />
              </test-case>
              <test-case id="4145" name="QuaternionCompressIsWithinPrecision((0.0, 0.7, 0.7, 0.0))" fullname="Mirror.Tests.CompressionQuaternionTest.QuaternionCompressIsWithinPrecision((0.0, 0.7, 0.7, 0.0))" methodname="QuaternionCompressIsWithinPrecision" classname="Mirror.Tests.CompressionQuaternionTest" runstate="Runnable" seed="1865259292" result="Passed" start-time="2021-03-06 06:27:09Z" end-time="2021-03-06 06:27:09Z" duration="0.000551" asserts="0">
                <properties>
                  <property name="childIndex" value="2" />
                </properties>
              </test-case>
              <test-case id="4146" name="QuaternionCompressIsWithinPrecision((0.0, 0.0, 0.7, 0.7))" fullname="Mirror.Tests.CompressionQuaternionTest.QuaternionCompressIsWithinPrecision((0.0, 0.0, 0.7, 0.7))" methodname="QuaternionCompressIsWithinPrecision" classname="Mirror.Tests.CompressionQuaternionTest" runstate="Runnable" seed="227905885" result="Passed" start-time="2021-03-06 06:27:09Z" end-time="2021-03-06 06:27:09Z" duration="0.000595" asserts="0">
                <properties />
              </test-case>
              <test-case id="4147" name="QuaternionCompressIsWithinPrecision((0.6, 0.6, 0.6, 0.0))" fullname="Mirror.Tests.CompressionQuaternionTest.QuaternionCompressIsWithinPrecision((0.6, 0.6, 0.6, 0.0))" methodname="QuaternionCompressIsWithinPrecision" classname="Mirror.Tests.CompressionQuaternionTest" runstate="Runnable" seed="1100491462" result="Passed" start-time="2021-03-06 06:27:09Z" end-time="2021-03-06 06:27:09Z" duration="0.000609" asserts="0">
                <properties />
              </test-case>
              <test-case id="4148" name="QuaternionCompressIsWithinPrecision((0.6, 0.6, 0.0, 0.6))" fullname="Mirror.Tests.CompressionQuaternionTest.QuaternionCompressIsWithinPrecision((0.6, 0.6, 0.0, 0.6))" methodname="QuaternionCompressIsWithinPrecision" classname="Mirror.Tests.CompressionQuaternionTest" runstate="Runnable" seed="1700838816" result="Passed" start-time="2021-03-06 06:27:09Z" end-time="2021-03-06 06:27:09Z" duration="0.000653" asserts="0">
                <properties />
              </test-case>
              <test-case id="4149" name="QuaternionCompressIsWithinPrecision((0.6, 0.0, 0.6, 0.6))" fullname="Mirror.Tests.CompressionQuaternionTest.QuaternionCompressIsWithinPrecision((0.6, 0.0, 0.6, 0.6))" methodname="QuaternionCompressIsWithinPrecision" classname="Mirror.Tests.CompressionQuaternionTest" runstate="Runnable" seed="1951539252" result="Passed" start-time="2021-03-06 06:27:09Z" end-time="2021-03-06 06:27:09Z" duration="0.000603" asserts="0">
                <properties />
              </test-case>
              <test-case id="4150" name="QuaternionCompressIsWithinPrecision((0.0, 0.6, 0.6, 0.6))" fullname="Mirror.Tests.CompressionQuaternionTest.QuaternionCompressIsWithinPrecision((0.0, 0.6, 0.6, 0.6))" methodname="QuaternionCompressIsWithinPrecision" classname="Mirror.Tests.CompressionQuaternionTest" runstate="Runnable" seed="1373326222" result="Passed" start-time="2021-03-06 06:27:09Z" end-time="2021-03-06 06:27:09Z" duration="0.000534" asserts="0">
                <properties />
              </test-case>
              <test-case id="4151" name="QuaternionCompressIsWithinPrecision((0.5, 0.5, 0.5, 0.5))" fullname="Mirror.Tests.CompressionQuaternionTest.QuaternionCompressIsWithinPrecision((0.5, 0.5, 0.5, 0.5))" methodname="QuaternionCompressIsWithinPrecision" classname="Mirror.Tests.CompressionQuaternionTest" runstate="Runnable" seed="1540409009" result="Passed" start-time="2021-03-06 06:27:09Z" end-time="2021-03-06 06:27:09Z" duration="0.000557" asserts="0">
                <properties />
              </test-case>
              <test-case id="4152" name="QuaternionCompressIsWithinPrecision((-1.0, 0.0, 0.0, 0.0))" fullname="Mirror.Tests.CompressionQuaternionTest.QuaternionCompressIsWithinPrecision((-1.0, 0.0, 0.0, 0.0))" methodname="QuaternionCompressIsWithinPrecision" classname="Mirror.Tests.CompressionQuaternionTest" runstate="Runnable" seed="626284181" result="Passed" start-time="2021-03-06 06:27:09Z" end-time="2021-03-06 06:27:09Z" duration="0.000544" asserts="0">
                <properties />
              </test-case>
              <test-case id="4153" name="QuaternionCompressIsWithinPrecision((0.0, -1.0, 0.0, 0.0))" fullname="Mirror.Tests.CompressionQuaternionTest.QuaternionCompressIsWithinPrecision((0.0, -1.0, 0.0, 0.0))" methodname="QuaternionCompressIsWithinPrecision" classname="Mirror.Tests.CompressionQuaternionTest" runstate="Runnable" seed="1820816604" result="Passed" start-time="2021-03-06 06:27:09Z" end-time="2021-03-06 06:27:09Z" duration="0.000593" asserts="0">
                <properties />
              </test-case>
              <test-case id="4154" name="QuaternionCompressIsWithinPrecision((0.0, 0.0, -1.0, 0.0))" fullname="Mirror.Tests.CompressionQuaternionTest.QuaternionCompressIsWithinPrecision((0.0, 0.0, -1.0, 0.0))" methodname="QuaternionCompressIsWithinPrecision" classname="Mirror.Tests.CompressionQuaternionTest" runstate="Runnable" seed="1060933143" result="Passed" start-time="2021-03-06 06:27:09Z" end-time="2021-03-06 06:27:09Z" duration="0.000974" asserts="0">
                <properties />
              </test-case>
              <test-case id="4155" name="QuaternionCompressIsWithinPrecision((0.0, 0.0, 0.0, -1.0))" fullname="Mirror.Tests.CompressionQuaternionTest.QuaternionCompressIsWithinPrecision((0.0, 0.0, 0.0, -1.0))" methodname="QuaternionCompressIsWithinPrecision" classname="Mirror.Tests.CompressionQuaternionTest" runstate="Runnable" seed="1625315455" result="Passed" start-time="2021-03-06 06:27:09Z" end-time="2021-03-06 06:27:09Z" duration="0.000935" asserts="0">
                <properties />
              </test-case>
              <test-case id="4156" name="QuaternionCompressIsWithinPrecision((-0.7, -0.7, 0.0, 0.0))" fullname="Mirror.Tests.CompressionQuaternionTest.QuaternionCompressIsWithinPrecision((-0.7, -0.7, 0.0, 0.0))" methodname="QuaternionCompressIsWithinPrecision" classname="Mirror.Tests.CompressionQuaternionTest" runstate="Runnable" seed="1989969920" result="Passed" start-time="2021-03-06 06:27:09Z" end-time="2021-03-06 06:27:09Z" duration="0.000626" asserts="0">
                <properties />
              </test-case>
              <test-case id="4157" name="QuaternionCompressIsWithinPrecision((0.0, -0.7, -0.7, 0.0))" fullname="Mirror.Tests.CompressionQuaternionTest.QuaternionCompressIsWithinPrecision((0.0, -0.7, -0.7, 0.0))" methodname="QuaternionCompressIsWithinPrecision" classname="Mirror.Tests.CompressionQuaternionTest" runstate="Runnable" seed="1125606990" result="Passed" start-time="2021-03-06 06:27:09Z" end-time="2021-03-06 06:27:09Z" duration="0.000527" asserts="0">
                <properties />
              </test-case>
              <test-case id="4158" name="QuaternionCompressIsWithinPrecision((0.0, -0.7, -0.7, 0.0))" fullname="Mirror.Tests.CompressionQuaternionTest.QuaternionCompressIsWithinPrecision((0.0, -0.7, -0.7, 0.0))" methodname="QuaternionCompressIsWithinPrecision" classname="Mirror.Tests.CompressionQuaternionTest" runstate="Runnable" seed="9423396" result="Passed" start-time="2021-03-06 06:27:09Z" end-time="2021-03-06 06:27:09Z" duration="0.000542" asserts="0">
                <properties>
                  <property name="childIndex" value="2" />
                </properties>
              </test-case>
              <test-case id="4159" name="QuaternionCompressIsWithinPrecision((0.0, 0.0, -0.7, -0.7))" fullname="Mirror.Tests.CompressionQuaternionTest.QuaternionCompressIsWithinPrecision((0.0, 0.0, -0.7, -0.7))" methodname="QuaternionCompressIsWithinPrecision" classname="Mirror.Tests.CompressionQuaternionTest" runstate="Runnable" seed="881096146" result="Passed" start-time="2021-03-06 06:27:09Z" end-time="2021-03-06 06:27:09Z" duration="0.000579" asserts="0">
                <properties />
              </test-case>
              <test-case id="4160" name="QuaternionCompressIsWithinPrecision((-0.6, -0.6, -0.6, 0.0))" fullname="Mirror.Tests.CompressionQuaternionTest.QuaternionCompressIsWithinPrecision((-0.6, -0.6, -0.6, 0.0))" methodname="QuaternionCompressIsWithinPrecision" classname="Mirror.Tests.CompressionQuaternionTest" runstate="Runnable" seed="860626892" result="Passed" start-time="2021-03-06 06:27:09Z" end-time="2021-03-06 06:27:09Z" duration="0.000721" asserts="0">
                <properties />
              </test-case>
              <test-case id="4161" name="QuaternionCompressIsWithinPrecision((-0.6, -0.6, 0.0, -0.6))" fullname="Mirror.Tests.CompressionQuaternionTest.QuaternionCompressIsWithinPrecision((-0.6, -0.6, 0.0, -0.6))" methodname="QuaternionCompressIsWithinPrecision" classname="Mirror.Tests.CompressionQuaternionTest" runstate="Runnable" seed="2019321020" result="Passed" start-time="2021-03-06 06:27:09Z" end-time="2021-03-06 06:27:09Z" duration="0.000503" asserts="0">
                <properties />
              </test-case>
              <test-case id="4162" name="QuaternionCompressIsWithinPrecision((-0.6, 0.0, -0.6, -0.6))" fullname="Mirror.Tests.CompressionQuaternionTest.QuaternionCompressIsWithinPrecision((-0.6, 0.0, -0.6, -0.6))" methodname="QuaternionCompressIsWithinPrecision" classname="Mirror.Tests.CompressionQuaternionTest" runstate="Runnable" seed="1259151046" result="Passed" start-time="2021-03-06 06:27:09Z" end-time="2021-03-06 06:27:09Z" duration="0.000526" asserts="0">
                <properties />
              </test-case>
              <test-case id="4163" name="QuaternionCompressIsWithinPrecision((0.0, -0.6, -0.6, -0.6))" fullname="Mirror.Tests.CompressionQuaternionTest.QuaternionCompressIsWithinPrecision((0.0, -0.6, -0.6, -0.6))" methodname="QuaternionCompressIsWithinPrecision" classname="Mirror.Tests.CompressionQuaternionTest" runstate="Runnable" seed="2044734601" result="Passed" start-time="2021-03-06 06:27:09Z" end-time="2021-03-06 06:27:09Z" duration="0.000656" asserts="0">
                <properties />
              </test-case>
              <test-case id="4164" name="QuaternionCompressIsWithinPrecision((-0.5, -0.5, -0.5, -0.5))" fullname="Mirror.Tests.CompressionQuaternionTest.QuaternionCompressIsWithinPrecision((-0.5, -0.5, -0.5, -0.5))" methodname="QuaternionCompressIsWithinPrecision" classname="Mirror.Tests.CompressionQuaternionTest" runstate="Runnable" seed="128096113" result="Passed" start-time="2021-03-06 06:27:09Z" end-time="2021-03-06 06:27:09Z" duration="0.000600" asserts="0">
                <properties />
              </test-case>
              <test-case id="4165" name="QuaternionCompressIsWithinPrecision((0.6, -0.2, -0.8, 0.0))" fullname="Mirror.Tests.CompressionQuaternionTest.QuaternionCompressIsWithinPrecision((0.6, -0.2, -0.8, 0.0))" methodname="QuaternionCompressIsWithinPrecision" classname="Mirror.Tests.CompressionQuaternionTest" runstate="Runnable" seed="1687707634" result="Passed" start-time="2021-03-06 06:27:09Z" end-time="2021-03-06 06:27:09Z" duration="0.000594" asserts="0">
                <properties />
              </test-case>
              <test-case id="4166" name="QuaternionCompressIsWithinPrecision((-0.3, 0.3, 0.1, 0.9))" fullname="Mirror.Tests.CompressionQuaternionTest.QuaternionCompressIsWithinPrecision((-0.3, 0.3, 0.1, 0.9))" methodname="QuaternionCompressIsWithinPrecision" classname="Mirror.Tests.CompressionQuaternionTest" runstate="Runnable" seed="606157724" result="Passed" start-time="2021-03-06 06:27:09Z" end-time="2021-03-06 06:27:09Z" duration="0.000590" asserts="0">
                <properties />
              </test-case>
              <test-case id="4167" name="QuaternionCompressIsWithinPrecision((0.3, 0.4, -0.2, 0.8))" fullname="Mirror.Tests.CompressionQuaternionTest.QuaternionCompressIsWithinPrecision((0.3, 0.4, -0.2, 0.8))" methodname="QuaternionCompressIsWithinPrecision" classname="Mirror.Tests.CompressionQuaternionTest" runstate="Runnable" seed="1350522569" result="Passed" start-time="2021-03-06 06:27:09Z" end-time="2021-03-06 06:27:09Z" duration="0.000615" asserts="0">
                <properties />
              </test-case>
              <test-case id="4168" name="QuaternionCompressIsWithinPrecision((0.0, 0.1, 0.2, 1.0))" fullname="Mirror.Tests.CompressionQuaternionTest.QuaternionCompressIsWithinPrecision((0.0, 0.1, 0.2, 1.0))" methodname="QuaternionCompressIsWithinPrecision" classname="Mirror.Tests.CompressionQuaternionTest" runstate="Runnable" seed="421450607" result="Passed" start-time="2021-03-06 06:27:09Z" end-time="2021-03-06 06:27:09Z" duration="0.000587" asserts="0">
                <properties />
              </test-case>
              <test-case id="4169" name="QuaternionCompressIsWithinPrecision((0.0, 0.0, 0.0, 1.0))" fullname="Mirror.Tests.CompressionQuaternionTest.QuaternionCompressIsWithinPrecision((0.0, 0.0, 0.0, 1.0))" methodname="QuaternionCompressIsWithinPrecision" classname="Mirror.Tests.CompressionQuaternionTest" runstate="Runnable" seed="1975764637" result="Passed" start-time="2021-03-06 06:27:09Z" end-time="2021-03-06 06:27:09Z" duration="0.000543" asserts="0">
                <properties>
                  <property name="childIndex" value="2" />
                </properties>
              </test-case>
              <test-case id="4170" name="QuaternionCompressIsWithinPrecision((0.0, 0.0, 0.0, -1.0))" fullname="Mirror.Tests.CompressionQuaternionTest.QuaternionCompressIsWithinPrecision((0.0, 0.0, 0.0, -1.0))" methodname="QuaternionCompressIsWithinPrecision" classname="Mirror.Tests.CompressionQuaternionTest" runstate="Runnable" seed="372741730" result="Passed" start-time="2021-03-06 06:27:09Z" end-time="2021-03-06 06:27:09Z" duration="0.000524" asserts="0">
                <properties>
                  <property name="childIndex" value="2" />
                </properties>
              </test-case>
              <test-case id="4171" name="QuaternionCompressIsWithinPrecision((-0.1, -0.2, -0.4, 0.9))" fullname="Mirror.Tests.CompressionQuaternionTest.QuaternionCompressIsWithinPrecision((-0.1, -0.2, -0.4, 0.9))" methodname="QuaternionCompressIsWithinPrecision" classname="Mirror.Tests.CompressionQuaternionTest" runstate="Runnable" seed="83706883" result="Passed" start-time="2021-03-06 06:27:09Z" end-time="2021-03-06 06:27:09Z" duration="0.000529" asserts="0">
                <properties />
              </test-case>
            </test-suite>
            <test-suite type="ParameterizedMethod" id="4206" name="RotationIsWithinPrecision" fullname="Mirror.Tests.CompressionQuaternionTest.RotationIsWithinPrecision" classname="Mirror.Tests.CompressionQuaternionTest" runstate="Runnable" testcasecount="33" result="Passed" start-time="2021-03-06 06:27:09Z" end-time="2021-03-06 06:27:10Z" duration="0.067956" total="33" passed="33" failed="0" inconclusive="0" skipped="0" asserts="0">
              <properties />
              <test-case id="4173" name="RotationIsWithinPrecision((0.0, 0.0, 0.0, 1.0))" fullname="Mirror.Tests.CompressionQuaternionTest.RotationIsWithinPrecision((0.0, 0.0, 0.0, 1.0))" methodname="RotationIsWithinPrecision" classname="Mirror.Tests.CompressionQuaternionTest" runstate="Runnable" seed="1470304950" result="Passed" start-time="2021-03-06 06:27:09Z" end-time="2021-03-06 06:27:09Z" duration="0.001565" asserts="0">
                <properties />
              </test-case>
              <test-case id="4174" name="RotationIsWithinPrecision((1.0, 0.0, 0.0, 0.0))" fullname="Mirror.Tests.CompressionQuaternionTest.RotationIsWithinPrecision((1.0, 0.0, 0.0, 0.0))" methodname="RotationIsWithinPrecision" classname="Mirror.Tests.CompressionQuaternionTest" runstate="Runnable" seed="1298526946" result="Passed" start-time="2021-03-06 06:27:09Z" end-time="2021-03-06 06:27:09Z" duration="0.000565" asserts="0">
                <properties />
              </test-case>
              <test-case id="4175" name="RotationIsWithinPrecision((0.0, 1.0, 0.0, 0.0))" fullname="Mirror.Tests.CompressionQuaternionTest.RotationIsWithinPrecision((0.0, 1.0, 0.0, 0.0))" methodname="RotationIsWithinPrecision" classname="Mirror.Tests.CompressionQuaternionTest" runstate="Runnable" seed="1341487535" result="Passed" start-time="2021-03-06 06:27:09Z" end-time="2021-03-06 06:27:09Z" duration="0.000529" asserts="0">
                <properties />
              </test-case>
              <test-case id="4176" name="RotationIsWithinPrecision((0.0, 0.0, 1.0, 0.0))" fullname="Mirror.Tests.CompressionQuaternionTest.RotationIsWithinPrecision((0.0, 0.0, 1.0, 0.0))" methodname="RotationIsWithinPrecision" classname="Mirror.Tests.CompressionQuaternionTest" runstate="Runnable" seed="105225757" result="Passed" start-time="2021-03-06 06:27:09Z" end-time="2021-03-06 06:27:09Z" duration="0.000669" asserts="0">
                <properties />
              </test-case>
              <test-case id="4177" name="RotationIsWithinPrecision((0.7, 0.7, 0.0, 0.0))" fullname="Mirror.Tests.CompressionQuaternionTest.RotationIsWithinPrecision((0.7, 0.7, 0.0, 0.0))" methodname="RotationIsWithinPrecision" classname="Mirror.Tests.CompressionQuaternionTest" runstate="Runnable" seed="1771858984" result="Passed" start-time="2021-03-06 06:27:09Z" end-time="2021-03-06 06:27:09Z" duration="0.000669" asserts="0">
                <properties />
              </test-case>
              <test-case id="4178" name="RotationIsWithinPrecision((0.0, 0.7, 0.7, 0.0))" fullname="Mirror.Tests.CompressionQuaternionTest.RotationIsWithinPrecision((0.0, 0.7, 0.7, 0.0))" methodname="RotationIsWithinPrecision" classname="Mirror.Tests.CompressionQuaternionTest" runstate="Runnable" seed="1752633410" result="Passed" start-time="2021-03-06 06:27:09Z" end-time="2021-03-06 06:27:09Z" duration="0.000549" asserts="0">
                <properties />
              </test-case>
              <test-case id="4179" name="RotationIsWithinPrecision((0.0, 0.7, 0.7, 0.0))" fullname="Mirror.Tests.CompressionQuaternionTest.RotationIsWithinPrecision((0.0, 0.7, 0.7, 0.0))" methodname="RotationIsWithinPrecision" classname="Mirror.Tests.CompressionQuaternionTest" runstate="Runnable" seed="2011788683" result="Passed" start-time="2021-03-06 06:27:09Z" end-time="2021-03-06 06:27:09Z" duration="0.000629" asserts="0">
                <properties>
                  <property name="childIndex" value="2" />
                </properties>
              </test-case>
              <test-case id="4180" name="RotationIsWithinPrecision((0.0, 0.0, 0.7, 0.7))" fullname="Mirror.Tests.CompressionQuaternionTest.RotationIsWithinPrecision((0.0, 0.0, 0.7, 0.7))" methodname="RotationIsWithinPrecision" classname="Mirror.Tests.CompressionQuaternionTest" runstate="Runnable" seed="591234401" result="Passed" start-time="2021-03-06 06:27:09Z" end-time="2021-03-06 06:27:09Z" duration="0.000519" asserts="0">
                <properties />
              </test-case>
              <test-case id="4181" name="RotationIsWithinPrecision((0.6, 0.6, 0.6, 0.0))" fullname="Mirror.Tests.CompressionQuaternionTest.RotationIsWithinPrecision((0.6, 0.6, 0.6, 0.0))" methodname="RotationIsWithinPrecision" classname="Mirror.Tests.CompressionQuaternionTest" runstate="Runnable" seed="19838237" result="Passed" start-time="2021-03-06 06:27:09Z" end-time="2021-03-06 06:27:09Z" duration="0.001232" asserts="0">
                <properties />
              </test-case>
              <test-case id="4182" name="RotationIsWithinPrecision((0.6, 0.6, 0.0, 0.6))" fullname="Mirror.Tests.CompressionQuaternionTest.RotationIsWithinPrecision((0.6, 0.6, 0.0, 0.6))" methodname="RotationIsWithinPrecision" classname="Mirror.Tests.CompressionQuaternionTest" runstate="Runnable" seed="1213268733" result="Passed" start-time="2021-03-06 06:27:09Z" end-time="2021-03-06 06:27:09Z" duration="0.000732" asserts="0">
                <properties />
              </test-case>
              <test-case id="4183" name="RotationIsWithinPrecision((0.6, 0.0, 0.6, 0.6))" fullname="Mirror.Tests.CompressionQuaternionTest.RotationIsWithinPrecision((0.6, 0.0, 0.6, 0.6))" methodname="RotationIsWithinPrecision" classname="Mirror.Tests.CompressionQuaternionTest" runstate="Runnable" seed="1511054598" result="Passed" start-time="2021-03-06 06:27:09Z" end-time="2021-03-06 06:27:09Z" duration="0.000603" asserts="0">
                <properties />
              </test-case>
              <test-case id="4184" name="RotationIsWithinPrecision((0.0, 0.6, 0.6, 0.6))" fullname="Mirror.Tests.CompressionQuaternionTest.RotationIsWithinPrecision((0.0, 0.6, 0.6, 0.6))" methodname="RotationIsWithinPrecision" classname="Mirror.Tests.CompressionQuaternionTest" runstate="Runnable" seed="1611013599" result="Passed" start-time="2021-03-06 06:27:09Z" end-time="2021-03-06 06:27:09Z" duration="0.000551" asserts="0">
                <properties />
              </test-case>
              <test-case id="4185" name="RotationIsWithinPrecision((0.5, 0.5, 0.5, 0.5))" fullname="Mirror.Tests.CompressionQuaternionTest.RotationIsWithinPrecision((0.5, 0.5, 0.5, 0.5))" methodname="RotationIsWithinPrecision" classname="Mirror.Tests.CompressionQuaternionTest" runstate="Runnable" seed="1512743142" result="Passed" start-time="2021-03-06 06:27:09Z" end-time="2021-03-06 06:27:09Z" duration="0.000570" asserts="0">
                <properties />
              </test-case>
              <test-case id="4186" name="RotationIsWithinPrecision((-1.0, 0.0, 0.0, 0.0))" fullname="Mirror.Tests.CompressionQuaternionTest.RotationIsWithinPrecision((-1.0, 0.0, 0.0, 0.0))" methodname="RotationIsWithinPrecision" classname="Mirror.Tests.CompressionQuaternionTest" runstate="Runnable" seed="1659970070" result="Passed" start-time="2021-03-06 06:27:09Z" end-time="2021-03-06 06:27:09Z" duration="0.000731" asserts="0">
                <properties />
              </test-case>
              <test-case id="4187" name="RotationIsWithinPrecision((0.0, -1.0, 0.0, 0.0))" fullname="Mirror.Tests.CompressionQuaternionTest.RotationIsWithinPrecision((0.0, -1.0, 0.0, 0.0))" methodname="RotationIsWithinPrecision" classname="Mirror.Tests.CompressionQuaternionTest" runstate="Runnable" seed="1830377390" result="Passed" start-time="2021-03-06 06:27:09Z" end-time="2021-03-06 06:27:09Z" duration="0.000546" asserts="0">
                <properties />
              </test-case>
              <test-case id="4188" name="RotationIsWithinPrecision((0.0, 0.0, -1.0, 0.0))" fullname="Mirror.Tests.CompressionQuaternionTest.RotationIsWithinPrecision((0.0, 0.0, -1.0, 0.0))" methodname="RotationIsWithinPrecision" classname="Mirror.Tests.CompressionQuaternionTest" runstate="Runnable" seed="1642659766" result="Passed" start-time="2021-03-06 06:27:09Z" end-time="2021-03-06 06:27:09Z" duration="0.000510" asserts="0">
                <properties />
              </test-case>
              <test-case id="4189" name="RotationIsWithinPrecision((0.0, 0.0, 0.0, -1.0))" fullname="Mirror.Tests.CompressionQuaternionTest.RotationIsWithinPrecision((0.0, 0.0, 0.0, -1.0))" methodname="RotationIsWithinPrecision" classname="Mirror.Tests.CompressionQuaternionTest" runstate="Runnable" seed="1006397374" result="Passed" start-time="2021-03-06 06:27:09Z" end-time="2021-03-06 06:27:09Z" duration="0.000513" asserts="0">
                <properties />
              </test-case>
              <test-case id="4190" name="RotationIsWithinPrecision((-0.7, -0.7, 0.0, 0.0))" fullname="Mirror.Tests.CompressionQuaternionTest.RotationIsWithinPrecision((-0.7, -0.7, 0.0, 0.0))" methodname="RotationIsWithinPrecision" classname="Mirror.Tests.CompressionQuaternionTest" runstate="Runnable" seed="162949950" result="Passed" start-time="2021-03-06 06:27:09Z" end-time="2021-03-06 06:27:09Z" duration="0.000511" asserts="0">
                <properties />
              </test-case>
              <test-case id="4191" name="RotationIsWithinPrecision((0.0, -0.7, -0.7, 0.0))" fullname="Mirror.Tests.CompressionQuaternionTest.RotationIsWithinPrecision((0.0, -0.7, -0.7, 0.0))" methodname="RotationIsWithinPrecision" classname="Mirror.Tests.CompressionQuaternionTest" runstate="Runnable" seed="1873443130" result="Passed" start-time="2021-03-06 06:27:09Z" end-time="2021-03-06 06:27:09Z" duration="0.000629" asserts="0">
                <properties />
              </test-case>
              <test-case id="4192" name="RotationIsWithinPrecision((0.0, -0.7, -0.7, 0.0))" fullname="Mirror.Tests.CompressionQuaternionTest.RotationIsWithinPrecision((0.0, -0.7, -0.7, 0.0))" methodname="RotationIsWithinPrecision" classname="Mirror.Tests.CompressionQuaternionTest" runstate="Runnable" seed="396843380" result="Passed" start-time="2021-03-06 06:27:09Z" end-time="2021-03-06 06:27:09Z" duration="0.000664" asserts="0">
                <properties>
                  <property name="childIndex" value="2" />
                </properties>
              </test-case>
              <test-case id="4193" name="RotationIsWithinPrecision((0.0, 0.0, -0.7, -0.7))" fullname="Mirror.Tests.CompressionQuaternionTest.RotationIsWithinPrecision((0.0, 0.0, -0.7, -0.7))" methodname="RotationIsWithinPrecision" classname="Mirror.Tests.CompressionQuaternionTest" runstate="Runnable" seed="509738403" result="Passed" start-time="2021-03-06 06:27:09Z" end-time="2021-03-06 06:27:09Z" duration="0.000512" asserts="0">
                <properties />
              </test-case>
              <test-case id="4194" name="RotationIsWithinPrecision((-0.6, -0.6, -0.6, 0.0))" fullname="Mirror.Tests.CompressionQuaternionTest.RotationIsWithinPrecision((-0.6, -0.6, -0.6, 0.0))" methodname="RotationIsWithinPrecision" classname="Mirror.Tests.CompressionQuaternionTest" runstate="Runnable" seed="708994660" result="Passed" start-time="2021-03-06 06:27:10Z" end-time="2021-03-06 06:27:10Z" duration="0.000610" asserts="0">
                <properties />
              </test-case>
              <test-case id="4195" name="RotationIsWithinPrecision((-0.6, -0.6, 0.0, -0.6))" fullname="Mirror.Tests.CompressionQuaternionTest.RotationIsWithinPrecision((-0.6, -0.6, 0.0, -0.6))" methodname="RotationIsWithinPrecision" classname="Mirror.Tests.CompressionQuaternionTest" runstate="Runnable" seed="315394640" result="Passed" start-time="2021-03-06 06:27:10Z" end-time="2021-03-06 06:27:10Z" duration="0.000522" asserts="0">
                <properties />
              </test-case>
              <test-case id="4196" name="RotationIsWithinPrecision((-0.6, 0.0, -0.6, -0.6))" fullname="Mirror.Tests.CompressionQuaternionTest.RotationIsWithinPrecision((-0.6, 0.0, -0.6, -0.6))" methodname="RotationIsWithinPrecision" classname="Mirror.Tests.CompressionQuaternionTest" runstate="Runnable" seed="1369600224" result="Passed" start-time="2021-03-06 06:27:10Z" end-time="2021-03-06 06:27:10Z" duration="0.000593" asserts="0">
                <properties />
              </test-case>
              <test-case id="4197" name="RotationIsWithinPrecision((0.0, -0.6, -0.6, -0.6))" fullname="Mirror.Tests.CompressionQuaternionTest.RotationIsWithinPrecision((0.0, -0.6, -0.6, -0.6))" methodname="RotationIsWithinPrecision" classname="Mirror.Tests.CompressionQuaternionTest" runstate="Runnable" seed="805991086" result="Passed" start-time="2021-03-06 06:27:10Z" end-time="2021-03-06 06:27:10Z" duration="0.000501" asserts="0">
                <properties />
              </test-case>
              <test-case id="4198" name="RotationIsWithinPrecision((-0.5, -0.5, -0.5, -0.5))" fullname="Mirror.Tests.CompressionQuaternionTest.RotationIsWithinPrecision((-0.5, -0.5, -0.5, -0.5))" methodname="RotationIsWithinPrecision" classname="Mirror.Tests.CompressionQuaternionTest" runstate="Runnable" seed="1665252300" result="Passed" start-time="2021-03-06 06:27:10Z" end-time="2021-03-06 06:27:10Z" duration="0.000504" asserts="0">
                <properties />
              </test-case>
              <test-case id="4199" name="RotationIsWithinPrecision((0.6, -0.2, -0.8, 0.0))" fullname="Mirror.Tests.CompressionQuaternionTest.RotationIsWithinPrecision((0.6, -0.2, -0.8, 0.0))" methodname="RotationIsWithinPrecision" classname="Mirror.Tests.CompressionQuaternionTest" runstate="Runnable" seed="917375807" result="Passed" start-time="2021-03-06 06:27:10Z" end-time="2021-03-06 06:27:10Z" duration="0.000507" asserts="0">
                <properties />
              </test-case>
              <test-case id="4200" name="RotationIsWithinPrecision((-0.3, 0.3, 0.1, 0.9))" fullname="Mirror.Tests.CompressionQuaternionTest.RotationIsWithinPrecision((-0.3, 0.3, 0.1, 0.9))" methodname="RotationIsWithinPrecision" classname="Mirror.Tests.CompressionQuaternionTest" runstate="Runnable" seed="1160403116" result="Passed" start-time="2021-03-06 06:27:10Z" end-time="2021-03-06 06:27:10Z" duration="0.000507" asserts="0">
                <properties />
              </test-case>
              <test-case id="4201" name="RotationIsWithinPrecision((0.3, 0.4, -0.2, 0.8))" fullname="Mirror.Tests.CompressionQuaternionTest.RotationIsWithinPrecision((0.3, 0.4, -0.2, 0.8))" methodname="RotationIsWithinPrecision" classname="Mirror.Tests.CompressionQuaternionTest" runstate="Runnable" seed="1477199178" result="Passed" start-time="2021-03-06 06:27:10Z" end-time="2021-03-06 06:27:10Z" duration="0.000554" asserts="0">
                <properties />
              </test-case>
              <test-case id="4202" name="RotationIsWithinPrecision((0.0, 0.1, 0.2, 1.0))" fullname="Mirror.Tests.CompressionQuaternionTest.RotationIsWithinPrecision((0.0, 0.1, 0.2, 1.0))" methodname="RotationIsWithinPrecision" classname="Mirror.Tests.CompressionQuaternionTest" runstate="Runnable" seed="1341605765" result="Passed" start-time="2021-03-06 06:27:10Z" end-time="2021-03-06 06:27:10Z" duration="0.000591" asserts="0">
                <properties />
              </test-case>
              <test-case id="4203" name="RotationIsWithinPrecision((0.0, 0.0, 0.0, 1.0))" fullname="Mirror.Tests.CompressionQuaternionTest.RotationIsWithinPrecision((0.0, 0.0, 0.0, 1.0))" methodname="RotationIsWithinPrecision" classname="Mirror.Tests.CompressionQuaternionTest" runstate="Runnable" seed="894145101" result="Passed" start-time="2021-03-06 06:27:10Z" end-time="2021-03-06 06:27:10Z" duration="0.000678" asserts="0">
                <properties>
                  <property name="childIndex" value="2" />
                </properties>
              </test-case>
              <test-case id="4204" name="RotationIsWithinPrecision((0.0, 0.0, 0.0, -1.0))" fullname="Mirror.Tests.CompressionQuaternionTest.RotationIsWithinPrecision((0.0, 0.0, 0.0, -1.0))" methodname="RotationIsWithinPrecision" classname="Mirror.Tests.CompressionQuaternionTest" runstate="Runnable" seed="493105328" result="Passed" start-time="2021-03-06 06:27:10Z" end-time="2021-03-06 06:27:10Z" duration="0.000571" asserts="0">
                <properties>
                  <property name="childIndex" value="2" />
                </properties>
              </test-case>
              <test-case id="4205" name="RotationIsWithinPrecision((-0.1, -0.2, -0.4, 0.9))" fullname="Mirror.Tests.CompressionQuaternionTest.RotationIsWithinPrecision((-0.1, -0.2, -0.4, 0.9))" methodname="RotationIsWithinPrecision" classname="Mirror.Tests.CompressionQuaternionTest" runstate="Runnable" seed="1334512484" result="Passed" start-time="2021-03-06 06:27:10Z" end-time="2021-03-06 06:27:10Z" duration="0.000575" asserts="0">
                <properties />
              </test-case>
            </test-suite>
          </test-suite>
          <test-suite type="TestFixture" id="4224" name="CustomAttrributeTest" fullname="Mirror.Tests.CustomAttrributeTest" classname="Mirror.Tests.CustomAttrributeTest" runstate="Runnable" testcasecount="4" result="Passed" start-time="2021-03-06 06:27:10Z" end-time="2021-03-06 06:27:10Z" duration="0.018177" total="4" passed="4" failed="0" inconclusive="0" skipped="0" asserts="0">
            <properties />
            <test-case id="4227" name="ClientRPCAttributeTest" fullname="Mirror.Tests.CustomAttrributeTest.ClientRPCAttributeTest" methodname="ClientRPCAttributeTest" classname="Mirror.Tests.CustomAttrributeTest" runstate="Runnable" seed="1989926072" result="Passed" start-time="2021-03-06 06:27:10Z" end-time="2021-03-06 06:27:10Z" duration="0.001063" asserts="0">
              <properties />
            </test-case>
            <test-case id="4226" name="CommandAttributeTest" fullname="Mirror.Tests.CustomAttrributeTest.CommandAttributeTest" methodname="CommandAttributeTest" classname="Mirror.Tests.CustomAttrributeTest" runstate="Runnable" seed="858126131" result="Passed" start-time="2021-03-06 06:27:10Z" end-time="2021-03-06 06:27:10Z" duration="0.000678" asserts="0">
              <properties />
            </test-case>
            <test-case id="4225" name="SyncVarAttributeTest" fullname="Mirror.Tests.CustomAttrributeTest.SyncVarAttributeTest" methodname="SyncVarAttributeTest" classname="Mirror.Tests.CustomAttrributeTest" runstate="Runnable" seed="1109845000" result="Passed" start-time="2021-03-06 06:27:10Z" end-time="2021-03-06 06:27:10Z" duration="0.000642" asserts="0">
              <properties />
            </test-case>
            <test-case id="4228" name="TargetRPCAttributeTest" fullname="Mirror.Tests.CustomAttrributeTest.TargetRPCAttributeTest" methodname="TargetRPCAttributeTest" classname="Mirror.Tests.CustomAttrributeTest" runstate="Runnable" seed="407883372" result="Passed" start-time="2021-03-06 06:27:10Z" end-time="2021-03-06 06:27:10Z" duration="0.000583" asserts="0">
              <properties />
            </test-case>
          </test-suite>
          <test-suite type="TestFixture" id="4229" name="CustomRWTest" fullname="Mirror.Tests.CustomRWTest" classname="Mirror.Tests.CustomRWTest" runstate="Runnable" testcasecount="1" result="Passed" start-time="2021-03-06 06:27:10Z" end-time="2021-03-06 06:27:10Z" duration="0.013928" total="1" passed="1" failed="0" inconclusive="0" skipped="0" asserts="0">
            <properties />
            <test-case id="4230" name="TestCustomRW" fullname="Mirror.Tests.CustomRWTest.TestCustomRW" methodname="TestCustomRW" classname="Mirror.Tests.CustomRWTest" runstate="Runnable" seed="387379609" result="Passed" start-time="2021-03-06 06:27:10Z" end-time="2021-03-06 06:27:10Z" duration="0.002735" asserts="0">
              <properties />
            </test-case>
          </test-suite>
          <test-suite type="TestFixture" id="4231" name="EnumReadWriteTests" fullname="Mirror.Tests.EnumReadWriteTests" classname="Mirror.Tests.EnumReadWriteTests" runstate="Runnable" testcasecount="3" result="Passed" start-time="2021-03-06 06:27:10Z" end-time="2021-03-06 06:27:10Z" duration="0.018910" total="3" passed="3" failed="0" inconclusive="0" skipped="0" asserts="0">
            <properties />
            <test-case id="4232" name="ByteIsSentForByteEnum" fullname="Mirror.Tests.EnumReadWriteTests.ByteIsSentForByteEnum" methodname="ByteIsSentForByteEnum" classname="Mirror.Tests.EnumReadWriteTests" runstate="Runnable" seed="164587432" result="Passed" start-time="2021-03-06 06:27:10Z" end-time="2021-03-06 06:27:10Z" duration="0.001171" asserts="0">
              <properties />
            </test-case>
            <test-case id="4234" name="CustomWriterIsUsedForEnum" fullname="Mirror.Tests.EnumReadWriteTests.CustomWriterIsUsedForEnum" methodname="CustomWriterIsUsedForEnum" classname="Mirror.Tests.EnumReadWriteTests" runstate="Runnable" seed="1849529392" result="Passed" start-time="2021-03-06 06:27:10Z" end-time="2021-03-06 06:27:10Z" duration="0.002671" asserts="0">
              <properties />
            </test-case>
            <test-case id="4233" name="ShortIsSentForShortEnum" fullname="Mirror.Tests.EnumReadWriteTests.ShortIsSentForShortEnum" methodname="ShortIsSentForShortEnum" classname="Mirror.Tests.EnumReadWriteTests" runstate="Runnable" seed="1562612145" result="Passed" start-time="2021-03-06 06:27:10Z" end-time="2021-03-06 06:27:10Z" duration="0.001309" asserts="0">
              <properties />
            </test-case>
          </test-suite>
          <test-suite type="TestFixture" id="4235" name="ExponentialMovingAverageTest" fullname="Mirror.Tests.ExponentialMovingAverageTest" classname="Mirror.Tests.ExponentialMovingAverageTest" runstate="Runnable" testcasecount="3" result="Passed" start-time="2021-03-06 06:27:10Z" end-time="2021-03-06 06:27:10Z" duration="0.014401" total="3" passed="3" failed="0" inconclusive="0" skipped="0" asserts="0">
            <properties />
            <test-case id="4236" name="TestInitial" fullname="Mirror.Tests.ExponentialMovingAverageTest.TestInitial" methodname="TestInitial" classname="Mirror.Tests.ExponentialMovingAverageTest" runstate="Runnable" seed="382553280" result="Passed" start-time="2021-03-06 06:27:10Z" end-time="2021-03-06 06:27:10Z" duration="0.001523" asserts="0">
              <properties />
            </test-case>
            <test-case id="4237" name="TestMovingAverage" fullname="Mirror.Tests.ExponentialMovingAverageTest.TestMovingAverage" methodname="TestMovingAverage" classname="Mirror.Tests.ExponentialMovingAverageTest" runstate="Runnable" seed="1257039951" result="Passed" start-time="2021-03-06 06:27:10Z" end-time="2021-03-06 06:27:10Z" duration="0.000722" asserts="0">
              <properties />
            </test-case>
            <test-case id="4238" name="TestVar" fullname="Mirror.Tests.ExponentialMovingAverageTest.TestVar" methodname="TestVar" classname="Mirror.Tests.ExponentialMovingAverageTest" runstate="Runnable" seed="479715918" result="Passed" start-time="2021-03-06 06:27:10Z" end-time="2021-03-06 06:27:10Z" duration="0.000580" asserts="0">
              <properties />
            </test-case>
          </test-suite>
          <test-suite type="TestFixture" id="4239" name="FallbackTransportTest" fullname="Mirror.Tests.FallbackTransportTest" classname="Mirror.Tests.FallbackTransportTest" runstate="Runnable" testcasecount="9" result="Passed" start-time="2021-03-06 06:27:10Z" end-time="2021-03-06 06:27:10Z" duration="0.518069" total="9" passed="9" failed="0" inconclusive="0" skipped="0" asserts="0">
            <properties />
            <test-case id="4240" name="TestAvailable" fullname="Mirror.Tests.FallbackTransportTest.TestAvailable" methodname="TestAvailable" classname="Mirror.Tests.FallbackTransportTest" runstate="Runnable" seed="352510991" result="Passed" start-time="2021-03-06 06:27:10Z" end-time="2021-03-06 06:27:10Z" duration="0.199790" asserts="0">
              <properties />
              <output><![CDATA[You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
FallbackTransport available: Castle.Proxies.TransportProxy
]]></output>
            </test-case>
            <test-case id="4246" name="TestClient1Connected" fullname="Mirror.Tests.FallbackTransportTest.TestClient1Connected" methodname="TestClient1Connected" classname="Mirror.Tests.FallbackTransportTest" runstate="Runnable" seed="1992110142" result="Passed" start-time="2021-03-06 06:27:10Z" end-time="2021-03-06 06:27:10Z" duration="0.065815" asserts="0">
              <properties />
              <output><![CDATA[You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
FallbackTransport available: Castle.Proxies.TransportProxy
]]></output>
            </test-case>
            <test-case id="4247" name="TestClient2Connected" fullname="Mirror.Tests.FallbackTransportTest.TestClient2Connected" methodname="TestClient2Connected" classname="Mirror.Tests.FallbackTransportTest" runstate="Runnable" seed="998750816" result="Passed" start-time="2021-03-06 06:27:10Z" end-time="2021-03-06 06:27:10Z" duration="0.033774" asserts="0">
              <properties />
              <output><![CDATA[You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
FallbackTransport available: Castle.Proxies.TransportProxy
]]></output>
            </test-case>
            <test-case id="4245" name="TestClientSend" fullname="Mirror.Tests.FallbackTransportTest.TestClientSend" methodname="TestClientSend" classname="Mirror.Tests.FallbackTransportTest" runstate="Runnable" seed="1344313663" result="Passed" start-time="2021-03-06 06:27:10Z" end-time="2021-03-06 06:27:10Z" duration="0.034341" asserts="0">
              <properties />
              <output><![CDATA[You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
FallbackTransport available: Castle.Proxies.TransportProxy
]]></output>
            </test-case>
            <test-case id="4242" name="TestConnect" fullname="Mirror.Tests.FallbackTransportTest.TestConnect" methodname="TestConnect" classname="Mirror.Tests.FallbackTransportTest" runstate="Runnable" seed="761560927" result="Passed" start-time="2021-03-06 06:27:10Z" end-time="2021-03-06 06:27:10Z" duration="0.028368" asserts="0">
              <properties />
              <output><![CDATA[You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
FallbackTransport available: Castle.Proxies.TransportProxy
]]></output>
            </test-case>
            <test-case id="4243" name="TestConnected" fullname="Mirror.Tests.FallbackTransportTest.TestConnected" methodname="TestConnected" classname="Mirror.Tests.FallbackTransportTest" runstate="Runnable" seed="1976520541" result="Passed" start-time="2021-03-06 06:27:10Z" end-time="2021-03-06 06:27:10Z" duration="0.029975" asserts="0">
              <properties />
              <output><![CDATA[You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
FallbackTransport available: Castle.Proxies.TransportProxy
]]></output>
            </test-case>
            <test-case id="4244" name="TestDisconnect" fullname="Mirror.Tests.FallbackTransportTest.TestDisconnect" methodname="TestDisconnect" classname="Mirror.Tests.FallbackTransportTest" runstate="Runnable" seed="2025908293" result="Passed" start-time="2021-03-06 06:27:10Z" end-time="2021-03-06 06:27:10Z" duration="0.029086" asserts="0">
              <properties />
              <output><![CDATA[You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
FallbackTransport available: Castle.Proxies.TransportProxy
]]></output>
            </test-case>
            <test-case id="4241" name="TestNotAvailable" fullname="Mirror.Tests.FallbackTransportTest.TestNotAvailable" methodname="TestNotAvailable" classname="Mirror.Tests.FallbackTransportTest" runstate="Runnable" seed="1014137300" result="Passed" start-time="2021-03-06 06:27:10Z" end-time="2021-03-06 06:27:10Z" duration="0.034336" asserts="0">
              <properties />
              <output><![CDATA[You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
]]></output>
            </test-case>
            <test-case id="4248" name="TestServerConnected" fullname="Mirror.Tests.FallbackTransportTest.TestServerConnected" methodname="TestServerConnected" classname="Mirror.Tests.FallbackTransportTest" runstate="Runnable" seed="465544914" result="Passed" start-time="2021-03-06 06:27:10Z" end-time="2021-03-06 06:27:10Z" duration="0.029917" asserts="0">
              <properties />
              <output><![CDATA[You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
FallbackTransport available: Castle.Proxies.TransportProxy
]]></output>
            </test-case>
          </test-suite>
          <test-suite type="TestSuite" id="5887" name="Generated" fullname="Mirror.Tests.Generated" runstate="Runnable" testcasecount="573" result="Passed" start-time="2021-03-06 06:27:10Z" end-time="2021-03-06 06:27:18Z" duration="7.352764" total="573" passed="573" failed="0" inconclusive="0" skipped="0" asserts="0">
            <properties />
            <test-suite type="TestSuite" id="5889" name="Attributes" fullname="Mirror.Tests.Generated.Attributes" runstate="Runnable" testcasecount="528" result="Passed" start-time="2021-03-06 06:27:10Z" end-time="2021-03-06 06:27:17Z" duration="6.406056" total="528" passed="528" failed="0" inconclusive="0" skipped="0" asserts="0">
              <properties />
              <test-suite type="TestFixture" id="5393" name="AttributeTest_ClassWithNoConstructor" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor" classname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor" runstate="Runnable" testcasecount="176" result="Passed" start-time="2021-03-06 06:27:10Z" end-time="2021-03-06 06:27:12Z" duration="1.876271" total="176" passed="176" failed="0" inconclusive="0" skipped="0" asserts="0">
                <properties />
                <test-suite type="ParameterizedMethod" id="5408" name="Client_bool_returnsValue" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor.Client_bool_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor" runstate="Runnable" testcasecount="2" result="Passed" start-time="2021-03-06 06:27:10Z" end-time="2021-03-06 06:27:10Z" duration="0.018559" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="5406" name="Client_bool_returnsValue(True)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor.Client_bool_returnsValue(True)" methodname="Client_bool_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor" runstate="Runnable" seed="931910074" result="Passed" start-time="2021-03-06 06:27:10Z" end-time="2021-03-06 06:27:10Z" duration="0.003468" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="5407" name="Client_bool_returnsValue(False)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor.Client_bool_returnsValue(False)" methodname="Client_bool_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor" runstate="Runnable" seed="2034760543" result="Passed" start-time="2021-03-06 06:27:10Z" end-time="2021-03-06 06:27:10Z" duration="0.004550" asserts="0">
                    <properties />
                    <output><![CDATA[[Client] function 'System.Boolean Mirror.Tests.Generated.Attributes.AttributeBehaviour_ClassWithNoConstructor::Client_bool_Function()' called when client was not active
]]></output>
                  </test-case>
                </test-suite>
                <test-suite type="ParameterizedMethod" id="5411" name="Client_bool_setsOutValue" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor.Client_bool_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor" runstate="Runnable" testcasecount="2" result="Passed" start-time="2021-03-06 06:27:10Z" end-time="2021-03-06 06:27:10Z" duration="0.022448" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="5409" name="Client_bool_setsOutValue(True)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor.Client_bool_setsOutValue(True)" methodname="Client_bool_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor" runstate="Runnable" seed="91290947" result="Passed" start-time="2021-03-06 06:27:10Z" end-time="2021-03-06 06:27:10Z" duration="0.002214" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="5410" name="Client_bool_setsOutValue(False)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor.Client_bool_setsOutValue(False)" methodname="Client_bool_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor" runstate="Runnable" seed="1090283271" result="Passed" start-time="2021-03-06 06:27:10Z" end-time="2021-03-06 06:27:10Z" duration="0.004218" asserts="0">
                    <properties />
                    <output><![CDATA[[Client] function 'System.Void Mirror.Tests.Generated.Attributes.AttributeBehaviour_ClassWithNoConstructor::Client_bool_out_Function(System.Boolean&)' called when client was not active
]]></output>
                  </test-case>
                </test-suite>
                <test-suite type="ParameterizedMethod" id="5420" name="Client_byte_returnsValue" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor.Client_byte_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor" runstate="Runnable" testcasecount="2" result="Passed" start-time="2021-03-06 06:27:10Z" end-time="2021-03-06 06:27:10Z" duration="0.021370" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="5418" name="Client_byte_returnsValue(True)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor.Client_byte_returnsValue(True)" methodname="Client_byte_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor" runstate="Runnable" seed="279012851" result="Passed" start-time="2021-03-06 06:27:10Z" end-time="2021-03-06 06:27:10Z" duration="0.002382" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="5419" name="Client_byte_returnsValue(False)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor.Client_byte_returnsValue(False)" methodname="Client_byte_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor" runstate="Runnable" seed="1697367493" result="Passed" start-time="2021-03-06 06:27:10Z" end-time="2021-03-06 06:27:10Z" duration="0.003924" asserts="0">
                    <properties />
                    <output><![CDATA[[Client] function 'System.Byte Mirror.Tests.Generated.Attributes.AttributeBehaviour_ClassWithNoConstructor::Client_byte_Function()' called when client was not active
]]></output>
                  </test-case>
                </test-suite>
                <test-suite type="ParameterizedMethod" id="5423" name="Client_byte_setsOutValue" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor.Client_byte_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor" runstate="Runnable" testcasecount="2" result="Passed" start-time="2021-03-06 06:27:10Z" end-time="2021-03-06 06:27:10Z" duration="0.016682" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="5421" name="Client_byte_setsOutValue(True)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor.Client_byte_setsOutValue(True)" methodname="Client_byte_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor" runstate="Runnable" seed="70571768" result="Passed" start-time="2021-03-06 06:27:10Z" end-time="2021-03-06 06:27:10Z" duration="0.002280" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="5422" name="Client_byte_setsOutValue(False)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor.Client_byte_setsOutValue(False)" methodname="Client_byte_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor" runstate="Runnable" seed="1151196530" result="Passed" start-time="2021-03-06 06:27:10Z" end-time="2021-03-06 06:27:10Z" duration="0.003700" asserts="0">
                    <properties />
                    <output><![CDATA[[Client] function 'System.Void Mirror.Tests.Generated.Attributes.AttributeBehaviour_ClassWithNoConstructor::Client_byte_out_Function(System.Byte&)' called when client was not active
]]></output>
                  </test-case>
                </test-suite>
                <test-suite type="ParameterizedMethod" id="5414" name="Client_char_returnsValue" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor.Client_char_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor" runstate="Runnable" testcasecount="2" result="Passed" start-time="2021-03-06 06:27:10Z" end-time="2021-03-06 06:27:10Z" duration="0.021807" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="5412" name="Client_char_returnsValue(True)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor.Client_char_returnsValue(True)" methodname="Client_char_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor" runstate="Runnable" seed="1081070178" result="Passed" start-time="2021-03-06 06:27:10Z" end-time="2021-03-06 06:27:10Z" duration="0.002195" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="5413" name="Client_char_returnsValue(False)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor.Client_char_returnsValue(False)" methodname="Client_char_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor" runstate="Runnable" seed="1771951077" result="Passed" start-time="2021-03-06 06:27:10Z" end-time="2021-03-06 06:27:10Z" duration="0.003687" asserts="0">
                    <properties />
                    <output><![CDATA[[Client] function 'System.Char Mirror.Tests.Generated.Attributes.AttributeBehaviour_ClassWithNoConstructor::Client_char_Function()' called when client was not active
]]></output>
                  </test-case>
                </test-suite>
                <test-suite type="ParameterizedMethod" id="5417" name="Client_char_setsOutValue" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor.Client_char_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor" runstate="Runnable" testcasecount="2" result="Passed" start-time="2021-03-06 06:27:10Z" end-time="2021-03-06 06:27:10Z" duration="0.020711" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="5415" name="Client_char_setsOutValue(True)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor.Client_char_setsOutValue(True)" methodname="Client_char_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor" runstate="Runnable" seed="1706741109" result="Passed" start-time="2021-03-06 06:27:10Z" end-time="2021-03-06 06:27:10Z" duration="0.002064" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="5416" name="Client_char_setsOutValue(False)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor.Client_char_setsOutValue(False)" methodname="Client_char_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor" runstate="Runnable" seed="1345611585" result="Passed" start-time="2021-03-06 06:27:10Z" end-time="2021-03-06 06:27:10Z" duration="0.003853" asserts="0">
                    <properties />
                    <output><![CDATA[[Client] function 'System.Void Mirror.Tests.Generated.Attributes.AttributeBehaviour_ClassWithNoConstructor::Client_char_out_Function(System.Char&)' called when client was not active
]]></output>
                  </test-case>
                </test-suite>
                <test-suite type="ParameterizedMethod" id="5456" name="Client_ClassWithConstructor_returnsValue" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor.Client_ClassWithConstructor_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor" runstate="Runnable" testcasecount="2" result="Passed" start-time="2021-03-06 06:27:10Z" end-time="2021-03-06 06:27:10Z" duration="0.020290" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="5454" name="Client_ClassWithConstructor_returnsValue(True)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor.Client_ClassWithConstructor_returnsValue(True)" methodname="Client_ClassWithConstructor_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor" runstate="Runnable" seed="324226109" result="Passed" start-time="2021-03-06 06:27:10Z" end-time="2021-03-06 06:27:10Z" duration="0.002554" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="5455" name="Client_ClassWithConstructor_returnsValue(False)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor.Client_ClassWithConstructor_returnsValue(False)" methodname="Client_ClassWithConstructor_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor" runstate="Runnable" seed="50146991" result="Passed" start-time="2021-03-06 06:27:10Z" end-time="2021-03-06 06:27:10Z" duration="0.003691" asserts="0">
                    <properties />
                    <output><![CDATA[[Client] function 'Mirror.Tests.Generators.ClassWithConstructor Mirror.Tests.Generated.Attributes.AttributeBehaviour_ClassWithNoConstructor::Client_ClassWithConstructor_Function()' called when client was not active
]]></output>
                  </test-case>
                </test-suite>
                <test-suite type="ParameterizedMethod" id="5459" name="Client_ClassWithConstructor_setsOutValue" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor.Client_ClassWithConstructor_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor" runstate="Runnable" testcasecount="2" result="Passed" start-time="2021-03-06 06:27:10Z" end-time="2021-03-06 06:27:10Z" duration="0.017892" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="5457" name="Client_ClassWithConstructor_setsOutValue(True)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor.Client_ClassWithConstructor_setsOutValue(True)" methodname="Client_ClassWithConstructor_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor" runstate="Runnable" seed="703103721" result="Passed" start-time="2021-03-06 06:27:10Z" end-time="2021-03-06 06:27:10Z" duration="0.002046" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="5458" name="Client_ClassWithConstructor_setsOutValue(False)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor.Client_ClassWithConstructor_setsOutValue(False)" methodname="Client_ClassWithConstructor_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor" runstate="Runnable" seed="624550298" result="Passed" start-time="2021-03-06 06:27:10Z" end-time="2021-03-06 06:27:10Z" duration="0.003723" asserts="0">
                    <properties />
                    <output><![CDATA[[Client] function 'System.Void Mirror.Tests.Generated.Attributes.AttributeBehaviour_ClassWithNoConstructor::Client_ClassWithConstructor_out_Function(Mirror.Tests.Generators.ClassWithConstructor&)' called when client was not active
]]></output>
                  </test-case>
                </test-suite>
                <test-suite type="ParameterizedMethod" id="5450" name="Client_ClassWithNoConstructor_returnsValue" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor.Client_ClassWithNoConstructor_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor" runstate="Runnable" testcasecount="2" result="Passed" start-time="2021-03-06 06:27:10Z" end-time="2021-03-06 06:27:10Z" duration="0.023359" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="5448" name="Client_ClassWithNoConstructor_returnsValue(True)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor.Client_ClassWithNoConstructor_returnsValue(True)" methodname="Client_ClassWithNoConstructor_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor" runstate="Runnable" seed="1343945136" result="Passed" start-time="2021-03-06 06:27:10Z" end-time="2021-03-06 06:27:10Z" duration="0.002419" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="5449" name="Client_ClassWithNoConstructor_returnsValue(False)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor.Client_ClassWithNoConstructor_returnsValue(False)" methodname="Client_ClassWithNoConstructor_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor" runstate="Runnable" seed="532020277" result="Passed" start-time="2021-03-06 06:27:10Z" end-time="2021-03-06 06:27:10Z" duration="0.003623" asserts="0">
                    <properties />
                    <output><![CDATA[[Client] function 'Mirror.Tests.Generators.ClassWithNoConstructor Mirror.Tests.Generated.Attributes.AttributeBehaviour_ClassWithNoConstructor::Client_ClassWithNoConstructor_Function()' called when client was not active
]]></output>
                  </test-case>
                </test-suite>
                <test-suite type="ParameterizedMethod" id="5453" name="Client_ClassWithNoConstructor_setsOutValue" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor.Client_ClassWithNoConstructor_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor" runstate="Runnable" testcasecount="2" result="Passed" start-time="2021-03-06 06:27:10Z" end-time="2021-03-06 06:27:10Z" duration="0.019440" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="5451" name="Client_ClassWithNoConstructor_setsOutValue(True)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor.Client_ClassWithNoConstructor_setsOutValue(True)" methodname="Client_ClassWithNoConstructor_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor" runstate="Runnable" seed="1583834668" result="Passed" start-time="2021-03-06 06:27:10Z" end-time="2021-03-06 06:27:10Z" duration="0.002041" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="5452" name="Client_ClassWithNoConstructor_setsOutValue(False)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor.Client_ClassWithNoConstructor_setsOutValue(False)" methodname="Client_ClassWithNoConstructor_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor" runstate="Runnable" seed="698884103" result="Passed" start-time="2021-03-06 06:27:10Z" end-time="2021-03-06 06:27:10Z" duration="0.003826" asserts="0">
                    <properties />
                    <output><![CDATA[[Client] function 'System.Void Mirror.Tests.Generated.Attributes.AttributeBehaviour_ClassWithNoConstructor::Client_ClassWithNoConstructor_out_Function(Mirror.Tests.Generators.ClassWithNoConstructor&)' called when client was not active
]]></output>
                  </test-case>
                </test-suite>
                <test-suite type="ParameterizedMethod" id="5402" name="Client_double_returnsValue" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor.Client_double_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor" runstate="Runnable" testcasecount="2" result="Passed" start-time="2021-03-06 06:27:10Z" end-time="2021-03-06 06:27:10Z" duration="0.023528" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="5400" name="Client_double_returnsValue(True)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor.Client_double_returnsValue(True)" methodname="Client_double_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor" runstate="Runnable" seed="12156717" result="Passed" start-time="2021-03-06 06:27:10Z" end-time="2021-03-06 06:27:10Z" duration="0.002219" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="5401" name="Client_double_returnsValue(False)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor.Client_double_returnsValue(False)" methodname="Client_double_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor" runstate="Runnable" seed="216707723" result="Passed" start-time="2021-03-06 06:27:10Z" end-time="2021-03-06 06:27:10Z" duration="0.003644" asserts="0">
                    <properties />
                    <output><![CDATA[[Client] function 'System.Double Mirror.Tests.Generated.Attributes.AttributeBehaviour_ClassWithNoConstructor::Client_double_Function()' called when client was not active
]]></output>
                  </test-case>
                </test-suite>
                <test-suite type="ParameterizedMethod" id="5405" name="Client_double_setsOutValue" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor.Client_double_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor" runstate="Runnable" testcasecount="2" result="Passed" start-time="2021-03-06 06:27:10Z" end-time="2021-03-06 06:27:10Z" duration="0.023399" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="5403" name="Client_double_setsOutValue(True)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor.Client_double_setsOutValue(True)" methodname="Client_double_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor" runstate="Runnable" seed="815055749" result="Passed" start-time="2021-03-06 06:27:10Z" end-time="2021-03-06 06:27:10Z" duration="0.002264" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="5404" name="Client_double_setsOutValue(False)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor.Client_double_setsOutValue(False)" methodname="Client_double_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor" runstate="Runnable" seed="1041005787" result="Passed" start-time="2021-03-06 06:27:10Z" end-time="2021-03-06 06:27:10Z" duration="0.004182" asserts="0">
                    <properties />
                    <output><![CDATA[[Client] function 'System.Void Mirror.Tests.Generated.Attributes.AttributeBehaviour_ClassWithNoConstructor::Client_double_out_Function(System.Double&)' called when client was not active
]]></output>
                  </test-case>
                </test-suite>
                <test-suite type="ParameterizedMethod" id="5396" name="Client_float_returnsValue" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor.Client_float_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor" runstate="Runnable" testcasecount="2" result="Passed" start-time="2021-03-06 06:27:10Z" end-time="2021-03-06 06:27:11Z" duration="0.019935" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="5394" name="Client_float_returnsValue(True)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor.Client_float_returnsValue(True)" methodname="Client_float_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor" runstate="Runnable" seed="1972695707" result="Passed" start-time="2021-03-06 06:27:11Z" end-time="2021-03-06 06:27:11Z" duration="0.002096" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="5395" name="Client_float_returnsValue(False)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor.Client_float_returnsValue(False)" methodname="Client_float_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor" runstate="Runnable" seed="2089273552" result="Passed" start-time="2021-03-06 06:27:11Z" end-time="2021-03-06 06:27:11Z" duration="0.003689" asserts="0">
                    <properties />
                    <output><![CDATA[[Client] function 'System.Single Mirror.Tests.Generated.Attributes.AttributeBehaviour_ClassWithNoConstructor::Client_float_Function()' called when client was not active
]]></output>
                  </test-case>
                </test-suite>
                <test-suite type="ParameterizedMethod" id="5399" name="Client_float_setsOutValue" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor.Client_float_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor" runstate="Runnable" testcasecount="2" result="Passed" start-time="2021-03-06 06:27:11Z" end-time="2021-03-06 06:27:11Z" duration="0.022580" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="5397" name="Client_float_setsOutValue(True)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor.Client_float_setsOutValue(True)" methodname="Client_float_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor" runstate="Runnable" seed="947541458" result="Passed" start-time="2021-03-06 06:27:11Z" end-time="2021-03-06 06:27:11Z" duration="0.002466" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="5398" name="Client_float_setsOutValue(False)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor.Client_float_setsOutValue(False)" methodname="Client_float_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor" runstate="Runnable" seed="462948298" result="Passed" start-time="2021-03-06 06:27:11Z" end-time="2021-03-06 06:27:11Z" duration="0.003808" asserts="0">
                    <properties />
                    <output><![CDATA[[Client] function 'System.Void Mirror.Tests.Generated.Attributes.AttributeBehaviour_ClassWithNoConstructor::Client_float_out_Function(System.Single&)' called when client was not active
]]></output>
                  </test-case>
                </test-suite>
                <test-suite type="ParameterizedMethod" id="5426" name="Client_int_returnsValue" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor.Client_int_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor" runstate="Runnable" testcasecount="2" result="Passed" start-time="2021-03-06 06:27:11Z" end-time="2021-03-06 06:27:11Z" duration="0.022207" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="5424" name="Client_int_returnsValue(True)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor.Client_int_returnsValue(True)" methodname="Client_int_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor" runstate="Runnable" seed="409262265" result="Passed" start-time="2021-03-06 06:27:11Z" end-time="2021-03-06 06:27:11Z" duration="0.002287" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="5425" name="Client_int_returnsValue(False)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor.Client_int_returnsValue(False)" methodname="Client_int_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor" runstate="Runnable" seed="163299904" result="Passed" start-time="2021-03-06 06:27:11Z" end-time="2021-03-06 06:27:11Z" duration="0.004145" asserts="0">
                    <properties />
                    <output><![CDATA[[Client] function 'System.Int32 Mirror.Tests.Generated.Attributes.AttributeBehaviour_ClassWithNoConstructor::Client_int_Function()' called when client was not active
]]></output>
                  </test-case>
                </test-suite>
                <test-suite type="ParameterizedMethod" id="5429" name="Client_int_setsOutValue" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor.Client_int_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor" runstate="Runnable" testcasecount="2" result="Passed" start-time="2021-03-06 06:27:11Z" end-time="2021-03-06 06:27:11Z" duration="0.020144" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="5427" name="Client_int_setsOutValue(True)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor.Client_int_setsOutValue(True)" methodname="Client_int_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor" runstate="Runnable" seed="1167534797" result="Passed" start-time="2021-03-06 06:27:11Z" end-time="2021-03-06 06:27:11Z" duration="0.002297" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="5428" name="Client_int_setsOutValue(False)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor.Client_int_setsOutValue(False)" methodname="Client_int_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor" runstate="Runnable" seed="1568625105" result="Passed" start-time="2021-03-06 06:27:11Z" end-time="2021-03-06 06:27:11Z" duration="0.003543" asserts="0">
                    <properties />
                    <output><![CDATA[[Client] function 'System.Void Mirror.Tests.Generated.Attributes.AttributeBehaviour_ClassWithNoConstructor::Client_int_out_Function(System.Int32&)' called when client was not active
]]></output>
                  </test-case>
                </test-suite>
                <test-suite type="ParameterizedMethod" id="5432" name="Client_long_returnsValue" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor.Client_long_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor" runstate="Runnable" testcasecount="2" result="Passed" start-time="2021-03-06 06:27:11Z" end-time="2021-03-06 06:27:11Z" duration="0.021865" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="5430" name="Client_long_returnsValue(True)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor.Client_long_returnsValue(True)" methodname="Client_long_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor" runstate="Runnable" seed="2015049440" result="Passed" start-time="2021-03-06 06:27:11Z" end-time="2021-03-06 06:27:11Z" duration="0.003415" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="5431" name="Client_long_returnsValue(False)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor.Client_long_returnsValue(False)" methodname="Client_long_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor" runstate="Runnable" seed="662795486" result="Passed" start-time="2021-03-06 06:27:11Z" end-time="2021-03-06 06:27:11Z" duration="0.003674" asserts="0">
                    <properties />
                    <output><![CDATA[[Client] function 'System.Int64 Mirror.Tests.Generated.Attributes.AttributeBehaviour_ClassWithNoConstructor::Client_long_Function()' called when client was not active
]]></output>
                  </test-case>
                </test-suite>
                <test-suite type="ParameterizedMethod" id="5435" name="Client_long_setsOutValue" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor.Client_long_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor" runstate="Runnable" testcasecount="2" result="Passed" start-time="2021-03-06 06:27:11Z" end-time="2021-03-06 06:27:11Z" duration="0.018904" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="5433" name="Client_long_setsOutValue(True)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor.Client_long_setsOutValue(True)" methodname="Client_long_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor" runstate="Runnable" seed="1728402989" result="Passed" start-time="2021-03-06 06:27:11Z" end-time="2021-03-06 06:27:11Z" duration="0.002399" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="5434" name="Client_long_setsOutValue(False)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor.Client_long_setsOutValue(False)" methodname="Client_long_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor" runstate="Runnable" seed="542204812" result="Passed" start-time="2021-03-06 06:27:11Z" end-time="2021-03-06 06:27:11Z" duration="0.003308" asserts="0">
                    <properties />
                    <output><![CDATA[[Client] function 'System.Void Mirror.Tests.Generated.Attributes.AttributeBehaviour_ClassWithNoConstructor::Client_long_out_Function(System.Int64&)' called when client was not active
]]></output>
                  </test-case>
                </test-suite>
                <test-suite type="ParameterizedMethod" id="5438" name="Client_ulong_returnsValue" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor.Client_ulong_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor" runstate="Runnable" testcasecount="2" result="Passed" start-time="2021-03-06 06:27:11Z" end-time="2021-03-06 06:27:11Z" duration="0.019364" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="5436" name="Client_ulong_returnsValue(True)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor.Client_ulong_returnsValue(True)" methodname="Client_ulong_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor" runstate="Runnable" seed="1237405261" result="Passed" start-time="2021-03-06 06:27:11Z" end-time="2021-03-06 06:27:11Z" duration="0.002703" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="5437" name="Client_ulong_returnsValue(False)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor.Client_ulong_returnsValue(False)" methodname="Client_ulong_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor" runstate="Runnable" seed="334112269" result="Passed" start-time="2021-03-06 06:27:11Z" end-time="2021-03-06 06:27:11Z" duration="0.003926" asserts="0">
                    <properties />
                    <output><![CDATA[[Client] function 'System.UInt64 Mirror.Tests.Generated.Attributes.AttributeBehaviour_ClassWithNoConstructor::Client_ulong_Function()' called when client was not active
]]></output>
                  </test-case>
                </test-suite>
                <test-suite type="ParameterizedMethod" id="5441" name="Client_ulong_setsOutValue" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor.Client_ulong_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor" runstate="Runnable" testcasecount="2" result="Passed" start-time="2021-03-06 06:27:11Z" end-time="2021-03-06 06:27:11Z" duration="0.019482" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="5439" name="Client_ulong_setsOutValue(True)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor.Client_ulong_setsOutValue(True)" methodname="Client_ulong_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor" runstate="Runnable" seed="1410364621" result="Passed" start-time="2021-03-06 06:27:11Z" end-time="2021-03-06 06:27:11Z" duration="0.002017" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="5440" name="Client_ulong_setsOutValue(False)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor.Client_ulong_setsOutValue(False)" methodname="Client_ulong_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor" runstate="Runnable" seed="343910243" result="Passed" start-time="2021-03-06 06:27:11Z" end-time="2021-03-06 06:27:11Z" duration="0.003431" asserts="0">
                    <properties />
                    <output><![CDATA[[Client] function 'System.Void Mirror.Tests.Generated.Attributes.AttributeBehaviour_ClassWithNoConstructor::Client_ulong_out_Function(System.UInt64&)' called when client was not active
]]></output>
                  </test-case>
                </test-suite>
                <test-suite type="ParameterizedMethod" id="5444" name="Client_Vector3_returnsValue" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor.Client_Vector3_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor" runstate="Runnable" testcasecount="2" result="Passed" start-time="2021-03-06 06:27:11Z" end-time="2021-03-06 06:27:11Z" duration="0.026859" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="5442" name="Client_Vector3_returnsValue(True)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor.Client_Vector3_returnsValue(True)" methodname="Client_Vector3_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor" runstate="Runnable" seed="1600289103" result="Passed" start-time="2021-03-06 06:27:11Z" end-time="2021-03-06 06:27:11Z" duration="0.002343" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="5443" name="Client_Vector3_returnsValue(False)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor.Client_Vector3_returnsValue(False)" methodname="Client_Vector3_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor" runstate="Runnable" seed="677625612" result="Passed" start-time="2021-03-06 06:27:11Z" end-time="2021-03-06 06:27:11Z" duration="0.004124" asserts="0">
                    <properties />
                    <output><![CDATA[[Client] function 'UnityEngine.Vector3 Mirror.Tests.Generated.Attributes.AttributeBehaviour_ClassWithNoConstructor::Client_Vector3_Function()' called when client was not active
]]></output>
                  </test-case>
                </test-suite>
                <test-suite type="ParameterizedMethod" id="5447" name="Client_Vector3_setsOutValue" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor.Client_Vector3_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor" runstate="Runnable" testcasecount="2" result="Passed" start-time="2021-03-06 06:27:11Z" end-time="2021-03-06 06:27:11Z" duration="0.020766" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="5445" name="Client_Vector3_setsOutValue(True)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor.Client_Vector3_setsOutValue(True)" methodname="Client_Vector3_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor" runstate="Runnable" seed="2081495498" result="Passed" start-time="2021-03-06 06:27:11Z" end-time="2021-03-06 06:27:11Z" duration="0.002216" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="5446" name="Client_Vector3_setsOutValue(False)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor.Client_Vector3_setsOutValue(False)" methodname="Client_Vector3_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor" runstate="Runnable" seed="1873622361" result="Passed" start-time="2021-03-06 06:27:11Z" end-time="2021-03-06 06:27:11Z" duration="0.004580" asserts="0">
                    <properties />
                    <output><![CDATA[[Client] function 'System.Void Mirror.Tests.Generated.Attributes.AttributeBehaviour_ClassWithNoConstructor::Client_Vector3_out_Function(UnityEngine.Vector3&)' called when client was not active
]]></output>
                  </test-case>
                </test-suite>
                <test-suite type="ParameterizedMethod" id="5540" name="ClientCallback_bool_returnsValue" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor.ClientCallback_bool_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor" runstate="Runnable" testcasecount="2" result="Passed" start-time="2021-03-06 06:27:11Z" end-time="2021-03-06 06:27:11Z" duration="0.017792" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="5538" name="ClientCallback_bool_returnsValue(True)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor.ClientCallback_bool_returnsValue(True)" methodname="ClientCallback_bool_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor" runstate="Runnable" seed="1484087910" result="Passed" start-time="2021-03-06 06:27:11Z" end-time="2021-03-06 06:27:11Z" duration="0.002074" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="5539" name="ClientCallback_bool_returnsValue(False)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor.ClientCallback_bool_returnsValue(False)" methodname="ClientCallback_bool_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor" runstate="Runnable" seed="1957109822" result="Passed" start-time="2021-03-06 06:27:11Z" end-time="2021-03-06 06:27:11Z" duration="0.001580" asserts="0">
                    <properties />
                  </test-case>
                </test-suite>
                <test-suite type="ParameterizedMethod" id="5543" name="ClientCallback_bool_setsOutValue" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor.ClientCallback_bool_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor" runstate="Runnable" testcasecount="2" result="Passed" start-time="2021-03-06 06:27:11Z" end-time="2021-03-06 06:27:11Z" duration="0.018825" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="5541" name="ClientCallback_bool_setsOutValue(True)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor.ClientCallback_bool_setsOutValue(True)" methodname="ClientCallback_bool_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor" runstate="Runnable" seed="1648038773" result="Passed" start-time="2021-03-06 06:27:11Z" end-time="2021-03-06 06:27:11Z" duration="0.002117" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="5542" name="ClientCallback_bool_setsOutValue(False)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor.ClientCallback_bool_setsOutValue(False)" methodname="ClientCallback_bool_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor" runstate="Runnable" seed="1521952289" result="Passed" start-time="2021-03-06 06:27:11Z" end-time="2021-03-06 06:27:11Z" duration="0.002348" asserts="0">
                    <properties />
                  </test-case>
                </test-suite>
                <test-suite type="ParameterizedMethod" id="5552" name="ClientCallback_byte_returnsValue" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor.ClientCallback_byte_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor" runstate="Runnable" testcasecount="2" result="Passed" start-time="2021-03-06 06:27:11Z" end-time="2021-03-06 06:27:11Z" duration="0.015972" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="5550" name="ClientCallback_byte_returnsValue(True)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor.ClientCallback_byte_returnsValue(True)" methodname="ClientCallback_byte_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor" runstate="Runnable" seed="577844587" result="Passed" start-time="2021-03-06 06:27:11Z" end-time="2021-03-06 06:27:11Z" duration="0.002315" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="5551" name="ClientCallback_byte_returnsValue(False)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor.ClientCallback_byte_returnsValue(False)" methodname="ClientCallback_byte_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor" runstate="Runnable" seed="1221610856" result="Passed" start-time="2021-03-06 06:27:11Z" end-time="2021-03-06 06:27:11Z" duration="0.001625" asserts="0">
                    <properties />
                  </test-case>
                </test-suite>
                <test-suite type="ParameterizedMethod" id="5555" name="ClientCallback_byte_setsOutValue" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor.ClientCallback_byte_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor" runstate="Runnable" testcasecount="2" result="Passed" start-time="2021-03-06 06:27:11Z" end-time="2021-03-06 06:27:11Z" duration="0.019521" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="5553" name="ClientCallback_byte_setsOutValue(True)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor.ClientCallback_byte_setsOutValue(True)" methodname="ClientCallback_byte_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor" runstate="Runnable" seed="371499108" result="Passed" start-time="2021-03-06 06:27:11Z" end-time="2021-03-06 06:27:11Z" duration="0.002299" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="5554" name="ClientCallback_byte_setsOutValue(False)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor.ClientCallback_byte_setsOutValue(False)" methodname="ClientCallback_byte_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor" runstate="Runnable" seed="654256025" result="Passed" start-time="2021-03-06 06:27:11Z" end-time="2021-03-06 06:27:11Z" duration="0.001824" asserts="0">
                    <properties />
                  </test-case>
                </test-suite>
                <test-suite type="ParameterizedMethod" id="5546" name="ClientCallback_char_returnsValue" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor.ClientCallback_char_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor" runstate="Runnable" testcasecount="2" result="Passed" start-time="2021-03-06 06:27:11Z" end-time="2021-03-06 06:27:11Z" duration="0.016108" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="5544" name="ClientCallback_char_returnsValue(True)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor.ClientCallback_char_returnsValue(True)" methodname="ClientCallback_char_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor" runstate="Runnable" seed="853203202" result="Passed" start-time="2021-03-06 06:27:11Z" end-time="2021-03-06 06:27:11Z" duration="0.002319" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="5545" name="ClientCallback_char_returnsValue(False)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor.ClientCallback_char_returnsValue(False)" methodname="ClientCallback_char_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor" runstate="Runnable" seed="1526714665" result="Passed" start-time="2021-03-06 06:27:11Z" end-time="2021-03-06 06:27:11Z" duration="0.001884" asserts="0">
                    <properties />
                  </test-case>
                </test-suite>
                <test-suite type="ParameterizedMethod" id="5549" name="ClientCallback_char_setsOutValue" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor.ClientCallback_char_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor" runstate="Runnable" testcasecount="2" result="Passed" start-time="2021-03-06 06:27:11Z" end-time="2021-03-06 06:27:11Z" duration="0.016956" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="5547" name="ClientCallback_char_setsOutValue(True)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor.ClientCallback_char_setsOutValue(True)" methodname="ClientCallback_char_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor" runstate="Runnable" seed="1189751893" result="Passed" start-time="2021-03-06 06:27:11Z" end-time="2021-03-06 06:27:11Z" duration="0.002028" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="5548" name="ClientCallback_char_setsOutValue(False)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor.ClientCallback_char_setsOutValue(False)" methodname="ClientCallback_char_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor" runstate="Runnable" seed="1567174757" result="Passed" start-time="2021-03-06 06:27:11Z" end-time="2021-03-06 06:27:11Z" duration="0.001517" asserts="0">
                    <properties />
                  </test-case>
                </test-suite>
                <test-suite type="ParameterizedMethod" id="5588" name="ClientCallback_ClassWithConstructor_returnsValue" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor.ClientCallback_ClassWithConstructor_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor" runstate="Runnable" testcasecount="2" result="Passed" start-time="2021-03-06 06:27:11Z" end-time="2021-03-06 06:27:11Z" duration="0.017078" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="5586" name="ClientCallback_ClassWithConstructor_returnsValue(True)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor.ClientCallback_ClassWithConstructor_returnsValue(True)" methodname="ClientCallback_ClassWithConstructor_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor" runstate="Runnable" seed="1998564577" result="Passed" start-time="2021-03-06 06:27:11Z" end-time="2021-03-06 06:27:11Z" duration="0.002108" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="5587" name="ClientCallback_ClassWithConstructor_returnsValue(False)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor.ClientCallback_ClassWithConstructor_returnsValue(False)" methodname="ClientCallback_ClassWithConstructor_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor" runstate="Runnable" seed="1659202033" result="Passed" start-time="2021-03-06 06:27:11Z" end-time="2021-03-06 06:27:11Z" duration="0.001919" asserts="0">
                    <properties />
                  </test-case>
                </test-suite>
                <test-suite type="ParameterizedMethod" id="5591" name="ClientCallback_ClassWithConstructor_setsOutValue" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor.ClientCallback_ClassWithConstructor_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor" runstate="Runnable" testcasecount="2" result="Passed" start-time="2021-03-06 06:27:11Z" end-time="2021-03-06 06:27:11Z" duration="0.017985" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="5589" name="ClientCallback_ClassWithConstructor_setsOutValue(True)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor.ClientCallback_ClassWithConstructor_setsOutValue(True)" methodname="ClientCallback_ClassWithConstructor_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor" runstate="Runnable" seed="1716609002" result="Passed" start-time="2021-03-06 06:27:11Z" end-time="2021-03-06 06:27:11Z" duration="0.002290" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="5590" name="ClientCallback_ClassWithConstructor_setsOutValue(False)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor.ClientCallback_ClassWithConstructor_setsOutValue(False)" methodname="ClientCallback_ClassWithConstructor_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor" runstate="Runnable" seed="50521314" result="Passed" start-time="2021-03-06 06:27:11Z" end-time="2021-03-06 06:27:11Z" duration="0.001671" asserts="0">
                    <properties />
                  </test-case>
                </test-suite>
                <test-suite type="ParameterizedMethod" id="5582" name="ClientCallback_ClassWithNoConstructor_returnsValue" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor.ClientCallback_ClassWithNoConstructor_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor" runstate="Runnable" testcasecount="2" result="Passed" start-time="2021-03-06 06:27:11Z" end-time="2021-03-06 06:27:11Z" duration="0.020148" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="5580" name="ClientCallback_ClassWithNoConstructor_returnsValue(True)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor.ClientCallback_ClassWithNoConstructor_returnsValue(True)" methodname="ClientCallback_ClassWithNoConstructor_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor" runstate="Runnable" seed="1008103272" result="Passed" start-time="2021-03-06 06:27:11Z" end-time="2021-03-06 06:27:11Z" duration="0.002285" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="5581" name="ClientCallback_ClassWithNoConstructor_returnsValue(False)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor.ClientCallback_ClassWithNoConstructor_returnsValue(False)" methodname="ClientCallback_ClassWithNoConstructor_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor" runstate="Runnable" seed="1189503658" result="Passed" start-time="2021-03-06 06:27:11Z" end-time="2021-03-06 06:27:11Z" duration="0.001677" asserts="0">
                    <properties />
                  </test-case>
                </test-suite>
                <test-suite type="ParameterizedMethod" id="5585" name="ClientCallback_ClassWithNoConstructor_setsOutValue" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor.ClientCallback_ClassWithNoConstructor_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor" runstate="Runnable" testcasecount="2" result="Passed" start-time="2021-03-06 06:27:11Z" end-time="2021-03-06 06:27:11Z" duration="0.016914" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="5583" name="ClientCallback_ClassWithNoConstructor_setsOutValue(True)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor.ClientCallback_ClassWithNoConstructor_setsOutValue(True)" methodname="ClientCallback_ClassWithNoConstructor_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor" runstate="Runnable" seed="882120907" result="Passed" start-time="2021-03-06 06:27:11Z" end-time="2021-03-06 06:27:11Z" duration="0.001989" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="5584" name="ClientCallback_ClassWithNoConstructor_setsOutValue(False)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor.ClientCallback_ClassWithNoConstructor_setsOutValue(False)" methodname="ClientCallback_ClassWithNoConstructor_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor" runstate="Runnable" seed="1445369998" result="Passed" start-time="2021-03-06 06:27:11Z" end-time="2021-03-06 06:27:11Z" duration="0.001573" asserts="0">
                    <properties />
                  </test-case>
                </test-suite>
                <test-suite type="ParameterizedMethod" id="5534" name="ClientCallback_double_returnsValue" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor.ClientCallback_double_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor" runstate="Runnable" testcasecount="2" result="Passed" start-time="2021-03-06 06:27:11Z" end-time="2021-03-06 06:27:11Z" duration="0.017366" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="5532" name="ClientCallback_double_returnsValue(True)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor.ClientCallback_double_returnsValue(True)" methodname="ClientCallback_double_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor" runstate="Runnable" seed="414484731" result="Passed" start-time="2021-03-06 06:27:11Z" end-time="2021-03-06 06:27:11Z" duration="0.002093" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="5533" name="ClientCallback_double_returnsValue(False)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor.ClientCallback_double_returnsValue(False)" methodname="ClientCallback_double_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor" runstate="Runnable" seed="547840239" result="Passed" start-time="2021-03-06 06:27:11Z" end-time="2021-03-06 06:27:11Z" duration="0.001770" asserts="0">
                    <properties />
                  </test-case>
                </test-suite>
                <test-suite type="ParameterizedMethod" id="5537" name="ClientCallback_double_setsOutValue" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor.ClientCallback_double_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor" runstate="Runnable" testcasecount="2" result="Passed" start-time="2021-03-06 06:27:11Z" end-time="2021-03-06 06:27:11Z" duration="0.017725" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="5535" name="ClientCallback_double_setsOutValue(True)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor.ClientCallback_double_setsOutValue(True)" methodname="ClientCallback_double_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor" runstate="Runnable" seed="1733641983" result="Passed" start-time="2021-03-06 06:27:11Z" end-time="2021-03-06 06:27:11Z" duration="0.002232" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="5536" name="ClientCallback_double_setsOutValue(False)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor.ClientCallback_double_setsOutValue(False)" methodname="ClientCallback_double_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor" runstate="Runnable" seed="1521925047" result="Passed" start-time="2021-03-06 06:27:11Z" end-time="2021-03-06 06:27:11Z" duration="0.001551" asserts="0">
                    <properties />
                  </test-case>
                </test-suite>
                <test-suite type="ParameterizedMethod" id="5528" name="ClientCallback_float_returnsValue" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor.ClientCallback_float_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor" runstate="Runnable" testcasecount="2" result="Passed" start-time="2021-03-06 06:27:11Z" end-time="2021-03-06 06:27:11Z" duration="0.017547" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="5526" name="ClientCallback_float_returnsValue(True)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor.ClientCallback_float_returnsValue(True)" methodname="ClientCallback_float_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor" runstate="Runnable" seed="1718132843" result="Passed" start-time="2021-03-06 06:27:11Z" end-time="2021-03-06 06:27:11Z" duration="0.002072" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="5527" name="ClientCallback_float_returnsValue(False)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor.ClientCallback_float_returnsValue(False)" methodname="ClientCallback_float_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor" runstate="Runnable" seed="1994757110" result="Passed" start-time="2021-03-06 06:27:11Z" end-time="2021-03-06 06:27:11Z" duration="0.001736" asserts="0">
                    <properties />
                  </test-case>
                </test-suite>
                <test-suite type="ParameterizedMethod" id="5531" name="ClientCallback_float_setsOutValue" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor.ClientCallback_float_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor" runstate="Runnable" testcasecount="2" result="Passed" start-time="2021-03-06 06:27:11Z" end-time="2021-03-06 06:27:11Z" duration="0.017306" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="5529" name="ClientCallback_float_setsOutValue(True)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor.ClientCallback_float_setsOutValue(True)" methodname="ClientCallback_float_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor" runstate="Runnable" seed="1252629747" result="Passed" start-time="2021-03-06 06:27:11Z" end-time="2021-03-06 06:27:11Z" duration="0.002786" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="5530" name="ClientCallback_float_setsOutValue(False)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor.ClientCallback_float_setsOutValue(False)" methodname="ClientCallback_float_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor" runstate="Runnable" seed="1032776437" result="Passed" start-time="2021-03-06 06:27:11Z" end-time="2021-03-06 06:27:11Z" duration="0.001584" asserts="0">
                    <properties />
                  </test-case>
                </test-suite>
                <test-suite type="ParameterizedMethod" id="5558" name="ClientCallback_int_returnsValue" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor.ClientCallback_int_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor" runstate="Runnable" testcasecount="2" result="Passed" start-time="2021-03-06 06:27:11Z" end-time="2021-03-06 06:27:11Z" duration="0.017786" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="5556" name="ClientCallback_int_returnsValue(True)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor.ClientCallback_int_returnsValue(True)" methodname="ClientCallback_int_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor" runstate="Runnable" seed="1597758610" result="Passed" start-time="2021-03-06 06:27:11Z" end-time="2021-03-06 06:27:11Z" duration="0.002196" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="5557" name="ClientCallback_int_returnsValue(False)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor.ClientCallback_int_returnsValue(False)" methodname="ClientCallback_int_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor" runstate="Runnable" seed="119042963" result="Passed" start-time="2021-03-06 06:27:11Z" end-time="2021-03-06 06:27:11Z" duration="0.001704" asserts="0">
                    <properties />
                  </test-case>
                </test-suite>
                <test-suite type="ParameterizedMethod" id="5561" name="ClientCallback_int_setsOutValue" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor.ClientCallback_int_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor" runstate="Runnable" testcasecount="2" result="Passed" start-time="2021-03-06 06:27:11Z" end-time="2021-03-06 06:27:11Z" duration="0.016094" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="5559" name="ClientCallback_int_setsOutValue(True)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor.ClientCallback_int_setsOutValue(True)" methodname="ClientCallback_int_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor" runstate="Runnable" seed="1070996778" result="Passed" start-time="2021-03-06 06:27:11Z" end-time="2021-03-06 06:27:11Z" duration="0.002053" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="5560" name="ClientCallback_int_setsOutValue(False)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor.ClientCallback_int_setsOutValue(False)" methodname="ClientCallback_int_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor" runstate="Runnable" seed="1417008375" result="Passed" start-time="2021-03-06 06:27:11Z" end-time="2021-03-06 06:27:11Z" duration="0.001923" asserts="0">
                    <properties />
                  </test-case>
                </test-suite>
                <test-suite type="ParameterizedMethod" id="5564" name="ClientCallback_long_returnsValue" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor.ClientCallback_long_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor" runstate="Runnable" testcasecount="2" result="Passed" start-time="2021-03-06 06:27:11Z" end-time="2021-03-06 06:27:11Z" duration="0.018098" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="5562" name="ClientCallback_long_returnsValue(True)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor.ClientCallback_long_returnsValue(True)" methodname="ClientCallback_long_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor" runstate="Runnable" seed="1922894964" result="Passed" start-time="2021-03-06 06:27:11Z" end-time="2021-03-06 06:27:11Z" duration="0.002025" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="5563" name="ClientCallback_long_returnsValue(False)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor.ClientCallback_long_returnsValue(False)" methodname="ClientCallback_long_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor" runstate="Runnable" seed="1466821380" result="Passed" start-time="2021-03-06 06:27:11Z" end-time="2021-03-06 06:27:11Z" duration="0.001579" asserts="0">
                    <properties />
                  </test-case>
                </test-suite>
                <test-suite type="ParameterizedMethod" id="5567" name="ClientCallback_long_setsOutValue" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor.ClientCallback_long_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor" runstate="Runnable" testcasecount="2" result="Passed" start-time="2021-03-06 06:27:11Z" end-time="2021-03-06 06:27:11Z" duration="0.019792" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="5565" name="ClientCallback_long_setsOutValue(True)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor.ClientCallback_long_setsOutValue(True)" methodname="ClientCallback_long_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor" runstate="Runnable" seed="1434214463" result="Passed" start-time="2021-03-06 06:27:11Z" end-time="2021-03-06 06:27:11Z" duration="0.002763" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="5566" name="ClientCallback_long_setsOutValue(False)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor.ClientCallback_long_setsOutValue(False)" methodname="ClientCallback_long_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor" runstate="Runnable" seed="1142675823" result="Passed" start-time="2021-03-06 06:27:11Z" end-time="2021-03-06 06:27:11Z" duration="0.001571" asserts="0">
                    <properties />
                  </test-case>
                </test-suite>
                <test-suite type="ParameterizedMethod" id="5570" name="ClientCallback_ulong_returnsValue" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor.ClientCallback_ulong_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor" runstate="Runnable" testcasecount="2" result="Passed" start-time="2021-03-06 06:27:11Z" end-time="2021-03-06 06:27:11Z" duration="0.019250" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="5568" name="ClientCallback_ulong_returnsValue(True)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor.ClientCallback_ulong_returnsValue(True)" methodname="ClientCallback_ulong_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor" runstate="Runnable" seed="230543778" result="Passed" start-time="2021-03-06 06:27:11Z" end-time="2021-03-06 06:27:11Z" duration="0.002046" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="5569" name="ClientCallback_ulong_returnsValue(False)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor.ClientCallback_ulong_returnsValue(False)" methodname="ClientCallback_ulong_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor" runstate="Runnable" seed="502967995" result="Passed" start-time="2021-03-06 06:27:11Z" end-time="2021-03-06 06:27:11Z" duration="0.001787" asserts="0">
                    <properties />
                  </test-case>
                </test-suite>
                <test-suite type="ParameterizedMethod" id="5573" name="ClientCallback_ulong_setsOutValue" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor.ClientCallback_ulong_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor" runstate="Runnable" testcasecount="2" result="Passed" start-time="2021-03-06 06:27:11Z" end-time="2021-03-06 06:27:11Z" duration="0.016494" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="5571" name="ClientCallback_ulong_setsOutValue(True)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor.ClientCallback_ulong_setsOutValue(True)" methodname="ClientCallback_ulong_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor" runstate="Runnable" seed="1948561535" result="Passed" start-time="2021-03-06 06:27:11Z" end-time="2021-03-06 06:27:11Z" duration="0.002203" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="5572" name="ClientCallback_ulong_setsOutValue(False)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor.ClientCallback_ulong_setsOutValue(False)" methodname="ClientCallback_ulong_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor" runstate="Runnable" seed="1596555661" result="Passed" start-time="2021-03-06 06:27:11Z" end-time="2021-03-06 06:27:11Z" duration="0.001665" asserts="0">
                    <properties />
                  </test-case>
                </test-suite>
                <test-suite type="ParameterizedMethod" id="5576" name="ClientCallback_Vector3_returnsValue" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor.ClientCallback_Vector3_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor" runstate="Runnable" testcasecount="2" result="Passed" start-time="2021-03-06 06:27:11Z" end-time="2021-03-06 06:27:11Z" duration="0.016111" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="5574" name="ClientCallback_Vector3_returnsValue(True)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor.ClientCallback_Vector3_returnsValue(True)" methodname="ClientCallback_Vector3_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor" runstate="Runnable" seed="423264891" result="Passed" start-time="2021-03-06 06:27:11Z" end-time="2021-03-06 06:27:11Z" duration="0.002445" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="5575" name="ClientCallback_Vector3_returnsValue(False)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor.ClientCallback_Vector3_returnsValue(False)" methodname="ClientCallback_Vector3_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor" runstate="Runnable" seed="1499004918" result="Passed" start-time="2021-03-06 06:27:11Z" end-time="2021-03-06 06:27:11Z" duration="0.001691" asserts="0">
                    <properties />
                  </test-case>
                </test-suite>
                <test-suite type="ParameterizedMethod" id="5579" name="ClientCallback_Vector3_setsOutValue" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor.ClientCallback_Vector3_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor" runstate="Runnable" testcasecount="2" result="Passed" start-time="2021-03-06 06:27:11Z" end-time="2021-03-06 06:27:11Z" duration="0.015684" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="5577" name="ClientCallback_Vector3_setsOutValue(True)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor.ClientCallback_Vector3_setsOutValue(True)" methodname="ClientCallback_Vector3_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor" runstate="Runnable" seed="639470038" result="Passed" start-time="2021-03-06 06:27:11Z" end-time="2021-03-06 06:27:11Z" duration="0.002493" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="5578" name="ClientCallback_Vector3_setsOutValue(False)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor.ClientCallback_Vector3_setsOutValue(False)" methodname="ClientCallback_Vector3_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor" runstate="Runnable" seed="2048878122" result="Passed" start-time="2021-03-06 06:27:11Z" end-time="2021-03-06 06:27:11Z" duration="0.001605" asserts="0">
                    <properties />
                  </test-case>
                </test-suite>
                <test-suite type="ParameterizedMethod" id="5474" name="Server_bool_returnsValue" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor.Server_bool_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor" runstate="Runnable" testcasecount="2" result="Passed" start-time="2021-03-06 06:27:11Z" end-time="2021-03-06 06:27:11Z" duration="0.021350" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="5472" name="Server_bool_returnsValue(True)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor.Server_bool_returnsValue(True)" methodname="Server_bool_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor" runstate="Runnable" seed="1563986142" result="Passed" start-time="2021-03-06 06:27:11Z" end-time="2021-03-06 06:27:11Z" duration="0.003151" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="5473" name="Server_bool_returnsValue(False)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor.Server_bool_returnsValue(False)" methodname="Server_bool_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor" runstate="Runnable" seed="273906219" result="Passed" start-time="2021-03-06 06:27:11Z" end-time="2021-03-06 06:27:11Z" duration="0.003753" asserts="0">
                    <properties />
                    <output><![CDATA[[Server] function 'System.Boolean Mirror.Tests.Generated.Attributes.AttributeBehaviour_ClassWithNoConstructor::Server_bool_Function()' called when server was not active
]]></output>
                  </test-case>
                </test-suite>
                <test-suite type="ParameterizedMethod" id="5477" name="Server_bool_setsOutValue" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor.Server_bool_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor" runstate="Runnable" testcasecount="2" result="Passed" start-time="2021-03-06 06:27:11Z" end-time="2021-03-06 06:27:11Z" duration="0.020017" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="5475" name="Server_bool_setsOutValue(True)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor.Server_bool_setsOutValue(True)" methodname="Server_bool_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor" runstate="Runnable" seed="1839326275" result="Passed" start-time="2021-03-06 06:27:11Z" end-time="2021-03-06 06:27:11Z" duration="0.002120" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="5476" name="Server_bool_setsOutValue(False)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor.Server_bool_setsOutValue(False)" methodname="Server_bool_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor" runstate="Runnable" seed="1422779369" result="Passed" start-time="2021-03-06 06:27:11Z" end-time="2021-03-06 06:27:11Z" duration="0.003777" asserts="0">
                    <properties />
                    <output><![CDATA[[Server] function 'System.Void Mirror.Tests.Generated.Attributes.AttributeBehaviour_ClassWithNoConstructor::Server_bool_out_Function(System.Boolean&)' called when server was not active
]]></output>
                  </test-case>
                </test-suite>
                <test-suite type="ParameterizedMethod" id="5486" name="Server_byte_returnsValue" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor.Server_byte_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor" runstate="Runnable" testcasecount="2" result="Passed" start-time="2021-03-06 06:27:11Z" end-time="2021-03-06 06:27:11Z" duration="0.016958" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="5484" name="Server_byte_returnsValue(True)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor.Server_byte_returnsValue(True)" methodname="Server_byte_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor" runstate="Runnable" seed="1858603838" result="Passed" start-time="2021-03-06 06:27:11Z" end-time="2021-03-06 06:27:11Z" duration="0.002091" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="5485" name="Server_byte_returnsValue(False)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor.Server_byte_returnsValue(False)" methodname="Server_byte_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor" runstate="Runnable" seed="1175210153" result="Passed" start-time="2021-03-06 06:27:11Z" end-time="2021-03-06 06:27:11Z" duration="0.003956" asserts="0">
                    <properties />
                    <output><![CDATA[[Server] function 'System.Byte Mirror.Tests.Generated.Attributes.AttributeBehaviour_ClassWithNoConstructor::Server_byte_Function()' called when server was not active
]]></output>
                  </test-case>
                </test-suite>
                <test-suite type="ParameterizedMethod" id="5489" name="Server_byte_setsOutValue" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor.Server_byte_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor" runstate="Runnable" testcasecount="2" result="Passed" start-time="2021-03-06 06:27:11Z" end-time="2021-03-06 06:27:11Z" duration="0.017190" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="5487" name="Server_byte_setsOutValue(True)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor.Server_byte_setsOutValue(True)" methodname="Server_byte_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor" runstate="Runnable" seed="1117858416" result="Passed" start-time="2021-03-06 06:27:11Z" end-time="2021-03-06 06:27:11Z" duration="0.002057" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="5488" name="Server_byte_setsOutValue(False)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor.Server_byte_setsOutValue(False)" methodname="Server_byte_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor" runstate="Runnable" seed="921945391" result="Passed" start-time="2021-03-06 06:27:11Z" end-time="2021-03-06 06:27:11Z" duration="0.003478" asserts="0">
                    <properties />
                    <output><![CDATA[[Server] function 'System.Void Mirror.Tests.Generated.Attributes.AttributeBehaviour_ClassWithNoConstructor::Server_byte_out_Function(System.Byte&)' called when server was not active
]]></output>
                  </test-case>
                </test-suite>
                <test-suite type="ParameterizedMethod" id="5480" name="Server_char_returnsValue" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor.Server_char_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor" runstate="Runnable" testcasecount="2" result="Passed" start-time="2021-03-06 06:27:11Z" end-time="2021-03-06 06:27:11Z" duration="0.018029" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="5478" name="Server_char_returnsValue(True)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor.Server_char_returnsValue(True)" methodname="Server_char_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor" runstate="Runnable" seed="1626739401" result="Passed" start-time="2021-03-06 06:27:11Z" end-time="2021-03-06 06:27:11Z" duration="0.002159" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="5479" name="Server_char_returnsValue(False)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor.Server_char_returnsValue(False)" methodname="Server_char_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor" runstate="Runnable" seed="1509855269" result="Passed" start-time="2021-03-06 06:27:11Z" end-time="2021-03-06 06:27:11Z" duration="0.003455" asserts="0">
                    <properties />
                    <output><![CDATA[[Server] function 'System.Char Mirror.Tests.Generated.Attributes.AttributeBehaviour_ClassWithNoConstructor::Server_char_Function()' called when server was not active
]]></output>
                  </test-case>
                </test-suite>
                <test-suite type="ParameterizedMethod" id="5483" name="Server_char_setsOutValue" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor.Server_char_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor" runstate="Runnable" testcasecount="2" result="Passed" start-time="2021-03-06 06:27:11Z" end-time="2021-03-06 06:27:11Z" duration="0.016465" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="5481" name="Server_char_setsOutValue(True)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor.Server_char_setsOutValue(True)" methodname="Server_char_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor" runstate="Runnable" seed="1842310238" result="Passed" start-time="2021-03-06 06:27:11Z" end-time="2021-03-06 06:27:11Z" duration="0.002411" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="5482" name="Server_char_setsOutValue(False)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor.Server_char_setsOutValue(False)" methodname="Server_char_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor" runstate="Runnable" seed="335347135" result="Passed" start-time="2021-03-06 06:27:11Z" end-time="2021-03-06 06:27:11Z" duration="0.003531" asserts="0">
                    <properties />
                    <output><![CDATA[[Server] function 'System.Void Mirror.Tests.Generated.Attributes.AttributeBehaviour_ClassWithNoConstructor::Server_char_out_Function(System.Char&)' called when server was not active
]]></output>
                  </test-case>
                </test-suite>
                <test-suite type="ParameterizedMethod" id="5522" name="Server_ClassWithConstructor_returnsValue" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor.Server_ClassWithConstructor_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor" runstate="Runnable" testcasecount="2" result="Passed" start-time="2021-03-06 06:27:11Z" end-time="2021-03-06 06:27:11Z" duration="0.022202" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="5520" name="Server_ClassWithConstructor_returnsValue(True)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor.Server_ClassWithConstructor_returnsValue(True)" methodname="Server_ClassWithConstructor_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor" runstate="Runnable" seed="506533462" result="Passed" start-time="2021-03-06 06:27:11Z" end-time="2021-03-06 06:27:11Z" duration="0.002069" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="5521" name="Server_ClassWithConstructor_returnsValue(False)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor.Server_ClassWithConstructor_returnsValue(False)" methodname="Server_ClassWithConstructor_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor" runstate="Runnable" seed="1240994219" result="Passed" start-time="2021-03-06 06:27:11Z" end-time="2021-03-06 06:27:11Z" duration="0.003880" asserts="0">
                    <properties />
                    <output><![CDATA[[Server] function 'Mirror.Tests.Generators.ClassWithConstructor Mirror.Tests.Generated.Attributes.AttributeBehaviour_ClassWithNoConstructor::Server_ClassWithConstructor_Function()' called when server was not active
]]></output>
                  </test-case>
                </test-suite>
                <test-suite type="ParameterizedMethod" id="5525" name="Server_ClassWithConstructor_setsOutValue" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor.Server_ClassWithConstructor_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor" runstate="Runnable" testcasecount="2" result="Passed" start-time="2021-03-06 06:27:11Z" end-time="2021-03-06 06:27:11Z" duration="0.017560" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="5523" name="Server_ClassWithConstructor_setsOutValue(True)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor.Server_ClassWithConstructor_setsOutValue(True)" methodname="Server_ClassWithConstructor_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor" runstate="Runnable" seed="1443275755" result="Passed" start-time="2021-03-06 06:27:11Z" end-time="2021-03-06 06:27:11Z" duration="0.002019" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="5524" name="Server_ClassWithConstructor_setsOutValue(False)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor.Server_ClassWithConstructor_setsOutValue(False)" methodname="Server_ClassWithConstructor_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor" runstate="Runnable" seed="653435001" result="Passed" start-time="2021-03-06 06:27:11Z" end-time="2021-03-06 06:27:11Z" duration="0.003890" asserts="0">
                    <properties />
                    <output><![CDATA[[Server] function 'System.Void Mirror.Tests.Generated.Attributes.AttributeBehaviour_ClassWithNoConstructor::Server_ClassWithConstructor_out_Function(Mirror.Tests.Generators.ClassWithConstructor&)' called when server was not active
]]></output>
                  </test-case>
                </test-suite>
                <test-suite type="ParameterizedMethod" id="5516" name="Server_ClassWithNoConstructor_returnsValue" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor.Server_ClassWithNoConstructor_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor" runstate="Runnable" testcasecount="2" result="Passed" start-time="2021-03-06 06:27:11Z" end-time="2021-03-06 06:27:11Z" duration="0.020343" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="5514" name="Server_ClassWithNoConstructor_returnsValue(True)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor.Server_ClassWithNoConstructor_returnsValue(True)" methodname="Server_ClassWithNoConstructor_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor" runstate="Runnable" seed="622088863" result="Passed" start-time="2021-03-06 06:27:11Z" end-time="2021-03-06 06:27:11Z" duration="0.002033" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="5515" name="Server_ClassWithNoConstructor_returnsValue(False)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor.Server_ClassWithNoConstructor_returnsValue(False)" methodname="Server_ClassWithNoConstructor_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor" runstate="Runnable" seed="910101613" result="Passed" start-time="2021-03-06 06:27:11Z" end-time="2021-03-06 06:27:11Z" duration="0.003680" asserts="0">
                    <properties />
                    <output><![CDATA[[Server] function 'Mirror.Tests.Generators.ClassWithNoConstructor Mirror.Tests.Generated.Attributes.AttributeBehaviour_ClassWithNoConstructor::Server_ClassWithNoConstructor_Function()' called when server was not active
]]></output>
                  </test-case>
                </test-suite>
                <test-suite type="ParameterizedMethod" id="5519" name="Server_ClassWithNoConstructor_setsOutValue" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor.Server_ClassWithNoConstructor_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor" runstate="Runnable" testcasecount="2" result="Passed" start-time="2021-03-06 06:27:11Z" end-time="2021-03-06 06:27:11Z" duration="0.016552" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="5517" name="Server_ClassWithNoConstructor_setsOutValue(True)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor.Server_ClassWithNoConstructor_setsOutValue(True)" methodname="Server_ClassWithNoConstructor_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor" runstate="Runnable" seed="278795472" result="Passed" start-time="2021-03-06 06:27:11Z" end-time="2021-03-06 06:27:11Z" duration="0.002044" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="5518" name="Server_ClassWithNoConstructor_setsOutValue(False)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor.Server_ClassWithNoConstructor_setsOutValue(False)" methodname="Server_ClassWithNoConstructor_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor" runstate="Runnable" seed="1085949562" result="Passed" start-time="2021-03-06 06:27:11Z" end-time="2021-03-06 06:27:11Z" duration="0.003963" asserts="0">
                    <properties />
                    <output><![CDATA[[Server] function 'System.Void Mirror.Tests.Generated.Attributes.AttributeBehaviour_ClassWithNoConstructor::Server_ClassWithNoConstructor_out_Function(Mirror.Tests.Generators.ClassWithNoConstructor&)' called when server was not active
]]></output>
                  </test-case>
                </test-suite>
                <test-suite type="ParameterizedMethod" id="5468" name="Server_double_returnsValue" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor.Server_double_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor" runstate="Runnable" testcasecount="2" result="Passed" start-time="2021-03-06 06:27:11Z" end-time="2021-03-06 06:27:11Z" duration="0.016653" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="5466" name="Server_double_returnsValue(True)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor.Server_double_returnsValue(True)" methodname="Server_double_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor" runstate="Runnable" seed="343602692" result="Passed" start-time="2021-03-06 06:27:11Z" end-time="2021-03-06 06:27:11Z" duration="0.002291" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="5467" name="Server_double_returnsValue(False)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor.Server_double_returnsValue(False)" methodname="Server_double_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor" runstate="Runnable" seed="252015370" result="Passed" start-time="2021-03-06 06:27:11Z" end-time="2021-03-06 06:27:11Z" duration="0.003508" asserts="0">
                    <properties />
                    <output><![CDATA[[Server] function 'System.Double Mirror.Tests.Generated.Attributes.AttributeBehaviour_ClassWithNoConstructor::Server_double_Function()' called when server was not active
]]></output>
                  </test-case>
                </test-suite>
                <test-suite type="ParameterizedMethod" id="5471" name="Server_double_setsOutValue" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor.Server_double_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor" runstate="Runnable" testcasecount="2" result="Passed" start-time="2021-03-06 06:27:11Z" end-time="2021-03-06 06:27:11Z" duration="0.018962" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="5469" name="Server_double_setsOutValue(True)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor.Server_double_setsOutValue(True)" methodname="Server_double_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor" runstate="Runnable" seed="68718812" result="Passed" start-time="2021-03-06 06:27:11Z" end-time="2021-03-06 06:27:11Z" duration="0.002120" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="5470" name="Server_double_setsOutValue(False)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor.Server_double_setsOutValue(False)" methodname="Server_double_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor" runstate="Runnable" seed="1742148611" result="Passed" start-time="2021-03-06 06:27:11Z" end-time="2021-03-06 06:27:11Z" duration="0.003748" asserts="0">
                    <properties />
                    <output><![CDATA[[Server] function 'System.Void Mirror.Tests.Generated.Attributes.AttributeBehaviour_ClassWithNoConstructor::Server_double_out_Function(System.Double&)' called when server was not active
]]></output>
                  </test-case>
                </test-suite>
                <test-suite type="ParameterizedMethod" id="5462" name="Server_float_returnsValue" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor.Server_float_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor" runstate="Runnable" testcasecount="2" result="Passed" start-time="2021-03-06 06:27:11Z" end-time="2021-03-06 06:27:11Z" duration="0.019514" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="5460" name="Server_float_returnsValue(True)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor.Server_float_returnsValue(True)" methodname="Server_float_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor" runstate="Runnable" seed="1906192627" result="Passed" start-time="2021-03-06 06:27:11Z" end-time="2021-03-06 06:27:11Z" duration="0.002088" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="5461" name="Server_float_returnsValue(False)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor.Server_float_returnsValue(False)" methodname="Server_float_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor" runstate="Runnable" seed="1784177046" result="Passed" start-time="2021-03-06 06:27:11Z" end-time="2021-03-06 06:27:11Z" duration="0.003472" asserts="0">
                    <properties />
                    <output><![CDATA[[Server] function 'System.Single Mirror.Tests.Generated.Attributes.AttributeBehaviour_ClassWithNoConstructor::Server_float_Function()' called when server was not active
]]></output>
                  </test-case>
                </test-suite>
                <test-suite type="ParameterizedMethod" id="5465" name="Server_float_setsOutValue" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor.Server_float_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor" runstate="Runnable" testcasecount="2" result="Passed" start-time="2021-03-06 06:27:11Z" end-time="2021-03-06 06:27:11Z" duration="0.018277" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="5463" name="Server_float_setsOutValue(True)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor.Server_float_setsOutValue(True)" methodname="Server_float_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor" runstate="Runnable" seed="1688491734" result="Passed" start-time="2021-03-06 06:27:11Z" end-time="2021-03-06 06:27:11Z" duration="0.002089" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="5464" name="Server_float_setsOutValue(False)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor.Server_float_setsOutValue(False)" methodname="Server_float_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor" runstate="Runnable" seed="927336925" result="Passed" start-time="2021-03-06 06:27:11Z" end-time="2021-03-06 06:27:11Z" duration="0.004066" asserts="0">
                    <properties />
                    <output><![CDATA[[Server] function 'System.Void Mirror.Tests.Generated.Attributes.AttributeBehaviour_ClassWithNoConstructor::Server_float_out_Function(System.Single&)' called when server was not active
]]></output>
                  </test-case>
                </test-suite>
                <test-suite type="ParameterizedMethod" id="5492" name="Server_int_returnsValue" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor.Server_int_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor" runstate="Runnable" testcasecount="2" result="Passed" start-time="2021-03-06 06:27:11Z" end-time="2021-03-06 06:27:11Z" duration="0.016608" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="5490" name="Server_int_returnsValue(True)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor.Server_int_returnsValue(True)" methodname="Server_int_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor" runstate="Runnable" seed="926815129" result="Passed" start-time="2021-03-06 06:27:11Z" end-time="2021-03-06 06:27:11Z" duration="0.002254" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="5491" name="Server_int_returnsValue(False)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor.Server_int_returnsValue(False)" methodname="Server_int_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor" runstate="Runnable" seed="197122061" result="Passed" start-time="2021-03-06 06:27:11Z" end-time="2021-03-06 06:27:11Z" duration="0.003544" asserts="0">
                    <properties />
                    <output><![CDATA[[Server] function 'System.Int32 Mirror.Tests.Generated.Attributes.AttributeBehaviour_ClassWithNoConstructor::Server_int_Function()' called when server was not active
]]></output>
                  </test-case>
                </test-suite>
                <test-suite type="ParameterizedMethod" id="5495" name="Server_int_setsOutValue" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor.Server_int_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor" runstate="Runnable" testcasecount="2" result="Passed" start-time="2021-03-06 06:27:11Z" end-time="2021-03-06 06:27:12Z" duration="0.017528" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="5493" name="Server_int_setsOutValue(True)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor.Server_int_setsOutValue(True)" methodname="Server_int_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor" runstate="Runnable" seed="1174481573" result="Passed" start-time="2021-03-06 06:27:12Z" end-time="2021-03-06 06:27:12Z" duration="0.002068" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="5494" name="Server_int_setsOutValue(False)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor.Server_int_setsOutValue(False)" methodname="Server_int_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor" runstate="Runnable" seed="1924542876" result="Passed" start-time="2021-03-06 06:27:12Z" end-time="2021-03-06 06:27:12Z" duration="0.003812" asserts="0">
                    <properties />
                    <output><![CDATA[[Server] function 'System.Void Mirror.Tests.Generated.Attributes.AttributeBehaviour_ClassWithNoConstructor::Server_int_out_Function(System.Int32&)' called when server was not active
]]></output>
                  </test-case>
                </test-suite>
                <test-suite type="ParameterizedMethod" id="5498" name="Server_long_returnsValue" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor.Server_long_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor" runstate="Runnable" testcasecount="2" result="Passed" start-time="2021-03-06 06:27:12Z" end-time="2021-03-06 06:27:12Z" duration="0.021698" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="5496" name="Server_long_returnsValue(True)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor.Server_long_returnsValue(True)" methodname="Server_long_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor" runstate="Runnable" seed="10014711" result="Passed" start-time="2021-03-06 06:27:12Z" end-time="2021-03-06 06:27:12Z" duration="0.002037" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="5497" name="Server_long_returnsValue(False)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor.Server_long_returnsValue(False)" methodname="Server_long_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor" runstate="Runnable" seed="2067252119" result="Passed" start-time="2021-03-06 06:27:12Z" end-time="2021-03-06 06:27:12Z" duration="0.003995" asserts="0">
                    <properties />
                    <output><![CDATA[[Server] function 'System.Int64 Mirror.Tests.Generated.Attributes.AttributeBehaviour_ClassWithNoConstructor::Server_long_Function()' called when server was not active
]]></output>
                  </test-case>
                </test-suite>
                <test-suite type="ParameterizedMethod" id="5501" name="Server_long_setsOutValue" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor.Server_long_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor" runstate="Runnable" testcasecount="2" result="Passed" start-time="2021-03-06 06:27:12Z" end-time="2021-03-06 06:27:12Z" duration="0.017496" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="5499" name="Server_long_setsOutValue(True)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor.Server_long_setsOutValue(True)" methodname="Server_long_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor" runstate="Runnable" seed="857436020" result="Passed" start-time="2021-03-06 06:27:12Z" end-time="2021-03-06 06:27:12Z" duration="0.002202" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="5500" name="Server_long_setsOutValue(False)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor.Server_long_setsOutValue(False)" methodname="Server_long_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor" runstate="Runnable" seed="1329718255" result="Passed" start-time="2021-03-06 06:27:12Z" end-time="2021-03-06 06:27:12Z" duration="0.003594" asserts="0">
                    <properties />
                    <output><![CDATA[[Server] function 'System.Void Mirror.Tests.Generated.Attributes.AttributeBehaviour_ClassWithNoConstructor::Server_long_out_Function(System.Int64&)' called when server was not active
]]></output>
                  </test-case>
                </test-suite>
                <test-suite type="ParameterizedMethod" id="5504" name="Server_ulong_returnsValue" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor.Server_ulong_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor" runstate="Runnable" testcasecount="2" result="Passed" start-time="2021-03-06 06:27:12Z" end-time="2021-03-06 06:27:12Z" duration="0.016818" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="5502" name="Server_ulong_returnsValue(True)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor.Server_ulong_returnsValue(True)" methodname="Server_ulong_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor" runstate="Runnable" seed="926003732" result="Passed" start-time="2021-03-06 06:27:12Z" end-time="2021-03-06 06:27:12Z" duration="0.002276" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="5503" name="Server_ulong_returnsValue(False)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor.Server_ulong_returnsValue(False)" methodname="Server_ulong_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor" runstate="Runnable" seed="1776838333" result="Passed" start-time="2021-03-06 06:27:12Z" end-time="2021-03-06 06:27:12Z" duration="0.003735" asserts="0">
                    <properties />
                    <output><![CDATA[[Server] function 'System.UInt64 Mirror.Tests.Generated.Attributes.AttributeBehaviour_ClassWithNoConstructor::Server_ulong_Function()' called when server was not active
]]></output>
                  </test-case>
                </test-suite>
                <test-suite type="ParameterizedMethod" id="5507" name="Server_ulong_setsOutValue" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor.Server_ulong_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor" runstate="Runnable" testcasecount="2" result="Passed" start-time="2021-03-06 06:27:12Z" end-time="2021-03-06 06:27:12Z" duration="0.017798" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="5505" name="Server_ulong_setsOutValue(True)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor.Server_ulong_setsOutValue(True)" methodname="Server_ulong_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor" runstate="Runnable" seed="516377107" result="Passed" start-time="2021-03-06 06:27:12Z" end-time="2021-03-06 06:27:12Z" duration="0.002065" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="5506" name="Server_ulong_setsOutValue(False)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor.Server_ulong_setsOutValue(False)" methodname="Server_ulong_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor" runstate="Runnable" seed="1952066711" result="Passed" start-time="2021-03-06 06:27:12Z" end-time="2021-03-06 06:27:12Z" duration="0.004029" asserts="0">
                    <properties />
                    <output><![CDATA[[Server] function 'System.Void Mirror.Tests.Generated.Attributes.AttributeBehaviour_ClassWithNoConstructor::Server_ulong_out_Function(System.UInt64&)' called when server was not active
]]></output>
                  </test-case>
                </test-suite>
                <test-suite type="ParameterizedMethod" id="5510" name="Server_Vector3_returnsValue" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor.Server_Vector3_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor" runstate="Runnable" testcasecount="2" result="Passed" start-time="2021-03-06 06:27:12Z" end-time="2021-03-06 06:27:12Z" duration="0.016515" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="5508" name="Server_Vector3_returnsValue(True)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor.Server_Vector3_returnsValue(True)" methodname="Server_Vector3_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor" runstate="Runnable" seed="728978413" result="Passed" start-time="2021-03-06 06:27:12Z" end-time="2021-03-06 06:27:12Z" duration="0.002555" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="5509" name="Server_Vector3_returnsValue(False)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor.Server_Vector3_returnsValue(False)" methodname="Server_Vector3_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor" runstate="Runnable" seed="108259271" result="Passed" start-time="2021-03-06 06:27:12Z" end-time="2021-03-06 06:27:12Z" duration="0.003484" asserts="0">
                    <properties />
                    <output><![CDATA[[Server] function 'UnityEngine.Vector3 Mirror.Tests.Generated.Attributes.AttributeBehaviour_ClassWithNoConstructor::Server_Vector3_Function()' called when server was not active
]]></output>
                  </test-case>
                </test-suite>
                <test-suite type="ParameterizedMethod" id="5513" name="Server_Vector3_setsOutValue" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor.Server_Vector3_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor" runstate="Runnable" testcasecount="2" result="Passed" start-time="2021-03-06 06:27:12Z" end-time="2021-03-06 06:27:12Z" duration="0.018512" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="5511" name="Server_Vector3_setsOutValue(True)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor.Server_Vector3_setsOutValue(True)" methodname="Server_Vector3_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor" runstate="Runnable" seed="823573789" result="Passed" start-time="2021-03-06 06:27:12Z" end-time="2021-03-06 06:27:12Z" duration="0.002194" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="5512" name="Server_Vector3_setsOutValue(False)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor.Server_Vector3_setsOutValue(False)" methodname="Server_Vector3_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor" runstate="Runnable" seed="1302409374" result="Passed" start-time="2021-03-06 06:27:12Z" end-time="2021-03-06 06:27:12Z" duration="0.003942" asserts="0">
                    <properties />
                    <output><![CDATA[[Server] function 'System.Void Mirror.Tests.Generated.Attributes.AttributeBehaviour_ClassWithNoConstructor::Server_Vector3_out_Function(UnityEngine.Vector3&)' called when server was not active
]]></output>
                  </test-case>
                </test-suite>
                <test-suite type="ParameterizedMethod" id="5606" name="ServerCallback_bool_returnsValue" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor.ServerCallback_bool_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor" runstate="Runnable" testcasecount="2" result="Passed" start-time="2021-03-06 06:27:12Z" end-time="2021-03-06 06:27:12Z" duration="0.018495" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="5604" name="ServerCallback_bool_returnsValue(True)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor.ServerCallback_bool_returnsValue(True)" methodname="ServerCallback_bool_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor" runstate="Runnable" seed="1571119605" result="Passed" start-time="2021-03-06 06:27:12Z" end-time="2021-03-06 06:27:12Z" duration="0.002043" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="5605" name="ServerCallback_bool_returnsValue(False)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor.ServerCallback_bool_returnsValue(False)" methodname="ServerCallback_bool_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor" runstate="Runnable" seed="580329416" result="Passed" start-time="2021-03-06 06:27:12Z" end-time="2021-03-06 06:27:12Z" duration="0.001640" asserts="0">
                    <properties />
                  </test-case>
                </test-suite>
                <test-suite type="ParameterizedMethod" id="5609" name="ServerCallback_bool_setsOutValue" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor.ServerCallback_bool_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor" runstate="Runnable" testcasecount="2" result="Passed" start-time="2021-03-06 06:27:12Z" end-time="2021-03-06 06:27:12Z" duration="0.017214" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="5607" name="ServerCallback_bool_setsOutValue(True)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor.ServerCallback_bool_setsOutValue(True)" methodname="ServerCallback_bool_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor" runstate="Runnable" seed="1233504480" result="Passed" start-time="2021-03-06 06:27:12Z" end-time="2021-03-06 06:27:12Z" duration="0.002036" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="5608" name="ServerCallback_bool_setsOutValue(False)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor.ServerCallback_bool_setsOutValue(False)" methodname="ServerCallback_bool_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor" runstate="Runnable" seed="471042092" result="Passed" start-time="2021-03-06 06:27:12Z" end-time="2021-03-06 06:27:12Z" duration="0.001827" asserts="0">
                    <properties />
                  </test-case>
                </test-suite>
                <test-suite type="ParameterizedMethod" id="5618" name="ServerCallback_byte_returnsValue" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor.ServerCallback_byte_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor" runstate="Runnable" testcasecount="2" result="Passed" start-time="2021-03-06 06:27:12Z" end-time="2021-03-06 06:27:12Z" duration="0.017674" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="5616" name="ServerCallback_byte_returnsValue(True)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor.ServerCallback_byte_returnsValue(True)" methodname="ServerCallback_byte_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor" runstate="Runnable" seed="1298080423" result="Passed" start-time="2021-03-06 06:27:12Z" end-time="2021-03-06 06:27:12Z" duration="0.001998" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="5617" name="ServerCallback_byte_returnsValue(False)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor.ServerCallback_byte_returnsValue(False)" methodname="ServerCallback_byte_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor" runstate="Runnable" seed="2024916396" result="Passed" start-time="2021-03-06 06:27:12Z" end-time="2021-03-06 06:27:12Z" duration="0.001557" asserts="0">
                    <properties />
                  </test-case>
                </test-suite>
                <test-suite type="ParameterizedMethod" id="5621" name="ServerCallback_byte_setsOutValue" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor.ServerCallback_byte_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor" runstate="Runnable" testcasecount="2" result="Passed" start-time="2021-03-06 06:27:12Z" end-time="2021-03-06 06:27:12Z" duration="0.017995" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="5619" name="ServerCallback_byte_setsOutValue(True)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor.ServerCallback_byte_setsOutValue(True)" methodname="ServerCallback_byte_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor" runstate="Runnable" seed="1891009675" result="Passed" start-time="2021-03-06 06:27:12Z" end-time="2021-03-06 06:27:12Z" duration="0.002082" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="5620" name="ServerCallback_byte_setsOutValue(False)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor.ServerCallback_byte_setsOutValue(False)" methodname="ServerCallback_byte_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor" runstate="Runnable" seed="1586766208" result="Passed" start-time="2021-03-06 06:27:12Z" end-time="2021-03-06 06:27:12Z" duration="0.001698" asserts="0">
                    <properties />
                  </test-case>
                </test-suite>
                <test-suite type="ParameterizedMethod" id="5612" name="ServerCallback_char_returnsValue" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor.ServerCallback_char_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor" runstate="Runnable" testcasecount="2" result="Passed" start-time="2021-03-06 06:27:12Z" end-time="2021-03-06 06:27:12Z" duration="0.017604" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="5610" name="ServerCallback_char_returnsValue(True)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor.ServerCallback_char_returnsValue(True)" methodname="ServerCallback_char_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor" runstate="Runnable" seed="174315057" result="Passed" start-time="2021-03-06 06:27:12Z" end-time="2021-03-06 06:27:12Z" duration="0.002259" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="5611" name="ServerCallback_char_returnsValue(False)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor.ServerCallback_char_returnsValue(False)" methodname="ServerCallback_char_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor" runstate="Runnable" seed="23329499" result="Passed" start-time="2021-03-06 06:27:12Z" end-time="2021-03-06 06:27:12Z" duration="0.001873" asserts="0">
                    <properties />
                  </test-case>
                </test-suite>
                <test-suite type="ParameterizedMethod" id="5615" name="ServerCallback_char_setsOutValue" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor.ServerCallback_char_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor" runstate="Runnable" testcasecount="2" result="Passed" start-time="2021-03-06 06:27:12Z" end-time="2021-03-06 06:27:12Z" duration="0.016643" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="5613" name="ServerCallback_char_setsOutValue(True)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor.ServerCallback_char_setsOutValue(True)" methodname="ServerCallback_char_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor" runstate="Runnable" seed="536988544" result="Passed" start-time="2021-03-06 06:27:12Z" end-time="2021-03-06 06:27:12Z" duration="0.001989" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="5614" name="ServerCallback_char_setsOutValue(False)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor.ServerCallback_char_setsOutValue(False)" methodname="ServerCallback_char_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor" runstate="Runnable" seed="1181257104" result="Passed" start-time="2021-03-06 06:27:12Z" end-time="2021-03-06 06:27:12Z" duration="0.001566" asserts="0">
                    <properties />
                  </test-case>
                </test-suite>
                <test-suite type="ParameterizedMethod" id="5654" name="ServerCallback_ClassWithConstructor_returnsValue" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor.ServerCallback_ClassWithConstructor_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor" runstate="Runnable" testcasecount="2" result="Passed" start-time="2021-03-06 06:27:12Z" end-time="2021-03-06 06:27:12Z" duration="0.018717" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="5652" name="ServerCallback_ClassWithConstructor_returnsValue(True)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor.ServerCallback_ClassWithConstructor_returnsValue(True)" methodname="ServerCallback_ClassWithConstructor_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor" runstate="Runnable" seed="544057887" result="Passed" start-time="2021-03-06 06:27:12Z" end-time="2021-03-06 06:27:12Z" duration="0.002091" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="5653" name="ServerCallback_ClassWithConstructor_returnsValue(False)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor.ServerCallback_ClassWithConstructor_returnsValue(False)" methodname="ServerCallback_ClassWithConstructor_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor" runstate="Runnable" seed="1571175174" result="Passed" start-time="2021-03-06 06:27:12Z" end-time="2021-03-06 06:27:12Z" duration="0.001532" asserts="0">
                    <properties />
                  </test-case>
                </test-suite>
                <test-suite type="ParameterizedMethod" id="5657" name="ServerCallback_ClassWithConstructor_setsOutValue" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor.ServerCallback_ClassWithConstructor_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor" runstate="Runnable" testcasecount="2" result="Passed" start-time="2021-03-06 06:27:12Z" end-time="2021-03-06 06:27:12Z" duration="0.017074" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="5655" name="ServerCallback_ClassWithConstructor_setsOutValue(True)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor.ServerCallback_ClassWithConstructor_setsOutValue(True)" methodname="ServerCallback_ClassWithConstructor_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor" runstate="Runnable" seed="1469850650" result="Passed" start-time="2021-03-06 06:27:12Z" end-time="2021-03-06 06:27:12Z" duration="0.002086" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="5656" name="ServerCallback_ClassWithConstructor_setsOutValue(False)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor.ServerCallback_ClassWithConstructor_setsOutValue(False)" methodname="ServerCallback_ClassWithConstructor_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor" runstate="Runnable" seed="1261096125" result="Passed" start-time="2021-03-06 06:27:12Z" end-time="2021-03-06 06:27:12Z" duration="0.001502" asserts="0">
                    <properties />
                  </test-case>
                </test-suite>
                <test-suite type="ParameterizedMethod" id="5648" name="ServerCallback_ClassWithNoConstructor_returnsValue" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor.ServerCallback_ClassWithNoConstructor_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor" runstate="Runnable" testcasecount="2" result="Passed" start-time="2021-03-06 06:27:12Z" end-time="2021-03-06 06:27:12Z" duration="0.016819" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="5646" name="ServerCallback_ClassWithNoConstructor_returnsValue(True)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor.ServerCallback_ClassWithNoConstructor_returnsValue(True)" methodname="ServerCallback_ClassWithNoConstructor_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor" runstate="Runnable" seed="945229230" result="Passed" start-time="2021-03-06 06:27:12Z" end-time="2021-03-06 06:27:12Z" duration="0.002022" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="5647" name="ServerCallback_ClassWithNoConstructor_returnsValue(False)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor.ServerCallback_ClassWithNoConstructor_returnsValue(False)" methodname="ServerCallback_ClassWithNoConstructor_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor" runstate="Runnable" seed="1224353848" result="Passed" start-time="2021-03-06 06:27:12Z" end-time="2021-03-06 06:27:12Z" duration="0.001699" asserts="0">
                    <properties />
                  </test-case>
                </test-suite>
                <test-suite type="ParameterizedMethod" id="5651" name="ServerCallback_ClassWithNoConstructor_setsOutValue" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor.ServerCallback_ClassWithNoConstructor_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor" runstate="Runnable" testcasecount="2" result="Passed" start-time="2021-03-06 06:27:12Z" end-time="2021-03-06 06:27:12Z" duration="0.016513" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="5649" name="ServerCallback_ClassWithNoConstructor_setsOutValue(True)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor.ServerCallback_ClassWithNoConstructor_setsOutValue(True)" methodname="ServerCallback_ClassWithNoConstructor_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor" runstate="Runnable" seed="304385275" result="Passed" start-time="2021-03-06 06:27:12Z" end-time="2021-03-06 06:27:12Z" duration="0.002153" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="5650" name="ServerCallback_ClassWithNoConstructor_setsOutValue(False)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor.ServerCallback_ClassWithNoConstructor_setsOutValue(False)" methodname="ServerCallback_ClassWithNoConstructor_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor" runstate="Runnable" seed="608279492" result="Passed" start-time="2021-03-06 06:27:12Z" end-time="2021-03-06 06:27:12Z" duration="0.001703" asserts="0">
                    <properties />
                  </test-case>
                </test-suite>
                <test-suite type="ParameterizedMethod" id="5600" name="ServerCallback_double_returnsValue" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor.ServerCallback_double_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor" runstate="Runnable" testcasecount="2" result="Passed" start-time="2021-03-06 06:27:12Z" end-time="2021-03-06 06:27:12Z" duration="0.017771" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="5598" name="ServerCallback_double_returnsValue(True)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor.ServerCallback_double_returnsValue(True)" methodname="ServerCallback_double_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor" runstate="Runnable" seed="774450892" result="Passed" start-time="2021-03-06 06:27:12Z" end-time="2021-03-06 06:27:12Z" duration="0.002449" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="5599" name="ServerCallback_double_returnsValue(False)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor.ServerCallback_double_returnsValue(False)" methodname="ServerCallback_double_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor" runstate="Runnable" seed="1204633307" result="Passed" start-time="2021-03-06 06:27:12Z" end-time="2021-03-06 06:27:12Z" duration="0.001645" asserts="0">
                    <properties />
                  </test-case>
                </test-suite>
                <test-suite type="ParameterizedMethod" id="5603" name="ServerCallback_double_setsOutValue" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor.ServerCallback_double_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor" runstate="Runnable" testcasecount="2" result="Passed" start-time="2021-03-06 06:27:12Z" end-time="2021-03-06 06:27:12Z" duration="0.018404" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="5601" name="ServerCallback_double_setsOutValue(True)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor.ServerCallback_double_setsOutValue(True)" methodname="ServerCallback_double_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor" runstate="Runnable" seed="1516518761" result="Passed" start-time="2021-03-06 06:27:12Z" end-time="2021-03-06 06:27:12Z" duration="0.002472" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="5602" name="ServerCallback_double_setsOutValue(False)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor.ServerCallback_double_setsOutValue(False)" methodname="ServerCallback_double_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor" runstate="Runnable" seed="575714507" result="Passed" start-time="2021-03-06 06:27:12Z" end-time="2021-03-06 06:27:12Z" duration="0.001590" asserts="0">
                    <properties />
                  </test-case>
                </test-suite>
                <test-suite type="ParameterizedMethod" id="5594" name="ServerCallback_float_returnsValue" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor.ServerCallback_float_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor" runstate="Runnable" testcasecount="2" result="Passed" start-time="2021-03-06 06:27:12Z" end-time="2021-03-06 06:27:12Z" duration="0.017538" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="5592" name="ServerCallback_float_returnsValue(True)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor.ServerCallback_float_returnsValue(True)" methodname="ServerCallback_float_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor" runstate="Runnable" seed="781168500" result="Passed" start-time="2021-03-06 06:27:12Z" end-time="2021-03-06 06:27:12Z" duration="0.002539" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="5593" name="ServerCallback_float_returnsValue(False)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor.ServerCallback_float_returnsValue(False)" methodname="ServerCallback_float_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor" runstate="Runnable" seed="98386354" result="Passed" start-time="2021-03-06 06:27:12Z" end-time="2021-03-06 06:27:12Z" duration="0.001749" asserts="0">
                    <properties />
                  </test-case>
                </test-suite>
                <test-suite type="ParameterizedMethod" id="5597" name="ServerCallback_float_setsOutValue" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor.ServerCallback_float_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor" runstate="Runnable" testcasecount="2" result="Passed" start-time="2021-03-06 06:27:12Z" end-time="2021-03-06 06:27:12Z" duration="0.016024" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="5595" name="ServerCallback_float_setsOutValue(True)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor.ServerCallback_float_setsOutValue(True)" methodname="ServerCallback_float_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor" runstate="Runnable" seed="606843598" result="Passed" start-time="2021-03-06 06:27:12Z" end-time="2021-03-06 06:27:12Z" duration="0.002002" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="5596" name="ServerCallback_float_setsOutValue(False)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor.ServerCallback_float_setsOutValue(False)" methodname="ServerCallback_float_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor" runstate="Runnable" seed="635203367" result="Passed" start-time="2021-03-06 06:27:12Z" end-time="2021-03-06 06:27:12Z" duration="0.001653" asserts="0">
                    <properties />
                  </test-case>
                </test-suite>
                <test-suite type="ParameterizedMethod" id="5624" name="ServerCallback_int_returnsValue" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor.ServerCallback_int_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor" runstate="Runnable" testcasecount="2" result="Passed" start-time="2021-03-06 06:27:12Z" end-time="2021-03-06 06:27:12Z" duration="0.018266" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="5622" name="ServerCallback_int_returnsValue(True)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor.ServerCallback_int_returnsValue(True)" methodname="ServerCallback_int_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor" runstate="Runnable" seed="1989157221" result="Passed" start-time="2021-03-06 06:27:12Z" end-time="2021-03-06 06:27:12Z" duration="0.002757" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="5623" name="ServerCallback_int_returnsValue(False)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor.ServerCallback_int_returnsValue(False)" methodname="ServerCallback_int_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor" runstate="Runnable" seed="1467563940" result="Passed" start-time="2021-03-06 06:27:12Z" end-time="2021-03-06 06:27:12Z" duration="0.001725" asserts="0">
                    <properties />
                  </test-case>
                </test-suite>
                <test-suite type="ParameterizedMethod" id="5627" name="ServerCallback_int_setsOutValue" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor.ServerCallback_int_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor" runstate="Runnable" testcasecount="2" result="Passed" start-time="2021-03-06 06:27:12Z" end-time="2021-03-06 06:27:12Z" duration="0.017749" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="5625" name="ServerCallback_int_setsOutValue(True)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor.ServerCallback_int_setsOutValue(True)" methodname="ServerCallback_int_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor" runstate="Runnable" seed="578084110" result="Passed" start-time="2021-03-06 06:27:12Z" end-time="2021-03-06 06:27:12Z" duration="0.002254" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="5626" name="ServerCallback_int_setsOutValue(False)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor.ServerCallback_int_setsOutValue(False)" methodname="ServerCallback_int_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor" runstate="Runnable" seed="168772977" result="Passed" start-time="2021-03-06 06:27:12Z" end-time="2021-03-06 06:27:12Z" duration="0.001753" asserts="0">
                    <properties />
                  </test-case>
                </test-suite>
                <test-suite type="ParameterizedMethod" id="5630" name="ServerCallback_long_returnsValue" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor.ServerCallback_long_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor" runstate="Runnable" testcasecount="2" result="Passed" start-time="2021-03-06 06:27:12Z" end-time="2021-03-06 06:27:12Z" duration="0.016754" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="5628" name="ServerCallback_long_returnsValue(True)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor.ServerCallback_long_returnsValue(True)" methodname="ServerCallback_long_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor" runstate="Runnable" seed="1754468110" result="Passed" start-time="2021-03-06 06:27:12Z" end-time="2021-03-06 06:27:12Z" duration="0.002012" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="5629" name="ServerCallback_long_returnsValue(False)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor.ServerCallback_long_returnsValue(False)" methodname="ServerCallback_long_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor" runstate="Runnable" seed="597662174" result="Passed" start-time="2021-03-06 06:27:12Z" end-time="2021-03-06 06:27:12Z" duration="0.002068" asserts="0">
                    <properties />
                  </test-case>
                </test-suite>
                <test-suite type="ParameterizedMethod" id="5633" name="ServerCallback_long_setsOutValue" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor.ServerCallback_long_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor" runstate="Runnable" testcasecount="2" result="Passed" start-time="2021-03-06 06:27:12Z" end-time="2021-03-06 06:27:12Z" duration="0.017225" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="5631" name="ServerCallback_long_setsOutValue(True)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor.ServerCallback_long_setsOutValue(True)" methodname="ServerCallback_long_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor" runstate="Runnable" seed="12863107" result="Passed" start-time="2021-03-06 06:27:12Z" end-time="2021-03-06 06:27:12Z" duration="0.002240" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="5632" name="ServerCallback_long_setsOutValue(False)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor.ServerCallback_long_setsOutValue(False)" methodname="ServerCallback_long_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor" runstate="Runnable" seed="1515809236" result="Passed" start-time="2021-03-06 06:27:12Z" end-time="2021-03-06 06:27:12Z" duration="0.001551" asserts="0">
                    <properties />
                  </test-case>
                </test-suite>
                <test-suite type="ParameterizedMethod" id="5636" name="ServerCallback_ulong_returnsValue" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor.ServerCallback_ulong_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor" runstate="Runnable" testcasecount="2" result="Passed" start-time="2021-03-06 06:27:12Z" end-time="2021-03-06 06:27:12Z" duration="0.018870" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="5634" name="ServerCallback_ulong_returnsValue(True)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor.ServerCallback_ulong_returnsValue(True)" methodname="ServerCallback_ulong_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor" runstate="Runnable" seed="1372214808" result="Passed" start-time="2021-03-06 06:27:12Z" end-time="2021-03-06 06:27:12Z" duration="0.002366" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="5635" name="ServerCallback_ulong_returnsValue(False)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor.ServerCallback_ulong_returnsValue(False)" methodname="ServerCallback_ulong_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor" runstate="Runnable" seed="784806566" result="Passed" start-time="2021-03-06 06:27:12Z" end-time="2021-03-06 06:27:12Z" duration="0.002120" asserts="0">
                    <properties />
                  </test-case>
                </test-suite>
                <test-suite type="ParameterizedMethod" id="5639" name="ServerCallback_ulong_setsOutValue" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor.ServerCallback_ulong_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor" runstate="Runnable" testcasecount="2" result="Passed" start-time="2021-03-06 06:27:12Z" end-time="2021-03-06 06:27:12Z" duration="0.016046" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="5637" name="ServerCallback_ulong_setsOutValue(True)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor.ServerCallback_ulong_setsOutValue(True)" methodname="ServerCallback_ulong_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor" runstate="Runnable" seed="1348257316" result="Passed" start-time="2021-03-06 06:27:12Z" end-time="2021-03-06 06:27:12Z" duration="0.002058" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="5638" name="ServerCallback_ulong_setsOutValue(False)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor.ServerCallback_ulong_setsOutValue(False)" methodname="ServerCallback_ulong_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor" runstate="Runnable" seed="470582481" result="Passed" start-time="2021-03-06 06:27:12Z" end-time="2021-03-06 06:27:12Z" duration="0.001783" asserts="0">
                    <properties />
                  </test-case>
                </test-suite>
                <test-suite type="ParameterizedMethod" id="5642" name="ServerCallback_Vector3_returnsValue" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor.ServerCallback_Vector3_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor" runstate="Runnable" testcasecount="2" result="Passed" start-time="2021-03-06 06:27:12Z" end-time="2021-03-06 06:27:12Z" duration="0.017911" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="5640" name="ServerCallback_Vector3_returnsValue(True)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor.ServerCallback_Vector3_returnsValue(True)" methodname="ServerCallback_Vector3_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor" runstate="Runnable" seed="366853142" result="Passed" start-time="2021-03-06 06:27:12Z" end-time="2021-03-06 06:27:12Z" duration="0.002153" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="5641" name="ServerCallback_Vector3_returnsValue(False)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor.ServerCallback_Vector3_returnsValue(False)" methodname="ServerCallback_Vector3_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor" runstate="Runnable" seed="2054137857" result="Passed" start-time="2021-03-06 06:27:12Z" end-time="2021-03-06 06:27:12Z" duration="0.001577" asserts="0">
                    <properties />
                  </test-case>
                </test-suite>
                <test-suite type="ParameterizedMethod" id="5645" name="ServerCallback_Vector3_setsOutValue" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor.ServerCallback_Vector3_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor" runstate="Runnable" testcasecount="2" result="Passed" start-time="2021-03-06 06:27:12Z" end-time="2021-03-06 06:27:12Z" duration="0.016926" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="5643" name="ServerCallback_Vector3_setsOutValue(True)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor.ServerCallback_Vector3_setsOutValue(True)" methodname="ServerCallback_Vector3_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor" runstate="Runnable" seed="1432739981" result="Passed" start-time="2021-03-06 06:27:12Z" end-time="2021-03-06 06:27:12Z" duration="0.002123" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="5644" name="ServerCallback_Vector3_setsOutValue(False)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor.ServerCallback_Vector3_setsOutValue(False)" methodname="ServerCallback_Vector3_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_ClassWithNoConstructor" runstate="Runnable" seed="923245785" result="Passed" start-time="2021-03-06 06:27:12Z" end-time="2021-03-06 06:27:12Z" duration="0.001816" asserts="0">
                    <properties />
                  </test-case>
                </test-suite>
              </test-suite>
              <test-suite type="TestFixture" id="5128" name="AttributeTest_MonoBehaviour" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour" classname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour" runstate="Runnable" testcasecount="176" result="Passed" start-time="2021-03-06 06:27:12Z" end-time="2021-03-06 06:27:14Z" duration="1.941265" total="176" passed="176" failed="0" inconclusive="0" skipped="0" asserts="0">
                <properties />
                <test-suite type="ParameterizedMethod" id="5143" name="Client_bool_returnsValue" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour.Client_bool_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour" runstate="Runnable" testcasecount="2" result="Passed" start-time="2021-03-06 06:27:12Z" end-time="2021-03-06 06:27:12Z" duration="0.017108" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="5141" name="Client_bool_returnsValue(True)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour.Client_bool_returnsValue(True)" methodname="Client_bool_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour" runstate="Runnable" seed="1704188114" result="Passed" start-time="2021-03-06 06:27:12Z" end-time="2021-03-06 06:27:12Z" duration="0.002091" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="5142" name="Client_bool_returnsValue(False)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour.Client_bool_returnsValue(False)" methodname="Client_bool_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour" runstate="Runnable" seed="754160765" result="Passed" start-time="2021-03-06 06:27:12Z" end-time="2021-03-06 06:27:12Z" duration="0.004875" asserts="0">
                    <properties />
                    <output><![CDATA[[Client] function 'System.Boolean Mirror.Tests.Generated.Attributes.AttributeBehaviour_MonoBehaviour::Client_bool_Function()' called when client was not active
]]></output>
                  </test-case>
                </test-suite>
                <test-suite type="ParameterizedMethod" id="5146" name="Client_bool_setsOutValue" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour.Client_bool_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour" runstate="Runnable" testcasecount="2" result="Passed" start-time="2021-03-06 06:27:12Z" end-time="2021-03-06 06:27:12Z" duration="0.019963" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="5144" name="Client_bool_setsOutValue(True)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour.Client_bool_setsOutValue(True)" methodname="Client_bool_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour" runstate="Runnable" seed="1326523044" result="Passed" start-time="2021-03-06 06:27:12Z" end-time="2021-03-06 06:27:12Z" duration="0.002205" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="5145" name="Client_bool_setsOutValue(False)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour.Client_bool_setsOutValue(False)" methodname="Client_bool_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour" runstate="Runnable" seed="422225866" result="Passed" start-time="2021-03-06 06:27:12Z" end-time="2021-03-06 06:27:12Z" duration="0.003678" asserts="0">
                    <properties />
                    <output><![CDATA[[Client] function 'System.Void Mirror.Tests.Generated.Attributes.AttributeBehaviour_MonoBehaviour::Client_bool_out_Function(System.Boolean&)' called when client was not active
]]></output>
                  </test-case>
                </test-suite>
                <test-suite type="ParameterizedMethod" id="5155" name="Client_byte_returnsValue" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour.Client_byte_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour" runstate="Runnable" testcasecount="2" result="Passed" start-time="2021-03-06 06:27:12Z" end-time="2021-03-06 06:27:12Z" duration="0.018643" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="5153" name="Client_byte_returnsValue(True)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour.Client_byte_returnsValue(True)" methodname="Client_byte_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour" runstate="Runnable" seed="785141978" result="Passed" start-time="2021-03-06 06:27:12Z" end-time="2021-03-06 06:27:12Z" duration="0.002127" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="5154" name="Client_byte_returnsValue(False)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour.Client_byte_returnsValue(False)" methodname="Client_byte_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour" runstate="Runnable" seed="1463999470" result="Passed" start-time="2021-03-06 06:27:12Z" end-time="2021-03-06 06:27:12Z" duration="0.004259" asserts="0">
                    <properties />
                    <output><![CDATA[[Client] function 'System.Byte Mirror.Tests.Generated.Attributes.AttributeBehaviour_MonoBehaviour::Client_byte_Function()' called when client was not active
]]></output>
                  </test-case>
                </test-suite>
                <test-suite type="ParameterizedMethod" id="5158" name="Client_byte_setsOutValue" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour.Client_byte_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour" runstate="Runnable" testcasecount="2" result="Passed" start-time="2021-03-06 06:27:12Z" end-time="2021-03-06 06:27:12Z" duration="0.019842" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="5156" name="Client_byte_setsOutValue(True)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour.Client_byte_setsOutValue(True)" methodname="Client_byte_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour" runstate="Runnable" seed="2080401482" result="Passed" start-time="2021-03-06 06:27:12Z" end-time="2021-03-06 06:27:12Z" duration="0.002097" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="5157" name="Client_byte_setsOutValue(False)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour.Client_byte_setsOutValue(False)" methodname="Client_byte_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour" runstate="Runnable" seed="1092739861" result="Passed" start-time="2021-03-06 06:27:12Z" end-time="2021-03-06 06:27:12Z" duration="0.003631" asserts="0">
                    <properties />
                    <output><![CDATA[[Client] function 'System.Void Mirror.Tests.Generated.Attributes.AttributeBehaviour_MonoBehaviour::Client_byte_out_Function(System.Byte&)' called when client was not active
]]></output>
                  </test-case>
                </test-suite>
                <test-suite type="ParameterizedMethod" id="5149" name="Client_char_returnsValue" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour.Client_char_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour" runstate="Runnable" testcasecount="2" result="Passed" start-time="2021-03-06 06:27:12Z" end-time="2021-03-06 06:27:12Z" duration="0.019068" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="5147" name="Client_char_returnsValue(True)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour.Client_char_returnsValue(True)" methodname="Client_char_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour" runstate="Runnable" seed="862046771" result="Passed" start-time="2021-03-06 06:27:12Z" end-time="2021-03-06 06:27:12Z" duration="0.002127" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="5148" name="Client_char_returnsValue(False)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour.Client_char_returnsValue(False)" methodname="Client_char_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour" runstate="Runnable" seed="475397395" result="Passed" start-time="2021-03-06 06:27:12Z" end-time="2021-03-06 06:27:12Z" duration="0.003932" asserts="0">
                    <properties />
                    <output><![CDATA[[Client] function 'System.Char Mirror.Tests.Generated.Attributes.AttributeBehaviour_MonoBehaviour::Client_char_Function()' called when client was not active
]]></output>
                  </test-case>
                </test-suite>
                <test-suite type="ParameterizedMethod" id="5152" name="Client_char_setsOutValue" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour.Client_char_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour" runstate="Runnable" testcasecount="2" result="Passed" start-time="2021-03-06 06:27:12Z" end-time="2021-03-06 06:27:12Z" duration="0.019634" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="5150" name="Client_char_setsOutValue(True)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour.Client_char_setsOutValue(True)" methodname="Client_char_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour" runstate="Runnable" seed="893918690" result="Passed" start-time="2021-03-06 06:27:12Z" end-time="2021-03-06 06:27:12Z" duration="0.002379" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="5151" name="Client_char_setsOutValue(False)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour.Client_char_setsOutValue(False)" methodname="Client_char_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour" runstate="Runnable" seed="1534619704" result="Passed" start-time="2021-03-06 06:27:12Z" end-time="2021-03-06 06:27:12Z" duration="0.003598" asserts="0">
                    <properties />
                    <output><![CDATA[[Client] function 'System.Void Mirror.Tests.Generated.Attributes.AttributeBehaviour_MonoBehaviour::Client_char_out_Function(System.Char&)' called when client was not active
]]></output>
                  </test-case>
                </test-suite>
                <test-suite type="ParameterizedMethod" id="5191" name="Client_ClassWithConstructor_returnsValue" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour.Client_ClassWithConstructor_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour" runstate="Runnable" testcasecount="2" result="Passed" start-time="2021-03-06 06:27:12Z" end-time="2021-03-06 06:27:12Z" duration="0.017809" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="5189" name="Client_ClassWithConstructor_returnsValue(True)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour.Client_ClassWithConstructor_returnsValue(True)" methodname="Client_ClassWithConstructor_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour" runstate="Runnable" seed="281169053" result="Passed" start-time="2021-03-06 06:27:12Z" end-time="2021-03-06 06:27:12Z" duration="0.002228" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="5190" name="Client_ClassWithConstructor_returnsValue(False)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour.Client_ClassWithConstructor_returnsValue(False)" methodname="Client_ClassWithConstructor_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour" runstate="Runnable" seed="1855960234" result="Passed" start-time="2021-03-06 06:27:12Z" end-time="2021-03-06 06:27:12Z" duration="0.003702" asserts="0">
                    <properties />
                    <output><![CDATA[[Client] function 'Mirror.Tests.Generators.ClassWithConstructor Mirror.Tests.Generated.Attributes.AttributeBehaviour_MonoBehaviour::Client_ClassWithConstructor_Function()' called when client was not active
]]></output>
                  </test-case>
                </test-suite>
                <test-suite type="ParameterizedMethod" id="5194" name="Client_ClassWithConstructor_setsOutValue" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour.Client_ClassWithConstructor_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour" runstate="Runnable" testcasecount="2" result="Passed" start-time="2021-03-06 06:27:12Z" end-time="2021-03-06 06:27:12Z" duration="0.020651" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="5192" name="Client_ClassWithConstructor_setsOutValue(True)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour.Client_ClassWithConstructor_setsOutValue(True)" methodname="Client_ClassWithConstructor_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour" runstate="Runnable" seed="112055759" result="Passed" start-time="2021-03-06 06:27:12Z" end-time="2021-03-06 06:27:12Z" duration="0.002113" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="5193" name="Client_ClassWithConstructor_setsOutValue(False)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour.Client_ClassWithConstructor_setsOutValue(False)" methodname="Client_ClassWithConstructor_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour" runstate="Runnable" seed="1480202849" result="Passed" start-time="2021-03-06 06:27:12Z" end-time="2021-03-06 06:27:12Z" duration="0.003531" asserts="0">
                    <properties />
                    <output><![CDATA[[Client] function 'System.Void Mirror.Tests.Generated.Attributes.AttributeBehaviour_MonoBehaviour::Client_ClassWithConstructor_out_Function(Mirror.Tests.Generators.ClassWithConstructor&)' called when client was not active
]]></output>
                  </test-case>
                </test-suite>
                <test-suite type="ParameterizedMethod" id="5185" name="Client_ClassWithNoConstructor_returnsValue" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour.Client_ClassWithNoConstructor_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour" runstate="Runnable" testcasecount="2" result="Passed" start-time="2021-03-06 06:27:12Z" end-time="2021-03-06 06:27:12Z" duration="0.022470" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="5183" name="Client_ClassWithNoConstructor_returnsValue(True)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour.Client_ClassWithNoConstructor_returnsValue(True)" methodname="Client_ClassWithNoConstructor_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour" runstate="Runnable" seed="2083674501" result="Passed" start-time="2021-03-06 06:27:12Z" end-time="2021-03-06 06:27:12Z" duration="0.002594" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="5184" name="Client_ClassWithNoConstructor_returnsValue(False)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour.Client_ClassWithNoConstructor_returnsValue(False)" methodname="Client_ClassWithNoConstructor_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour" runstate="Runnable" seed="674330570" result="Passed" start-time="2021-03-06 06:27:12Z" end-time="2021-03-06 06:27:12Z" duration="0.003738" asserts="0">
                    <properties />
                    <output><![CDATA[[Client] function 'Mirror.Tests.Generators.ClassWithNoConstructor Mirror.Tests.Generated.Attributes.AttributeBehaviour_MonoBehaviour::Client_ClassWithNoConstructor_Function()' called when client was not active
]]></output>
                  </test-case>
                </test-suite>
                <test-suite type="ParameterizedMethod" id="5188" name="Client_ClassWithNoConstructor_setsOutValue" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour.Client_ClassWithNoConstructor_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour" runstate="Runnable" testcasecount="2" result="Passed" start-time="2021-03-06 06:27:13Z" end-time="2021-03-06 06:27:13Z" duration="0.025038" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="5186" name="Client_ClassWithNoConstructor_setsOutValue(True)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour.Client_ClassWithNoConstructor_setsOutValue(True)" methodname="Client_ClassWithNoConstructor_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour" runstate="Runnable" seed="526666737" result="Passed" start-time="2021-03-06 06:27:13Z" end-time="2021-03-06 06:27:13Z" duration="0.002053" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="5187" name="Client_ClassWithNoConstructor_setsOutValue(False)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour.Client_ClassWithNoConstructor_setsOutValue(False)" methodname="Client_ClassWithNoConstructor_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour" runstate="Runnable" seed="1232985203" result="Passed" start-time="2021-03-06 06:27:13Z" end-time="2021-03-06 06:27:13Z" duration="0.004017" asserts="0">
                    <properties />
                    <output><![CDATA[[Client] function 'System.Void Mirror.Tests.Generated.Attributes.AttributeBehaviour_MonoBehaviour::Client_ClassWithNoConstructor_out_Function(Mirror.Tests.Generators.ClassWithNoConstructor&)' called when client was not active
]]></output>
                  </test-case>
                </test-suite>
                <test-suite type="ParameterizedMethod" id="5137" name="Client_double_returnsValue" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour.Client_double_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour" runstate="Runnable" testcasecount="2" result="Passed" start-time="2021-03-06 06:27:13Z" end-time="2021-03-06 06:27:13Z" duration="0.023257" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="5135" name="Client_double_returnsValue(True)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour.Client_double_returnsValue(True)" methodname="Client_double_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour" runstate="Runnable" seed="689304629" result="Passed" start-time="2021-03-06 06:27:13Z" end-time="2021-03-06 06:27:13Z" duration="0.002194" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="5136" name="Client_double_returnsValue(False)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour.Client_double_returnsValue(False)" methodname="Client_double_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour" runstate="Runnable" seed="404125003" result="Passed" start-time="2021-03-06 06:27:13Z" end-time="2021-03-06 06:27:13Z" duration="0.003678" asserts="0">
                    <properties />
                    <output><![CDATA[[Client] function 'System.Double Mirror.Tests.Generated.Attributes.AttributeBehaviour_MonoBehaviour::Client_double_Function()' called when client was not active
]]></output>
                  </test-case>
                </test-suite>
                <test-suite type="ParameterizedMethod" id="5140" name="Client_double_setsOutValue" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour.Client_double_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour" runstate="Runnable" testcasecount="2" result="Passed" start-time="2021-03-06 06:27:13Z" end-time="2021-03-06 06:27:13Z" duration="0.019263" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="5138" name="Client_double_setsOutValue(True)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour.Client_double_setsOutValue(True)" methodname="Client_double_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour" runstate="Runnable" seed="1302050285" result="Passed" start-time="2021-03-06 06:27:13Z" end-time="2021-03-06 06:27:13Z" duration="0.002641" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="5139" name="Client_double_setsOutValue(False)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour.Client_double_setsOutValue(False)" methodname="Client_double_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour" runstate="Runnable" seed="931082797" result="Passed" start-time="2021-03-06 06:27:13Z" end-time="2021-03-06 06:27:13Z" duration="0.003993" asserts="0">
                    <properties />
                    <output><![CDATA[[Client] function 'System.Void Mirror.Tests.Generated.Attributes.AttributeBehaviour_MonoBehaviour::Client_double_out_Function(System.Double&)' called when client was not active
]]></output>
                  </test-case>
                </test-suite>
                <test-suite type="ParameterizedMethod" id="5131" name="Client_float_returnsValue" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour.Client_float_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour" runstate="Runnable" testcasecount="2" result="Passed" start-time="2021-03-06 06:27:13Z" end-time="2021-03-06 06:27:13Z" duration="0.021070" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="5129" name="Client_float_returnsValue(True)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour.Client_float_returnsValue(True)" methodname="Client_float_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour" runstate="Runnable" seed="1135992983" result="Passed" start-time="2021-03-06 06:27:13Z" end-time="2021-03-06 06:27:13Z" duration="0.002467" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="5130" name="Client_float_returnsValue(False)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour.Client_float_returnsValue(False)" methodname="Client_float_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour" runstate="Runnable" seed="746120881" result="Passed" start-time="2021-03-06 06:27:13Z" end-time="2021-03-06 06:27:13Z" duration="0.003455" asserts="0">
                    <properties />
                    <output><![CDATA[[Client] function 'System.Single Mirror.Tests.Generated.Attributes.AttributeBehaviour_MonoBehaviour::Client_float_Function()' called when client was not active
]]></output>
                  </test-case>
                </test-suite>
                <test-suite type="ParameterizedMethod" id="5134" name="Client_float_setsOutValue" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour.Client_float_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour" runstate="Runnable" testcasecount="2" result="Passed" start-time="2021-03-06 06:27:13Z" end-time="2021-03-06 06:27:13Z" duration="0.017931" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="5132" name="Client_float_setsOutValue(True)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour.Client_float_setsOutValue(True)" methodname="Client_float_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour" runstate="Runnable" seed="903005572" result="Passed" start-time="2021-03-06 06:27:13Z" end-time="2021-03-06 06:27:13Z" duration="0.002253" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="5133" name="Client_float_setsOutValue(False)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour.Client_float_setsOutValue(False)" methodname="Client_float_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour" runstate="Runnable" seed="704158936" result="Passed" start-time="2021-03-06 06:27:13Z" end-time="2021-03-06 06:27:13Z" duration="0.003621" asserts="0">
                    <properties />
                    <output><![CDATA[[Client] function 'System.Void Mirror.Tests.Generated.Attributes.AttributeBehaviour_MonoBehaviour::Client_float_out_Function(System.Single&)' called when client was not active
]]></output>
                  </test-case>
                </test-suite>
                <test-suite type="ParameterizedMethod" id="5161" name="Client_int_returnsValue" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour.Client_int_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour" runstate="Runnable" testcasecount="2" result="Passed" start-time="2021-03-06 06:27:13Z" end-time="2021-03-06 06:27:13Z" duration="0.020035" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="5159" name="Client_int_returnsValue(True)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour.Client_int_returnsValue(True)" methodname="Client_int_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour" runstate="Runnable" seed="1056017217" result="Passed" start-time="2021-03-06 06:27:13Z" end-time="2021-03-06 06:27:13Z" duration="0.002077" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="5160" name="Client_int_returnsValue(False)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour.Client_int_returnsValue(False)" methodname="Client_int_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour" runstate="Runnable" seed="1467962310" result="Passed" start-time="2021-03-06 06:27:13Z" end-time="2021-03-06 06:27:13Z" duration="0.003598" asserts="0">
                    <properties />
                    <output><![CDATA[[Client] function 'System.Int32 Mirror.Tests.Generated.Attributes.AttributeBehaviour_MonoBehaviour::Client_int_Function()' called when client was not active
]]></output>
                  </test-case>
                </test-suite>
                <test-suite type="ParameterizedMethod" id="5164" name="Client_int_setsOutValue" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour.Client_int_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour" runstate="Runnable" testcasecount="2" result="Passed" start-time="2021-03-06 06:27:13Z" end-time="2021-03-06 06:27:13Z" duration="0.017247" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="5162" name="Client_int_setsOutValue(True)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour.Client_int_setsOutValue(True)" methodname="Client_int_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour" runstate="Runnable" seed="470016922" result="Passed" start-time="2021-03-06 06:27:13Z" end-time="2021-03-06 06:27:13Z" duration="0.002124" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="5163" name="Client_int_setsOutValue(False)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour.Client_int_setsOutValue(False)" methodname="Client_int_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour" runstate="Runnable" seed="1460008190" result="Passed" start-time="2021-03-06 06:27:13Z" end-time="2021-03-06 06:27:13Z" duration="0.004039" asserts="0">
                    <properties />
                    <output><![CDATA[[Client] function 'System.Void Mirror.Tests.Generated.Attributes.AttributeBehaviour_MonoBehaviour::Client_int_out_Function(System.Int32&)' called when client was not active
]]></output>
                  </test-case>
                </test-suite>
                <test-suite type="ParameterizedMethod" id="5167" name="Client_long_returnsValue" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour.Client_long_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour" runstate="Runnable" testcasecount="2" result="Passed" start-time="2021-03-06 06:27:13Z" end-time="2021-03-06 06:27:13Z" duration="0.018166" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="5165" name="Client_long_returnsValue(True)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour.Client_long_returnsValue(True)" methodname="Client_long_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour" runstate="Runnable" seed="881374344" result="Passed" start-time="2021-03-06 06:27:13Z" end-time="2021-03-06 06:27:13Z" duration="0.002145" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="5166" name="Client_long_returnsValue(False)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour.Client_long_returnsValue(False)" methodname="Client_long_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour" runstate="Runnable" seed="50527146" result="Passed" start-time="2021-03-06 06:27:13Z" end-time="2021-03-06 06:27:13Z" duration="0.003690" asserts="0">
                    <properties />
                    <output><![CDATA[[Client] function 'System.Int64 Mirror.Tests.Generated.Attributes.AttributeBehaviour_MonoBehaviour::Client_long_Function()' called when client was not active
]]></output>
                  </test-case>
                </test-suite>
                <test-suite type="ParameterizedMethod" id="5170" name="Client_long_setsOutValue" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour.Client_long_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour" runstate="Runnable" testcasecount="2" result="Passed" start-time="2021-03-06 06:27:13Z" end-time="2021-03-06 06:27:13Z" duration="0.018556" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="5168" name="Client_long_setsOutValue(True)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour.Client_long_setsOutValue(True)" methodname="Client_long_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour" runstate="Runnable" seed="628151129" result="Passed" start-time="2021-03-06 06:27:13Z" end-time="2021-03-06 06:27:13Z" duration="0.002230" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="5169" name="Client_long_setsOutValue(False)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour.Client_long_setsOutValue(False)" methodname="Client_long_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour" runstate="Runnable" seed="428200644" result="Passed" start-time="2021-03-06 06:27:13Z" end-time="2021-03-06 06:27:13Z" duration="0.003531" asserts="0">
                    <properties />
                    <output><![CDATA[[Client] function 'System.Void Mirror.Tests.Generated.Attributes.AttributeBehaviour_MonoBehaviour::Client_long_out_Function(System.Int64&)' called when client was not active
]]></output>
                  </test-case>
                </test-suite>
                <test-suite type="ParameterizedMethod" id="5173" name="Client_ulong_returnsValue" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour.Client_ulong_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour" runstate="Runnable" testcasecount="2" result="Passed" start-time="2021-03-06 06:27:13Z" end-time="2021-03-06 06:27:13Z" duration="0.020001" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="5171" name="Client_ulong_returnsValue(True)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour.Client_ulong_returnsValue(True)" methodname="Client_ulong_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour" runstate="Runnable" seed="543710710" result="Passed" start-time="2021-03-06 06:27:13Z" end-time="2021-03-06 06:27:13Z" duration="0.002032" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="5172" name="Client_ulong_returnsValue(False)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour.Client_ulong_returnsValue(False)" methodname="Client_ulong_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour" runstate="Runnable" seed="383042448" result="Passed" start-time="2021-03-06 06:27:13Z" end-time="2021-03-06 06:27:13Z" duration="0.003633" asserts="0">
                    <properties />
                    <output><![CDATA[[Client] function 'System.UInt64 Mirror.Tests.Generated.Attributes.AttributeBehaviour_MonoBehaviour::Client_ulong_Function()' called when client was not active
]]></output>
                  </test-case>
                </test-suite>
                <test-suite type="ParameterizedMethod" id="5176" name="Client_ulong_setsOutValue" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour.Client_ulong_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour" runstate="Runnable" testcasecount="2" result="Passed" start-time="2021-03-06 06:27:13Z" end-time="2021-03-06 06:27:13Z" duration="0.017158" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="5174" name="Client_ulong_setsOutValue(True)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour.Client_ulong_setsOutValue(True)" methodname="Client_ulong_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour" runstate="Runnable" seed="1374183292" result="Passed" start-time="2021-03-06 06:27:13Z" end-time="2021-03-06 06:27:13Z" duration="0.002115" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="5175" name="Client_ulong_setsOutValue(False)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour.Client_ulong_setsOutValue(False)" methodname="Client_ulong_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour" runstate="Runnable" seed="563786783" result="Passed" start-time="2021-03-06 06:27:13Z" end-time="2021-03-06 06:27:13Z" duration="0.003902" asserts="0">
                    <properties />
                    <output><![CDATA[[Client] function 'System.Void Mirror.Tests.Generated.Attributes.AttributeBehaviour_MonoBehaviour::Client_ulong_out_Function(System.UInt64&)' called when client was not active
]]></output>
                  </test-case>
                </test-suite>
                <test-suite type="ParameterizedMethod" id="5179" name="Client_Vector3_returnsValue" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour.Client_Vector3_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour" runstate="Runnable" testcasecount="2" result="Passed" start-time="2021-03-06 06:27:13Z" end-time="2021-03-06 06:27:13Z" duration="0.018230" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="5177" name="Client_Vector3_returnsValue(True)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour.Client_Vector3_returnsValue(True)" methodname="Client_Vector3_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour" runstate="Runnable" seed="949324762" result="Passed" start-time="2021-03-06 06:27:13Z" end-time="2021-03-06 06:27:13Z" duration="0.002180" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="5178" name="Client_Vector3_returnsValue(False)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour.Client_Vector3_returnsValue(False)" methodname="Client_Vector3_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour" runstate="Runnable" seed="369361443" result="Passed" start-time="2021-03-06 06:27:13Z" end-time="2021-03-06 06:27:13Z" duration="0.004053" asserts="0">
                    <properties />
                    <output><![CDATA[[Client] function 'UnityEngine.Vector3 Mirror.Tests.Generated.Attributes.AttributeBehaviour_MonoBehaviour::Client_Vector3_Function()' called when client was not active
]]></output>
                  </test-case>
                </test-suite>
                <test-suite type="ParameterizedMethod" id="5182" name="Client_Vector3_setsOutValue" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour.Client_Vector3_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour" runstate="Runnable" testcasecount="2" result="Passed" start-time="2021-03-06 06:27:13Z" end-time="2021-03-06 06:27:13Z" duration="0.022126" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="5180" name="Client_Vector3_setsOutValue(True)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour.Client_Vector3_setsOutValue(True)" methodname="Client_Vector3_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour" runstate="Runnable" seed="62795586" result="Passed" start-time="2021-03-06 06:27:13Z" end-time="2021-03-06 06:27:13Z" duration="0.002226" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="5181" name="Client_Vector3_setsOutValue(False)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour.Client_Vector3_setsOutValue(False)" methodname="Client_Vector3_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour" runstate="Runnable" seed="1871815533" result="Passed" start-time="2021-03-06 06:27:13Z" end-time="2021-03-06 06:27:13Z" duration="0.003667" asserts="0">
                    <properties />
                    <output><![CDATA[[Client] function 'System.Void Mirror.Tests.Generated.Attributes.AttributeBehaviour_MonoBehaviour::Client_Vector3_out_Function(UnityEngine.Vector3&)' called when client was not active
]]></output>
                  </test-case>
                </test-suite>
                <test-suite type="ParameterizedMethod" id="5275" name="ClientCallback_bool_returnsValue" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour.ClientCallback_bool_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour" runstate="Runnable" testcasecount="2" result="Passed" start-time="2021-03-06 06:27:13Z" end-time="2021-03-06 06:27:13Z" duration="0.018156" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="5273" name="ClientCallback_bool_returnsValue(True)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour.ClientCallback_bool_returnsValue(True)" methodname="ClientCallback_bool_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour" runstate="Runnable" seed="1310263276" result="Passed" start-time="2021-03-06 06:27:13Z" end-time="2021-03-06 06:27:13Z" duration="0.002345" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="5274" name="ClientCallback_bool_returnsValue(False)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour.ClientCallback_bool_returnsValue(False)" methodname="ClientCallback_bool_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour" runstate="Runnable" seed="63448609" result="Passed" start-time="2021-03-06 06:27:13Z" end-time="2021-03-06 06:27:13Z" duration="0.001899" asserts="0">
                    <properties />
                  </test-case>
                </test-suite>
                <test-suite type="ParameterizedMethod" id="5278" name="ClientCallback_bool_setsOutValue" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour.ClientCallback_bool_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour" runstate="Runnable" testcasecount="2" result="Passed" start-time="2021-03-06 06:27:13Z" end-time="2021-03-06 06:27:13Z" duration="0.020729" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="5276" name="ClientCallback_bool_setsOutValue(True)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour.ClientCallback_bool_setsOutValue(True)" methodname="ClientCallback_bool_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour" runstate="Runnable" seed="971173617" result="Passed" start-time="2021-03-06 06:27:13Z" end-time="2021-03-06 06:27:13Z" duration="0.002261" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="5277" name="ClientCallback_bool_setsOutValue(False)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour.ClientCallback_bool_setsOutValue(False)" methodname="ClientCallback_bool_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour" runstate="Runnable" seed="1786561513" result="Passed" start-time="2021-03-06 06:27:13Z" end-time="2021-03-06 06:27:13Z" duration="0.001780" asserts="0">
                    <properties />
                  </test-case>
                </test-suite>
                <test-suite type="ParameterizedMethod" id="5287" name="ClientCallback_byte_returnsValue" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour.ClientCallback_byte_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour" runstate="Runnable" testcasecount="2" result="Passed" start-time="2021-03-06 06:27:13Z" end-time="2021-03-06 06:27:13Z" duration="0.018061" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="5285" name="ClientCallback_byte_returnsValue(True)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour.ClientCallback_byte_returnsValue(True)" methodname="ClientCallback_byte_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour" runstate="Runnable" seed="376169044" result="Passed" start-time="2021-03-06 06:27:13Z" end-time="2021-03-06 06:27:13Z" duration="0.002056" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="5286" name="ClientCallback_byte_returnsValue(False)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour.ClientCallback_byte_returnsValue(False)" methodname="ClientCallback_byte_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour" runstate="Runnable" seed="1087072163" result="Passed" start-time="2021-03-06 06:27:13Z" end-time="2021-03-06 06:27:13Z" duration="0.001595" asserts="0">
                    <properties />
                  </test-case>
                </test-suite>
                <test-suite type="ParameterizedMethod" id="5290" name="ClientCallback_byte_setsOutValue" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour.ClientCallback_byte_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour" runstate="Runnable" testcasecount="2" result="Passed" start-time="2021-03-06 06:27:13Z" end-time="2021-03-06 06:27:13Z" duration="0.017488" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="5288" name="ClientCallback_byte_setsOutValue(True)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour.ClientCallback_byte_setsOutValue(True)" methodname="ClientCallback_byte_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour" runstate="Runnable" seed="1652987091" result="Passed" start-time="2021-03-06 06:27:13Z" end-time="2021-03-06 06:27:13Z" duration="0.002096" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="5289" name="ClientCallback_byte_setsOutValue(False)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour.ClientCallback_byte_setsOutValue(False)" methodname="ClientCallback_byte_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour" runstate="Runnable" seed="1022427766" result="Passed" start-time="2021-03-06 06:27:13Z" end-time="2021-03-06 06:27:13Z" duration="0.001964" asserts="0">
                    <properties />
                  </test-case>
                </test-suite>
                <test-suite type="ParameterizedMethod" id="5281" name="ClientCallback_char_returnsValue" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour.ClientCallback_char_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour" runstate="Runnable" testcasecount="2" result="Passed" start-time="2021-03-06 06:27:13Z" end-time="2021-03-06 06:27:13Z" duration="0.018249" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="5279" name="ClientCallback_char_returnsValue(True)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour.ClientCallback_char_returnsValue(True)" methodname="ClientCallback_char_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour" runstate="Runnable" seed="1601722521" result="Passed" start-time="2021-03-06 06:27:13Z" end-time="2021-03-06 06:27:13Z" duration="0.002305" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="5280" name="ClientCallback_char_returnsValue(False)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour.ClientCallback_char_returnsValue(False)" methodname="ClientCallback_char_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour" runstate="Runnable" seed="752142830" result="Passed" start-time="2021-03-06 06:27:13Z" end-time="2021-03-06 06:27:13Z" duration="0.001570" asserts="0">
                    <properties />
                  </test-case>
                </test-suite>
                <test-suite type="ParameterizedMethod" id="5284" name="ClientCallback_char_setsOutValue" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour.ClientCallback_char_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour" runstate="Runnable" testcasecount="2" result="Passed" start-time="2021-03-06 06:27:13Z" end-time="2021-03-06 06:27:13Z" duration="0.018789" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="5282" name="ClientCallback_char_setsOutValue(True)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour.ClientCallback_char_setsOutValue(True)" methodname="ClientCallback_char_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour" runstate="Runnable" seed="368848985" result="Passed" start-time="2021-03-06 06:27:13Z" end-time="2021-03-06 06:27:13Z" duration="0.002069" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="5283" name="ClientCallback_char_setsOutValue(False)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour.ClientCallback_char_setsOutValue(False)" methodname="ClientCallback_char_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour" runstate="Runnable" seed="2089986974" result="Passed" start-time="2021-03-06 06:27:13Z" end-time="2021-03-06 06:27:13Z" duration="0.001650" asserts="0">
                    <properties />
                  </test-case>
                </test-suite>
                <test-suite type="ParameterizedMethod" id="5323" name="ClientCallback_ClassWithConstructor_returnsValue" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour.ClientCallback_ClassWithConstructor_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour" runstate="Runnable" testcasecount="2" result="Passed" start-time="2021-03-06 06:27:13Z" end-time="2021-03-06 06:27:13Z" duration="0.019898" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="5321" name="ClientCallback_ClassWithConstructor_returnsValue(True)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour.ClientCallback_ClassWithConstructor_returnsValue(True)" methodname="ClientCallback_ClassWithConstructor_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour" runstate="Runnable" seed="1689970267" result="Passed" start-time="2021-03-06 06:27:13Z" end-time="2021-03-06 06:27:13Z" duration="0.001995" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="5322" name="ClientCallback_ClassWithConstructor_returnsValue(False)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour.ClientCallback_ClassWithConstructor_returnsValue(False)" methodname="ClientCallback_ClassWithConstructor_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour" runstate="Runnable" seed="669799911" result="Passed" start-time="2021-03-06 06:27:13Z" end-time="2021-03-06 06:27:13Z" duration="0.001816" asserts="0">
                    <properties />
                  </test-case>
                </test-suite>
                <test-suite type="ParameterizedMethod" id="5326" name="ClientCallback_ClassWithConstructor_setsOutValue" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour.ClientCallback_ClassWithConstructor_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour" runstate="Runnable" testcasecount="2" result="Passed" start-time="2021-03-06 06:27:13Z" end-time="2021-03-06 06:27:13Z" duration="0.015952" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="5324" name="ClientCallback_ClassWithConstructor_setsOutValue(True)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour.ClientCallback_ClassWithConstructor_setsOutValue(True)" methodname="ClientCallback_ClassWithConstructor_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour" runstate="Runnable" seed="1148478293" result="Passed" start-time="2021-03-06 06:27:13Z" end-time="2021-03-06 06:27:13Z" duration="0.002013" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="5325" name="ClientCallback_ClassWithConstructor_setsOutValue(False)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour.ClientCallback_ClassWithConstructor_setsOutValue(False)" methodname="ClientCallback_ClassWithConstructor_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour" runstate="Runnable" seed="933106531" result="Passed" start-time="2021-03-06 06:27:13Z" end-time="2021-03-06 06:27:13Z" duration="0.001746" asserts="0">
                    <properties />
                  </test-case>
                </test-suite>
                <test-suite type="ParameterizedMethod" id="5317" name="ClientCallback_ClassWithNoConstructor_returnsValue" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour.ClientCallback_ClassWithNoConstructor_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour" runstate="Runnable" testcasecount="2" result="Passed" start-time="2021-03-06 06:27:13Z" end-time="2021-03-06 06:27:13Z" duration="0.018342" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="5315" name="ClientCallback_ClassWithNoConstructor_returnsValue(True)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour.ClientCallback_ClassWithNoConstructor_returnsValue(True)" methodname="ClientCallback_ClassWithNoConstructor_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour" runstate="Runnable" seed="387603541" result="Passed" start-time="2021-03-06 06:27:13Z" end-time="2021-03-06 06:27:13Z" duration="0.002057" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="5316" name="ClientCallback_ClassWithNoConstructor_returnsValue(False)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour.ClientCallback_ClassWithNoConstructor_returnsValue(False)" methodname="ClientCallback_ClassWithNoConstructor_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour" runstate="Runnable" seed="202662124" result="Passed" start-time="2021-03-06 06:27:13Z" end-time="2021-03-06 06:27:13Z" duration="0.001647" asserts="0">
                    <properties />
                  </test-case>
                </test-suite>
                <test-suite type="ParameterizedMethod" id="5320" name="ClientCallback_ClassWithNoConstructor_setsOutValue" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour.ClientCallback_ClassWithNoConstructor_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour" runstate="Runnable" testcasecount="2" result="Passed" start-time="2021-03-06 06:27:13Z" end-time="2021-03-06 06:27:13Z" duration="0.018415" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="5318" name="ClientCallback_ClassWithNoConstructor_setsOutValue(True)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour.ClientCallback_ClassWithNoConstructor_setsOutValue(True)" methodname="ClientCallback_ClassWithNoConstructor_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour" runstate="Runnable" seed="957876618" result="Passed" start-time="2021-03-06 06:27:13Z" end-time="2021-03-06 06:27:13Z" duration="0.002166" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="5319" name="ClientCallback_ClassWithNoConstructor_setsOutValue(False)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour.ClientCallback_ClassWithNoConstructor_setsOutValue(False)" methodname="ClientCallback_ClassWithNoConstructor_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour" runstate="Runnable" seed="146667067" result="Passed" start-time="2021-03-06 06:27:13Z" end-time="2021-03-06 06:27:13Z" duration="0.001658" asserts="0">
                    <properties />
                  </test-case>
                </test-suite>
                <test-suite type="ParameterizedMethod" id="5269" name="ClientCallback_double_returnsValue" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour.ClientCallback_double_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour" runstate="Runnable" testcasecount="2" result="Passed" start-time="2021-03-06 06:27:13Z" end-time="2021-03-06 06:27:13Z" duration="0.020460" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="5267" name="ClientCallback_double_returnsValue(True)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour.ClientCallback_double_returnsValue(True)" methodname="ClientCallback_double_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour" runstate="Runnable" seed="1358769341" result="Passed" start-time="2021-03-06 06:27:13Z" end-time="2021-03-06 06:27:13Z" duration="0.002543" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="5268" name="ClientCallback_double_returnsValue(False)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour.ClientCallback_double_returnsValue(False)" methodname="ClientCallback_double_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour" runstate="Runnable" seed="1485741959" result="Passed" start-time="2021-03-06 06:27:13Z" end-time="2021-03-06 06:27:13Z" duration="0.001729" asserts="0">
                    <properties />
                  </test-case>
                </test-suite>
                <test-suite type="ParameterizedMethod" id="5272" name="ClientCallback_double_setsOutValue" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour.ClientCallback_double_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour" runstate="Runnable" testcasecount="2" result="Passed" start-time="2021-03-06 06:27:13Z" end-time="2021-03-06 06:27:13Z" duration="0.017047" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="5270" name="ClientCallback_double_setsOutValue(True)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour.ClientCallback_double_setsOutValue(True)" methodname="ClientCallback_double_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour" runstate="Runnable" seed="1729722146" result="Passed" start-time="2021-03-06 06:27:13Z" end-time="2021-03-06 06:27:13Z" duration="0.002153" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="5271" name="ClientCallback_double_setsOutValue(False)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour.ClientCallback_double_setsOutValue(False)" methodname="ClientCallback_double_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour" runstate="Runnable" seed="708856064" result="Passed" start-time="2021-03-06 06:27:13Z" end-time="2021-03-06 06:27:13Z" duration="0.002050" asserts="0">
                    <properties />
                  </test-case>
                </test-suite>
                <test-suite type="ParameterizedMethod" id="5263" name="ClientCallback_float_returnsValue" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour.ClientCallback_float_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour" runstate="Runnable" testcasecount="2" result="Passed" start-time="2021-03-06 06:27:13Z" end-time="2021-03-06 06:27:13Z" duration="0.017232" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="5261" name="ClientCallback_float_returnsValue(True)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour.ClientCallback_float_returnsValue(True)" methodname="ClientCallback_float_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour" runstate="Runnable" seed="1031986957" result="Passed" start-time="2021-03-06 06:27:13Z" end-time="2021-03-06 06:27:13Z" duration="0.002037" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="5262" name="ClientCallback_float_returnsValue(False)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour.ClientCallback_float_returnsValue(False)" methodname="ClientCallback_float_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour" runstate="Runnable" seed="486311226" result="Passed" start-time="2021-03-06 06:27:13Z" end-time="2021-03-06 06:27:13Z" duration="0.001602" asserts="0">
                    <properties />
                  </test-case>
                </test-suite>
                <test-suite type="ParameterizedMethod" id="5266" name="ClientCallback_float_setsOutValue" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour.ClientCallback_float_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour" runstate="Runnable" testcasecount="2" result="Passed" start-time="2021-03-06 06:27:13Z" end-time="2021-03-06 06:27:13Z" duration="0.017707" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="5264" name="ClientCallback_float_setsOutValue(True)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour.ClientCallback_float_setsOutValue(True)" methodname="ClientCallback_float_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour" runstate="Runnable" seed="1648940414" result="Passed" start-time="2021-03-06 06:27:13Z" end-time="2021-03-06 06:27:13Z" duration="0.002045" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="5265" name="ClientCallback_float_setsOutValue(False)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour.ClientCallback_float_setsOutValue(False)" methodname="ClientCallback_float_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour" runstate="Runnable" seed="1778257843" result="Passed" start-time="2021-03-06 06:27:13Z" end-time="2021-03-06 06:27:13Z" duration="0.001644" asserts="0">
                    <properties />
                  </test-case>
                </test-suite>
                <test-suite type="ParameterizedMethod" id="5293" name="ClientCallback_int_returnsValue" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour.ClientCallback_int_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour" runstate="Runnable" testcasecount="2" result="Passed" start-time="2021-03-06 06:27:13Z" end-time="2021-03-06 06:27:13Z" duration="0.017495" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="5291" name="ClientCallback_int_returnsValue(True)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour.ClientCallback_int_returnsValue(True)" methodname="ClientCallback_int_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour" runstate="Runnable" seed="1134085798" result="Passed" start-time="2021-03-06 06:27:13Z" end-time="2021-03-06 06:27:13Z" duration="0.002463" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="5292" name="ClientCallback_int_returnsValue(False)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour.ClientCallback_int_returnsValue(False)" methodname="ClientCallback_int_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour" runstate="Runnable" seed="152443995" result="Passed" start-time="2021-03-06 06:27:13Z" end-time="2021-03-06 06:27:13Z" duration="0.001624" asserts="0">
                    <properties />
                  </test-case>
                </test-suite>
                <test-suite type="ParameterizedMethod" id="5296" name="ClientCallback_int_setsOutValue" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour.ClientCallback_int_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour" runstate="Runnable" testcasecount="2" result="Passed" start-time="2021-03-06 06:27:13Z" end-time="2021-03-06 06:27:13Z" duration="0.017237" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="5294" name="ClientCallback_int_setsOutValue(True)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour.ClientCallback_int_setsOutValue(True)" methodname="ClientCallback_int_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour" runstate="Runnable" seed="550096049" result="Passed" start-time="2021-03-06 06:27:13Z" end-time="2021-03-06 06:27:13Z" duration="0.002094" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="5295" name="ClientCallback_int_setsOutValue(False)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour.ClientCallback_int_setsOutValue(False)" methodname="ClientCallback_int_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour" runstate="Runnable" seed="1177326426" result="Passed" start-time="2021-03-06 06:27:13Z" end-time="2021-03-06 06:27:13Z" duration="0.001645" asserts="0">
                    <properties />
                  </test-case>
                </test-suite>
                <test-suite type="ParameterizedMethod" id="5299" name="ClientCallback_long_returnsValue" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour.ClientCallback_long_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour" runstate="Runnable" testcasecount="2" result="Passed" start-time="2021-03-06 06:27:13Z" end-time="2021-03-06 06:27:13Z" duration="0.018124" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="5297" name="ClientCallback_long_returnsValue(True)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour.ClientCallback_long_returnsValue(True)" methodname="ClientCallback_long_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour" runstate="Runnable" seed="1645401351" result="Passed" start-time="2021-03-06 06:27:13Z" end-time="2021-03-06 06:27:13Z" duration="0.002126" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="5298" name="ClientCallback_long_returnsValue(False)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour.ClientCallback_long_returnsValue(False)" methodname="ClientCallback_long_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour" runstate="Runnable" seed="1580158383" result="Passed" start-time="2021-03-06 06:27:13Z" end-time="2021-03-06 06:27:13Z" duration="0.001789" asserts="0">
                    <properties />
                  </test-case>
                </test-suite>
                <test-suite type="ParameterizedMethod" id="5302" name="ClientCallback_long_setsOutValue" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour.ClientCallback_long_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour" runstate="Runnable" testcasecount="2" result="Passed" start-time="2021-03-06 06:27:13Z" end-time="2021-03-06 06:27:13Z" duration="0.017810" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="5300" name="ClientCallback_long_setsOutValue(True)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour.ClientCallback_long_setsOutValue(True)" methodname="ClientCallback_long_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour" runstate="Runnable" seed="2042634042" result="Passed" start-time="2021-03-06 06:27:13Z" end-time="2021-03-06 06:27:13Z" duration="0.002425" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="5301" name="ClientCallback_long_setsOutValue(False)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour.ClientCallback_long_setsOutValue(False)" methodname="ClientCallback_long_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour" runstate="Runnable" seed="231611228" result="Passed" start-time="2021-03-06 06:27:13Z" end-time="2021-03-06 06:27:13Z" duration="0.001664" asserts="0">
                    <properties />
                  </test-case>
                </test-suite>
                <test-suite type="ParameterizedMethod" id="5305" name="ClientCallback_ulong_returnsValue" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour.ClientCallback_ulong_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour" runstate="Runnable" testcasecount="2" result="Passed" start-time="2021-03-06 06:27:13Z" end-time="2021-03-06 06:27:13Z" duration="0.017436" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="5303" name="ClientCallback_ulong_returnsValue(True)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour.ClientCallback_ulong_returnsValue(True)" methodname="ClientCallback_ulong_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour" runstate="Runnable" seed="143882943" result="Passed" start-time="2021-03-06 06:27:13Z" end-time="2021-03-06 06:27:13Z" duration="0.002178" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="5304" name="ClientCallback_ulong_returnsValue(False)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour.ClientCallback_ulong_returnsValue(False)" methodname="ClientCallback_ulong_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour" runstate="Runnable" seed="170675154" result="Passed" start-time="2021-03-06 06:27:13Z" end-time="2021-03-06 06:27:13Z" duration="0.001738" asserts="0">
                    <properties />
                  </test-case>
                </test-suite>
                <test-suite type="ParameterizedMethod" id="5308" name="ClientCallback_ulong_setsOutValue" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour.ClientCallback_ulong_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour" runstate="Runnable" testcasecount="2" result="Passed" start-time="2021-03-06 06:27:13Z" end-time="2021-03-06 06:27:13Z" duration="0.017500" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="5306" name="ClientCallback_ulong_setsOutValue(True)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour.ClientCallback_ulong_setsOutValue(True)" methodname="ClientCallback_ulong_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour" runstate="Runnable" seed="1330794282" result="Passed" start-time="2021-03-06 06:27:13Z" end-time="2021-03-06 06:27:13Z" duration="0.002230" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="5307" name="ClientCallback_ulong_setsOutValue(False)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour.ClientCallback_ulong_setsOutValue(False)" methodname="ClientCallback_ulong_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour" runstate="Runnable" seed="1222846388" result="Passed" start-time="2021-03-06 06:27:13Z" end-time="2021-03-06 06:27:13Z" duration="0.001693" asserts="0">
                    <properties />
                  </test-case>
                </test-suite>
                <test-suite type="ParameterizedMethod" id="5311" name="ClientCallback_Vector3_returnsValue" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour.ClientCallback_Vector3_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour" runstate="Runnable" testcasecount="2" result="Passed" start-time="2021-03-06 06:27:13Z" end-time="2021-03-06 06:27:13Z" duration="0.017720" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="5309" name="ClientCallback_Vector3_returnsValue(True)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour.ClientCallback_Vector3_returnsValue(True)" methodname="ClientCallback_Vector3_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour" runstate="Runnable" seed="201776212" result="Passed" start-time="2021-03-06 06:27:13Z" end-time="2021-03-06 06:27:13Z" duration="0.002208" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="5310" name="ClientCallback_Vector3_returnsValue(False)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour.ClientCallback_Vector3_returnsValue(False)" methodname="ClientCallback_Vector3_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour" runstate="Runnable" seed="221890093" result="Passed" start-time="2021-03-06 06:27:13Z" end-time="2021-03-06 06:27:13Z" duration="0.001750" asserts="0">
                    <properties />
                  </test-case>
                </test-suite>
                <test-suite type="ParameterizedMethod" id="5314" name="ClientCallback_Vector3_setsOutValue" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour.ClientCallback_Vector3_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour" runstate="Runnable" testcasecount="2" result="Passed" start-time="2021-03-06 06:27:13Z" end-time="2021-03-06 06:27:13Z" duration="0.017488" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="5312" name="ClientCallback_Vector3_setsOutValue(True)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour.ClientCallback_Vector3_setsOutValue(True)" methodname="ClientCallback_Vector3_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour" runstate="Runnable" seed="1292208301" result="Passed" start-time="2021-03-06 06:27:13Z" end-time="2021-03-06 06:27:13Z" duration="0.002599" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="5313" name="ClientCallback_Vector3_setsOutValue(False)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour.ClientCallback_Vector3_setsOutValue(False)" methodname="ClientCallback_Vector3_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour" runstate="Runnable" seed="40646428" result="Passed" start-time="2021-03-06 06:27:13Z" end-time="2021-03-06 06:27:13Z" duration="0.001663" asserts="0">
                    <properties />
                  </test-case>
                </test-suite>
                <test-suite type="ParameterizedMethod" id="5209" name="Server_bool_returnsValue" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour.Server_bool_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour" runstate="Runnable" testcasecount="2" result="Passed" start-time="2021-03-06 06:27:13Z" end-time="2021-03-06 06:27:13Z" duration="0.021617" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="5207" name="Server_bool_returnsValue(True)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour.Server_bool_returnsValue(True)" methodname="Server_bool_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour" runstate="Runnable" seed="1986460444" result="Passed" start-time="2021-03-06 06:27:13Z" end-time="2021-03-06 06:27:13Z" duration="0.002772" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="5208" name="Server_bool_returnsValue(False)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour.Server_bool_returnsValue(False)" methodname="Server_bool_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour" runstate="Runnable" seed="223227591" result="Passed" start-time="2021-03-06 06:27:13Z" end-time="2021-03-06 06:27:13Z" duration="0.004440" asserts="0">
                    <properties />
                    <output><![CDATA[[Server] function 'System.Boolean Mirror.Tests.Generated.Attributes.AttributeBehaviour_MonoBehaviour::Server_bool_Function()' called when server was not active
]]></output>
                  </test-case>
                </test-suite>
                <test-suite type="ParameterizedMethod" id="5212" name="Server_bool_setsOutValue" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour.Server_bool_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour" runstate="Runnable" testcasecount="2" result="Passed" start-time="2021-03-06 06:27:13Z" end-time="2021-03-06 06:27:13Z" duration="0.019557" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="5210" name="Server_bool_setsOutValue(True)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour.Server_bool_setsOutValue(True)" methodname="Server_bool_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour" runstate="Runnable" seed="1061712223" result="Passed" start-time="2021-03-06 06:27:13Z" end-time="2021-03-06 06:27:13Z" duration="0.002231" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="5211" name="Server_bool_setsOutValue(False)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour.Server_bool_setsOutValue(False)" methodname="Server_bool_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour" runstate="Runnable" seed="570551412" result="Passed" start-time="2021-03-06 06:27:13Z" end-time="2021-03-06 06:27:13Z" duration="0.003857" asserts="0">
                    <properties />
                    <output><![CDATA[[Server] function 'System.Void Mirror.Tests.Generated.Attributes.AttributeBehaviour_MonoBehaviour::Server_bool_out_Function(System.Boolean&)' called when server was not active
]]></output>
                  </test-case>
                </test-suite>
                <test-suite type="ParameterizedMethod" id="5221" name="Server_byte_returnsValue" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour.Server_byte_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour" runstate="Runnable" testcasecount="2" result="Passed" start-time="2021-03-06 06:27:13Z" end-time="2021-03-06 06:27:13Z" duration="0.018075" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="5219" name="Server_byte_returnsValue(True)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour.Server_byte_returnsValue(True)" methodname="Server_byte_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour" runstate="Runnable" seed="2085131495" result="Passed" start-time="2021-03-06 06:27:13Z" end-time="2021-03-06 06:27:13Z" duration="0.002099" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="5220" name="Server_byte_returnsValue(False)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour.Server_byte_returnsValue(False)" methodname="Server_byte_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour" runstate="Runnable" seed="1886811614" result="Passed" start-time="2021-03-06 06:27:13Z" end-time="2021-03-06 06:27:13Z" duration="0.004229" asserts="0">
                    <properties />
                    <output><![CDATA[[Server] function 'System.Byte Mirror.Tests.Generated.Attributes.AttributeBehaviour_MonoBehaviour::Server_byte_Function()' called when server was not active
]]></output>
                  </test-case>
                </test-suite>
                <test-suite type="ParameterizedMethod" id="5224" name="Server_byte_setsOutValue" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour.Server_byte_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour" runstate="Runnable" testcasecount="2" result="Passed" start-time="2021-03-06 06:27:13Z" end-time="2021-03-06 06:27:13Z" duration="0.022746" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="5222" name="Server_byte_setsOutValue(True)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour.Server_byte_setsOutValue(True)" methodname="Server_byte_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour" runstate="Runnable" seed="1742335903" result="Passed" start-time="2021-03-06 06:27:13Z" end-time="2021-03-06 06:27:13Z" duration="0.002125" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="5223" name="Server_byte_setsOutValue(False)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour.Server_byte_setsOutValue(False)" methodname="Server_byte_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour" runstate="Runnable" seed="73786861" result="Passed" start-time="2021-03-06 06:27:13Z" end-time="2021-03-06 06:27:13Z" duration="0.004170" asserts="0">
                    <properties />
                    <output><![CDATA[[Server] function 'System.Void Mirror.Tests.Generated.Attributes.AttributeBehaviour_MonoBehaviour::Server_byte_out_Function(System.Byte&)' called when server was not active
]]></output>
                  </test-case>
                </test-suite>
                <test-suite type="ParameterizedMethod" id="5215" name="Server_char_returnsValue" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour.Server_char_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour" runstate="Runnable" testcasecount="2" result="Passed" start-time="2021-03-06 06:27:13Z" end-time="2021-03-06 06:27:13Z" duration="0.019717" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="5213" name="Server_char_returnsValue(True)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour.Server_char_returnsValue(True)" methodname="Server_char_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour" runstate="Runnable" seed="537140839" result="Passed" start-time="2021-03-06 06:27:13Z" end-time="2021-03-06 06:27:13Z" duration="0.002132" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="5214" name="Server_char_returnsValue(False)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour.Server_char_returnsValue(False)" methodname="Server_char_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour" runstate="Runnable" seed="84414952" result="Passed" start-time="2021-03-06 06:27:13Z" end-time="2021-03-06 06:27:13Z" duration="0.003985" asserts="0">
                    <properties />
                    <output><![CDATA[[Server] function 'System.Char Mirror.Tests.Generated.Attributes.AttributeBehaviour_MonoBehaviour::Server_char_Function()' called when server was not active
]]></output>
                  </test-case>
                </test-suite>
                <test-suite type="ParameterizedMethod" id="5218" name="Server_char_setsOutValue" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour.Server_char_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour" runstate="Runnable" testcasecount="2" result="Passed" start-time="2021-03-06 06:27:13Z" end-time="2021-03-06 06:27:13Z" duration="0.016991" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="5216" name="Server_char_setsOutValue(True)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour.Server_char_setsOutValue(True)" methodname="Server_char_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour" runstate="Runnable" seed="829258141" result="Passed" start-time="2021-03-06 06:27:13Z" end-time="2021-03-06 06:27:13Z" duration="0.002099" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="5217" name="Server_char_setsOutValue(False)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour.Server_char_setsOutValue(False)" methodname="Server_char_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour" runstate="Runnable" seed="242946370" result="Passed" start-time="2021-03-06 06:27:13Z" end-time="2021-03-06 06:27:13Z" duration="0.004414" asserts="0">
                    <properties />
                    <output><![CDATA[[Server] function 'System.Void Mirror.Tests.Generated.Attributes.AttributeBehaviour_MonoBehaviour::Server_char_out_Function(System.Char&)' called when server was not active
]]></output>
                  </test-case>
                </test-suite>
                <test-suite type="ParameterizedMethod" id="5257" name="Server_ClassWithConstructor_returnsValue" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour.Server_ClassWithConstructor_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour" runstate="Runnable" testcasecount="2" result="Passed" start-time="2021-03-06 06:27:13Z" end-time="2021-03-06 06:27:13Z" duration="0.017528" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="5255" name="Server_ClassWithConstructor_returnsValue(True)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour.Server_ClassWithConstructor_returnsValue(True)" methodname="Server_ClassWithConstructor_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour" runstate="Runnable" seed="2046115260" result="Passed" start-time="2021-03-06 06:27:13Z" end-time="2021-03-06 06:27:13Z" duration="0.002596" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="5256" name="Server_ClassWithConstructor_returnsValue(False)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour.Server_ClassWithConstructor_returnsValue(False)" methodname="Server_ClassWithConstructor_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour" runstate="Runnable" seed="605266942" result="Passed" start-time="2021-03-06 06:27:13Z" end-time="2021-03-06 06:27:13Z" duration="0.003540" asserts="0">
                    <properties />
                    <output><![CDATA[[Server] function 'Mirror.Tests.Generators.ClassWithConstructor Mirror.Tests.Generated.Attributes.AttributeBehaviour_MonoBehaviour::Server_ClassWithConstructor_Function()' called when server was not active
]]></output>
                  </test-case>
                </test-suite>
                <test-suite type="ParameterizedMethod" id="5260" name="Server_ClassWithConstructor_setsOutValue" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour.Server_ClassWithConstructor_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour" runstate="Runnable" testcasecount="2" result="Passed" start-time="2021-03-06 06:27:13Z" end-time="2021-03-06 06:27:13Z" duration="0.020669" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="5258" name="Server_ClassWithConstructor_setsOutValue(True)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour.Server_ClassWithConstructor_setsOutValue(True)" methodname="Server_ClassWithConstructor_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour" runstate="Runnable" seed="1973903371" result="Passed" start-time="2021-03-06 06:27:13Z" end-time="2021-03-06 06:27:13Z" duration="0.002423" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="5259" name="Server_ClassWithConstructor_setsOutValue(False)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour.Server_ClassWithConstructor_setsOutValue(False)" methodname="Server_ClassWithConstructor_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour" runstate="Runnable" seed="125508443" result="Passed" start-time="2021-03-06 06:27:13Z" end-time="2021-03-06 06:27:13Z" duration="0.003571" asserts="0">
                    <properties />
                    <output><![CDATA[[Server] function 'System.Void Mirror.Tests.Generated.Attributes.AttributeBehaviour_MonoBehaviour::Server_ClassWithConstructor_out_Function(Mirror.Tests.Generators.ClassWithConstructor&)' called when server was not active
]]></output>
                  </test-case>
                </test-suite>
                <test-suite type="ParameterizedMethod" id="5251" name="Server_ClassWithNoConstructor_returnsValue" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour.Server_ClassWithNoConstructor_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour" runstate="Runnable" testcasecount="2" result="Passed" start-time="2021-03-06 06:27:13Z" end-time="2021-03-06 06:27:13Z" duration="0.018826" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="5249" name="Server_ClassWithNoConstructor_returnsValue(True)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour.Server_ClassWithNoConstructor_returnsValue(True)" methodname="Server_ClassWithNoConstructor_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour" runstate="Runnable" seed="1218065666" result="Passed" start-time="2021-03-06 06:27:13Z" end-time="2021-03-06 06:27:13Z" duration="0.002094" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="5250" name="Server_ClassWithNoConstructor_returnsValue(False)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour.Server_ClassWithNoConstructor_returnsValue(False)" methodname="Server_ClassWithNoConstructor_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour" runstate="Runnable" seed="435992308" result="Passed" start-time="2021-03-06 06:27:13Z" end-time="2021-03-06 06:27:13Z" duration="0.004588" asserts="0">
                    <properties />
                    <output><![CDATA[[Server] function 'Mirror.Tests.Generators.ClassWithNoConstructor Mirror.Tests.Generated.Attributes.AttributeBehaviour_MonoBehaviour::Server_ClassWithNoConstructor_Function()' called when server was not active
]]></output>
                  </test-case>
                </test-suite>
                <test-suite type="ParameterizedMethod" id="5254" name="Server_ClassWithNoConstructor_setsOutValue" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour.Server_ClassWithNoConstructor_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour" runstate="Runnable" testcasecount="2" result="Passed" start-time="2021-03-06 06:27:13Z" end-time="2021-03-06 06:27:13Z" duration="0.020714" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="5252" name="Server_ClassWithNoConstructor_setsOutValue(True)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour.Server_ClassWithNoConstructor_setsOutValue(True)" methodname="Server_ClassWithNoConstructor_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour" runstate="Runnable" seed="1093615074" result="Passed" start-time="2021-03-06 06:27:13Z" end-time="2021-03-06 06:27:13Z" duration="0.002302" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="5253" name="Server_ClassWithNoConstructor_setsOutValue(False)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour.Server_ClassWithNoConstructor_setsOutValue(False)" methodname="Server_ClassWithNoConstructor_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour" runstate="Runnable" seed="785127191" result="Passed" start-time="2021-03-06 06:27:13Z" end-time="2021-03-06 06:27:13Z" duration="0.004022" asserts="0">
                    <properties />
                    <output><![CDATA[[Server] function 'System.Void Mirror.Tests.Generated.Attributes.AttributeBehaviour_MonoBehaviour::Server_ClassWithNoConstructor_out_Function(Mirror.Tests.Generators.ClassWithNoConstructor&)' called when server was not active
]]></output>
                  </test-case>
                </test-suite>
                <test-suite type="ParameterizedMethod" id="5203" name="Server_double_returnsValue" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour.Server_double_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour" runstate="Runnable" testcasecount="2" result="Passed" start-time="2021-03-06 06:27:13Z" end-time="2021-03-06 06:27:13Z" duration="0.025963" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="5201" name="Server_double_returnsValue(True)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour.Server_double_returnsValue(True)" methodname="Server_double_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour" runstate="Runnable" seed="1941219942" result="Passed" start-time="2021-03-06 06:27:13Z" end-time="2021-03-06 06:27:13Z" duration="0.002422" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="5202" name="Server_double_returnsValue(False)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour.Server_double_returnsValue(False)" methodname="Server_double_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour" runstate="Runnable" seed="152986103" result="Passed" start-time="2021-03-06 06:27:13Z" end-time="2021-03-06 06:27:13Z" duration="0.004495" asserts="0">
                    <properties />
                    <output><![CDATA[[Server] function 'System.Double Mirror.Tests.Generated.Attributes.AttributeBehaviour_MonoBehaviour::Server_double_Function()' called when server was not active
]]></output>
                  </test-case>
                </test-suite>
                <test-suite type="ParameterizedMethod" id="5206" name="Server_double_setsOutValue" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour.Server_double_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour" runstate="Runnable" testcasecount="2" result="Passed" start-time="2021-03-06 06:27:13Z" end-time="2021-03-06 06:27:14Z" duration="0.018510" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="5204" name="Server_double_setsOutValue(True)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour.Server_double_setsOutValue(True)" methodname="Server_double_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour" runstate="Runnable" seed="775850788" result="Passed" start-time="2021-03-06 06:27:14Z" end-time="2021-03-06 06:27:14Z" duration="0.002119" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="5205" name="Server_double_setsOutValue(False)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour.Server_double_setsOutValue(False)" methodname="Server_double_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour" runstate="Runnable" seed="1915773073" result="Passed" start-time="2021-03-06 06:27:14Z" end-time="2021-03-06 06:27:14Z" duration="0.003912" asserts="0">
                    <properties />
                    <output><![CDATA[[Server] function 'System.Void Mirror.Tests.Generated.Attributes.AttributeBehaviour_MonoBehaviour::Server_double_out_Function(System.Double&)' called when server was not active
]]></output>
                  </test-case>
                </test-suite>
                <test-suite type="ParameterizedMethod" id="5197" name="Server_float_returnsValue" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour.Server_float_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour" runstate="Runnable" testcasecount="2" result="Passed" start-time="2021-03-06 06:27:14Z" end-time="2021-03-06 06:27:14Z" duration="0.023153" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="5195" name="Server_float_returnsValue(True)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour.Server_float_returnsValue(True)" methodname="Server_float_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour" runstate="Runnable" seed="446999223" result="Passed" start-time="2021-03-06 06:27:14Z" end-time="2021-03-06 06:27:14Z" duration="0.002298" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="5196" name="Server_float_returnsValue(False)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour.Server_float_returnsValue(False)" methodname="Server_float_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour" runstate="Runnable" seed="1714115640" result="Passed" start-time="2021-03-06 06:27:14Z" end-time="2021-03-06 06:27:14Z" duration="0.004158" asserts="0">
                    <properties />
                    <output><![CDATA[[Server] function 'System.Single Mirror.Tests.Generated.Attributes.AttributeBehaviour_MonoBehaviour::Server_float_Function()' called when server was not active
]]></output>
                  </test-case>
                </test-suite>
                <test-suite type="ParameterizedMethod" id="5200" name="Server_float_setsOutValue" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour.Server_float_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour" runstate="Runnable" testcasecount="2" result="Passed" start-time="2021-03-06 06:27:14Z" end-time="2021-03-06 06:27:14Z" duration="0.020038" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="5198" name="Server_float_setsOutValue(True)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour.Server_float_setsOutValue(True)" methodname="Server_float_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour" runstate="Runnable" seed="1018398227" result="Passed" start-time="2021-03-06 06:27:14Z" end-time="2021-03-06 06:27:14Z" duration="0.002148" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="5199" name="Server_float_setsOutValue(False)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour.Server_float_setsOutValue(False)" methodname="Server_float_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour" runstate="Runnable" seed="1949957280" result="Passed" start-time="2021-03-06 06:27:14Z" end-time="2021-03-06 06:27:14Z" duration="0.004020" asserts="0">
                    <properties />
                    <output><![CDATA[[Server] function 'System.Void Mirror.Tests.Generated.Attributes.AttributeBehaviour_MonoBehaviour::Server_float_out_Function(System.Single&)' called when server was not active
]]></output>
                  </test-case>
                </test-suite>
                <test-suite type="ParameterizedMethod" id="5227" name="Server_int_returnsValue" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour.Server_int_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour" runstate="Runnable" testcasecount="2" result="Passed" start-time="2021-03-06 06:27:14Z" end-time="2021-03-06 06:27:14Z" duration="0.017048" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="5225" name="Server_int_returnsValue(True)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour.Server_int_returnsValue(True)" methodname="Server_int_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour" runstate="Runnable" seed="447101140" result="Passed" start-time="2021-03-06 06:27:14Z" end-time="2021-03-06 06:27:14Z" duration="0.002170" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="5226" name="Server_int_returnsValue(False)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour.Server_int_returnsValue(False)" methodname="Server_int_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour" runstate="Runnable" seed="433853533" result="Passed" start-time="2021-03-06 06:27:14Z" end-time="2021-03-06 06:27:14Z" duration="0.003996" asserts="0">
                    <properties />
                    <output><![CDATA[[Server] function 'System.Int32 Mirror.Tests.Generated.Attributes.AttributeBehaviour_MonoBehaviour::Server_int_Function()' called when server was not active
]]></output>
                  </test-case>
                </test-suite>
                <test-suite type="ParameterizedMethod" id="5230" name="Server_int_setsOutValue" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour.Server_int_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour" runstate="Runnable" testcasecount="2" result="Passed" start-time="2021-03-06 06:27:14Z" end-time="2021-03-06 06:27:14Z" duration="0.018116" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="5228" name="Server_int_setsOutValue(True)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour.Server_int_setsOutValue(True)" methodname="Server_int_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour" runstate="Runnable" seed="93693905" result="Passed" start-time="2021-03-06 06:27:14Z" end-time="2021-03-06 06:27:14Z" duration="0.002209" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="5229" name="Server_int_setsOutValue(False)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour.Server_int_setsOutValue(False)" methodname="Server_int_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour" runstate="Runnable" seed="1304841676" result="Passed" start-time="2021-03-06 06:27:14Z" end-time="2021-03-06 06:27:14Z" duration="0.003665" asserts="0">
                    <properties />
                    <output><![CDATA[[Server] function 'System.Void Mirror.Tests.Generated.Attributes.AttributeBehaviour_MonoBehaviour::Server_int_out_Function(System.Int32&)' called when server was not active
]]></output>
                  </test-case>
                </test-suite>
                <test-suite type="ParameterizedMethod" id="5233" name="Server_long_returnsValue" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour.Server_long_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour" runstate="Runnable" testcasecount="2" result="Passed" start-time="2021-03-06 06:27:14Z" end-time="2021-03-06 06:27:14Z" duration="0.020632" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="5231" name="Server_long_returnsValue(True)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour.Server_long_returnsValue(True)" methodname="Server_long_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour" runstate="Runnable" seed="1325549318" result="Passed" start-time="2021-03-06 06:27:14Z" end-time="2021-03-06 06:27:14Z" duration="0.002222" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="5232" name="Server_long_returnsValue(False)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour.Server_long_returnsValue(False)" methodname="Server_long_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour" runstate="Runnable" seed="137081730" result="Passed" start-time="2021-03-06 06:27:14Z" end-time="2021-03-06 06:27:14Z" duration="0.003894" asserts="0">
                    <properties />
                    <output><![CDATA[[Server] function 'System.Int64 Mirror.Tests.Generated.Attributes.AttributeBehaviour_MonoBehaviour::Server_long_Function()' called when server was not active
]]></output>
                  </test-case>
                </test-suite>
                <test-suite type="ParameterizedMethod" id="5236" name="Server_long_setsOutValue" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour.Server_long_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour" runstate="Runnable" testcasecount="2" result="Passed" start-time="2021-03-06 06:27:14Z" end-time="2021-03-06 06:27:14Z" duration="0.016951" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="5234" name="Server_long_setsOutValue(True)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour.Server_long_setsOutValue(True)" methodname="Server_long_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour" runstate="Runnable" seed="322605219" result="Passed" start-time="2021-03-06 06:27:14Z" end-time="2021-03-06 06:27:14Z" duration="0.002468" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="5235" name="Server_long_setsOutValue(False)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour.Server_long_setsOutValue(False)" methodname="Server_long_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour" runstate="Runnable" seed="2037488582" result="Passed" start-time="2021-03-06 06:27:14Z" end-time="2021-03-06 06:27:14Z" duration="0.004226" asserts="0">
                    <properties />
                    <output><![CDATA[[Server] function 'System.Void Mirror.Tests.Generated.Attributes.AttributeBehaviour_MonoBehaviour::Server_long_out_Function(System.Int64&)' called when server was not active
]]></output>
                  </test-case>
                </test-suite>
                <test-suite type="ParameterizedMethod" id="5239" name="Server_ulong_returnsValue" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour.Server_ulong_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour" runstate="Runnable" testcasecount="2" result="Passed" start-time="2021-03-06 06:27:14Z" end-time="2021-03-06 06:27:14Z" duration="0.017653" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="5237" name="Server_ulong_returnsValue(True)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour.Server_ulong_returnsValue(True)" methodname="Server_ulong_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour" runstate="Runnable" seed="2114903361" result="Passed" start-time="2021-03-06 06:27:14Z" end-time="2021-03-06 06:27:14Z" duration="0.002236" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="5238" name="Server_ulong_returnsValue(False)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour.Server_ulong_returnsValue(False)" methodname="Server_ulong_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour" runstate="Runnable" seed="230866022" result="Passed" start-time="2021-03-06 06:27:14Z" end-time="2021-03-06 06:27:14Z" duration="0.004112" asserts="0">
                    <properties />
                    <output><![CDATA[[Server] function 'System.UInt64 Mirror.Tests.Generated.Attributes.AttributeBehaviour_MonoBehaviour::Server_ulong_Function()' called when server was not active
]]></output>
                  </test-case>
                </test-suite>
                <test-suite type="ParameterizedMethod" id="5242" name="Server_ulong_setsOutValue" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour.Server_ulong_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour" runstate="Runnable" testcasecount="2" result="Passed" start-time="2021-03-06 06:27:14Z" end-time="2021-03-06 06:27:14Z" duration="0.022864" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="5240" name="Server_ulong_setsOutValue(True)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour.Server_ulong_setsOutValue(True)" methodname="Server_ulong_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour" runstate="Runnable" seed="243922610" result="Passed" start-time="2021-03-06 06:27:14Z" end-time="2021-03-06 06:27:14Z" duration="0.002337" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="5241" name="Server_ulong_setsOutValue(False)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour.Server_ulong_setsOutValue(False)" methodname="Server_ulong_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour" runstate="Runnable" seed="121118271" result="Passed" start-time="2021-03-06 06:27:14Z" end-time="2021-03-06 06:27:14Z" duration="0.004721" asserts="0">
                    <properties />
                    <output><![CDATA[[Server] function 'System.Void Mirror.Tests.Generated.Attributes.AttributeBehaviour_MonoBehaviour::Server_ulong_out_Function(System.UInt64&)' called when server was not active
]]></output>
                  </test-case>
                </test-suite>
                <test-suite type="ParameterizedMethod" id="5245" name="Server_Vector3_returnsValue" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour.Server_Vector3_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour" runstate="Runnable" testcasecount="2" result="Passed" start-time="2021-03-06 06:27:14Z" end-time="2021-03-06 06:27:14Z" duration="0.020831" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="5243" name="Server_Vector3_returnsValue(True)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour.Server_Vector3_returnsValue(True)" methodname="Server_Vector3_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour" runstate="Runnable" seed="1698245038" result="Passed" start-time="2021-03-06 06:27:14Z" end-time="2021-03-06 06:27:14Z" duration="0.002267" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="5244" name="Server_Vector3_returnsValue(False)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour.Server_Vector3_returnsValue(False)" methodname="Server_Vector3_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour" runstate="Runnable" seed="1082281284" result="Passed" start-time="2021-03-06 06:27:14Z" end-time="2021-03-06 06:27:14Z" duration="0.004069" asserts="0">
                    <properties />
                    <output><![CDATA[[Server] function 'UnityEngine.Vector3 Mirror.Tests.Generated.Attributes.AttributeBehaviour_MonoBehaviour::Server_Vector3_Function()' called when server was not active
]]></output>
                  </test-case>
                </test-suite>
                <test-suite type="ParameterizedMethod" id="5248" name="Server_Vector3_setsOutValue" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour.Server_Vector3_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour" runstate="Runnable" testcasecount="2" result="Passed" start-time="2021-03-06 06:27:14Z" end-time="2021-03-06 06:27:14Z" duration="0.022891" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="5246" name="Server_Vector3_setsOutValue(True)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour.Server_Vector3_setsOutValue(True)" methodname="Server_Vector3_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour" runstate="Runnable" seed="965125935" result="Passed" start-time="2021-03-06 06:27:14Z" end-time="2021-03-06 06:27:14Z" duration="0.002694" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="5247" name="Server_Vector3_setsOutValue(False)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour.Server_Vector3_setsOutValue(False)" methodname="Server_Vector3_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour" runstate="Runnable" seed="1593842869" result="Passed" start-time="2021-03-06 06:27:14Z" end-time="2021-03-06 06:27:14Z" duration="0.004507" asserts="0">
                    <properties />
                    <output><![CDATA[[Server] function 'System.Void Mirror.Tests.Generated.Attributes.AttributeBehaviour_MonoBehaviour::Server_Vector3_out_Function(UnityEngine.Vector3&)' called when server was not active
]]></output>
                  </test-case>
                </test-suite>
                <test-suite type="ParameterizedMethod" id="5341" name="ServerCallback_bool_returnsValue" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour.ServerCallback_bool_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour" runstate="Runnable" testcasecount="2" result="Passed" start-time="2021-03-06 06:27:14Z" end-time="2021-03-06 06:27:14Z" duration="0.020250" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="5339" name="ServerCallback_bool_returnsValue(True)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour.ServerCallback_bool_returnsValue(True)" methodname="ServerCallback_bool_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour" runstate="Runnable" seed="1941843479" result="Passed" start-time="2021-03-06 06:27:14Z" end-time="2021-03-06 06:27:14Z" duration="0.002097" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="5340" name="ServerCallback_bool_returnsValue(False)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour.ServerCallback_bool_returnsValue(False)" methodname="ServerCallback_bool_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour" runstate="Runnable" seed="65785070" result="Passed" start-time="2021-03-06 06:27:14Z" end-time="2021-03-06 06:27:14Z" duration="0.001828" asserts="0">
                    <properties />
                  </test-case>
                </test-suite>
                <test-suite type="ParameterizedMethod" id="5344" name="ServerCallback_bool_setsOutValue" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour.ServerCallback_bool_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour" runstate="Runnable" testcasecount="2" result="Passed" start-time="2021-03-06 06:27:14Z" end-time="2021-03-06 06:27:14Z" duration="0.017200" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="5342" name="ServerCallback_bool_setsOutValue(True)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour.ServerCallback_bool_setsOutValue(True)" methodname="ServerCallback_bool_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour" runstate="Runnable" seed="2066972216" result="Passed" start-time="2021-03-06 06:27:14Z" end-time="2021-03-06 06:27:14Z" duration="0.002171" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="5343" name="ServerCallback_bool_setsOutValue(False)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour.ServerCallback_bool_setsOutValue(False)" methodname="ServerCallback_bool_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour" runstate="Runnable" seed="1376930766" result="Passed" start-time="2021-03-06 06:27:14Z" end-time="2021-03-06 06:27:14Z" duration="0.001817" asserts="0">
                    <properties />
                  </test-case>
                </test-suite>
                <test-suite type="ParameterizedMethod" id="5353" name="ServerCallback_byte_returnsValue" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour.ServerCallback_byte_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour" runstate="Runnable" testcasecount="2" result="Passed" start-time="2021-03-06 06:27:14Z" end-time="2021-03-06 06:27:14Z" duration="0.018313" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="5351" name="ServerCallback_byte_returnsValue(True)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour.ServerCallback_byte_returnsValue(True)" methodname="ServerCallback_byte_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour" runstate="Runnable" seed="1279675641" result="Passed" start-time="2021-03-06 06:27:14Z" end-time="2021-03-06 06:27:14Z" duration="0.002074" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="5352" name="ServerCallback_byte_returnsValue(False)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour.ServerCallback_byte_returnsValue(False)" methodname="ServerCallback_byte_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour" runstate="Runnable" seed="1609876853" result="Passed" start-time="2021-03-06 06:27:14Z" end-time="2021-03-06 06:27:14Z" duration="0.001791" asserts="0">
                    <properties />
                  </test-case>
                </test-suite>
                <test-suite type="ParameterizedMethod" id="5356" name="ServerCallback_byte_setsOutValue" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour.ServerCallback_byte_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour" runstate="Runnable" testcasecount="2" result="Passed" start-time="2021-03-06 06:27:14Z" end-time="2021-03-06 06:27:14Z" duration="0.017535" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="5354" name="ServerCallback_byte_setsOutValue(True)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour.ServerCallback_byte_setsOutValue(True)" methodname="ServerCallback_byte_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour" runstate="Runnable" seed="293602763" result="Passed" start-time="2021-03-06 06:27:14Z" end-time="2021-03-06 06:27:14Z" duration="0.002327" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="5355" name="ServerCallback_byte_setsOutValue(False)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour.ServerCallback_byte_setsOutValue(False)" methodname="ServerCallback_byte_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour" runstate="Runnable" seed="1863082160" result="Passed" start-time="2021-03-06 06:27:14Z" end-time="2021-03-06 06:27:14Z" duration="0.001629" asserts="0">
                    <properties />
                  </test-case>
                </test-suite>
                <test-suite type="ParameterizedMethod" id="5347" name="ServerCallback_char_returnsValue" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour.ServerCallback_char_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour" runstate="Runnable" testcasecount="2" result="Passed" start-time="2021-03-06 06:27:14Z" end-time="2021-03-06 06:27:14Z" duration="0.019956" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="5345" name="ServerCallback_char_returnsValue(True)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour.ServerCallback_char_returnsValue(True)" methodname="ServerCallback_char_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour" runstate="Runnable" seed="2126366781" result="Passed" start-time="2021-03-06 06:27:14Z" end-time="2021-03-06 06:27:14Z" duration="0.002065" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="5346" name="ServerCallback_char_returnsValue(False)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour.ServerCallback_char_returnsValue(False)" methodname="ServerCallback_char_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour" runstate="Runnable" seed="457058710" result="Passed" start-time="2021-03-06 06:27:14Z" end-time="2021-03-06 06:27:14Z" duration="0.001969" asserts="0">
                    <properties />
                  </test-case>
                </test-suite>
                <test-suite type="ParameterizedMethod" id="5350" name="ServerCallback_char_setsOutValue" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour.ServerCallback_char_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour" runstate="Runnable" testcasecount="2" result="Passed" start-time="2021-03-06 06:27:14Z" end-time="2021-03-06 06:27:14Z" duration="0.020875" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="5348" name="ServerCallback_char_setsOutValue(True)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour.ServerCallback_char_setsOutValue(True)" methodname="ServerCallback_char_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour" runstate="Runnable" seed="1669996525" result="Passed" start-time="2021-03-06 06:27:14Z" end-time="2021-03-06 06:27:14Z" duration="0.002436" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="5349" name="ServerCallback_char_setsOutValue(False)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour.ServerCallback_char_setsOutValue(False)" methodname="ServerCallback_char_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour" runstate="Runnable" seed="2140150727" result="Passed" start-time="2021-03-06 06:27:14Z" end-time="2021-03-06 06:27:14Z" duration="0.001802" asserts="0">
                    <properties />
                  </test-case>
                </test-suite>
                <test-suite type="ParameterizedMethod" id="5389" name="ServerCallback_ClassWithConstructor_returnsValue" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour.ServerCallback_ClassWithConstructor_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour" runstate="Runnable" testcasecount="2" result="Passed" start-time="2021-03-06 06:27:14Z" end-time="2021-03-06 06:27:14Z" duration="0.014786" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="5387" name="ServerCallback_ClassWithConstructor_returnsValue(True)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour.ServerCallback_ClassWithConstructor_returnsValue(True)" methodname="ServerCallback_ClassWithConstructor_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour" runstate="Runnable" seed="1603038019" result="Passed" start-time="2021-03-06 06:27:14Z" end-time="2021-03-06 06:27:14Z" duration="0.002018" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="5388" name="ServerCallback_ClassWithConstructor_returnsValue(False)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour.ServerCallback_ClassWithConstructor_returnsValue(False)" methodname="ServerCallback_ClassWithConstructor_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour" runstate="Runnable" seed="615166268" result="Passed" start-time="2021-03-06 06:27:14Z" end-time="2021-03-06 06:27:14Z" duration="0.001780" asserts="0">
                    <properties />
                  </test-case>
                </test-suite>
                <test-suite type="ParameterizedMethod" id="5392" name="ServerCallback_ClassWithConstructor_setsOutValue" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour.ServerCallback_ClassWithConstructor_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour" runstate="Runnable" testcasecount="2" result="Passed" start-time="2021-03-06 06:27:14Z" end-time="2021-03-06 06:27:14Z" duration="0.018391" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="5390" name="ServerCallback_ClassWithConstructor_setsOutValue(True)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour.ServerCallback_ClassWithConstructor_setsOutValue(True)" methodname="ServerCallback_ClassWithConstructor_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour" runstate="Runnable" seed="1586224411" result="Passed" start-time="2021-03-06 06:27:14Z" end-time="2021-03-06 06:27:14Z" duration="0.002388" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="5391" name="ServerCallback_ClassWithConstructor_setsOutValue(False)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour.ServerCallback_ClassWithConstructor_setsOutValue(False)" methodname="ServerCallback_ClassWithConstructor_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour" runstate="Runnable" seed="156801943" result="Passed" start-time="2021-03-06 06:27:14Z" end-time="2021-03-06 06:27:14Z" duration="0.001606" asserts="0">
                    <properties />
                  </test-case>
                </test-suite>
                <test-suite type="ParameterizedMethod" id="5383" name="ServerCallback_ClassWithNoConstructor_returnsValue" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour.ServerCallback_ClassWithNoConstructor_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour" runstate="Runnable" testcasecount="2" result="Passed" start-time="2021-03-06 06:27:14Z" end-time="2021-03-06 06:27:14Z" duration="0.018803" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="5381" name="ServerCallback_ClassWithNoConstructor_returnsValue(True)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour.ServerCallback_ClassWithNoConstructor_returnsValue(True)" methodname="ServerCallback_ClassWithNoConstructor_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour" runstate="Runnable" seed="2066406168" result="Passed" start-time="2021-03-06 06:27:14Z" end-time="2021-03-06 06:27:14Z" duration="0.002167" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="5382" name="ServerCallback_ClassWithNoConstructor_returnsValue(False)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour.ServerCallback_ClassWithNoConstructor_returnsValue(False)" methodname="ServerCallback_ClassWithNoConstructor_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour" runstate="Runnable" seed="298114508" result="Passed" start-time="2021-03-06 06:27:14Z" end-time="2021-03-06 06:27:14Z" duration="0.001848" asserts="0">
                    <properties />
                  </test-case>
                </test-suite>
                <test-suite type="ParameterizedMethod" id="5386" name="ServerCallback_ClassWithNoConstructor_setsOutValue" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour.ServerCallback_ClassWithNoConstructor_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour" runstate="Runnable" testcasecount="2" result="Passed" start-time="2021-03-06 06:27:14Z" end-time="2021-03-06 06:27:14Z" duration="0.018864" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="5384" name="ServerCallback_ClassWithNoConstructor_setsOutValue(True)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour.ServerCallback_ClassWithNoConstructor_setsOutValue(True)" methodname="ServerCallback_ClassWithNoConstructor_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour" runstate="Runnable" seed="1929287457" result="Passed" start-time="2021-03-06 06:27:14Z" end-time="2021-03-06 06:27:14Z" duration="0.002064" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="5385" name="ServerCallback_ClassWithNoConstructor_setsOutValue(False)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour.ServerCallback_ClassWithNoConstructor_setsOutValue(False)" methodname="ServerCallback_ClassWithNoConstructor_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour" runstate="Runnable" seed="1420877727" result="Passed" start-time="2021-03-06 06:27:14Z" end-time="2021-03-06 06:27:14Z" duration="0.001640" asserts="0">
                    <properties />
                  </test-case>
                </test-suite>
                <test-suite type="ParameterizedMethod" id="5335" name="ServerCallback_double_returnsValue" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour.ServerCallback_double_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour" runstate="Runnable" testcasecount="2" result="Passed" start-time="2021-03-06 06:27:14Z" end-time="2021-03-06 06:27:14Z" duration="0.017534" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="5333" name="ServerCallback_double_returnsValue(True)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour.ServerCallback_double_returnsValue(True)" methodname="ServerCallback_double_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour" runstate="Runnable" seed="783198212" result="Passed" start-time="2021-03-06 06:27:14Z" end-time="2021-03-06 06:27:14Z" duration="0.002219" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="5334" name="ServerCallback_double_returnsValue(False)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour.ServerCallback_double_returnsValue(False)" methodname="ServerCallback_double_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour" runstate="Runnable" seed="972014427" result="Passed" start-time="2021-03-06 06:27:14Z" end-time="2021-03-06 06:27:14Z" duration="0.002028" asserts="0">
                    <properties />
                  </test-case>
                </test-suite>
                <test-suite type="ParameterizedMethod" id="5338" name="ServerCallback_double_setsOutValue" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour.ServerCallback_double_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour" runstate="Runnable" testcasecount="2" result="Passed" start-time="2021-03-06 06:27:14Z" end-time="2021-03-06 06:27:14Z" duration="0.017083" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="5336" name="ServerCallback_double_setsOutValue(True)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour.ServerCallback_double_setsOutValue(True)" methodname="ServerCallback_double_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour" runstate="Runnable" seed="982487303" result="Passed" start-time="2021-03-06 06:27:14Z" end-time="2021-03-06 06:27:14Z" duration="0.002359" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="5337" name="ServerCallback_double_setsOutValue(False)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour.ServerCallback_double_setsOutValue(False)" methodname="ServerCallback_double_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour" runstate="Runnable" seed="2126601773" result="Passed" start-time="2021-03-06 06:27:14Z" end-time="2021-03-06 06:27:14Z" duration="0.001818" asserts="0">
                    <properties />
                  </test-case>
                </test-suite>
                <test-suite type="ParameterizedMethod" id="5329" name="ServerCallback_float_returnsValue" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour.ServerCallback_float_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour" runstate="Runnable" testcasecount="2" result="Passed" start-time="2021-03-06 06:27:14Z" end-time="2021-03-06 06:27:14Z" duration="0.020005" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="5327" name="ServerCallback_float_returnsValue(True)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour.ServerCallback_float_returnsValue(True)" methodname="ServerCallback_float_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour" runstate="Runnable" seed="451007321" result="Passed" start-time="2021-03-06 06:27:14Z" end-time="2021-03-06 06:27:14Z" duration="0.002222" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="5328" name="ServerCallback_float_returnsValue(False)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour.ServerCallback_float_returnsValue(False)" methodname="ServerCallback_float_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour" runstate="Runnable" seed="1730817865" result="Passed" start-time="2021-03-06 06:27:14Z" end-time="2021-03-06 06:27:14Z" duration="0.001719" asserts="0">
                    <properties />
                  </test-case>
                </test-suite>
                <test-suite type="ParameterizedMethod" id="5332" name="ServerCallback_float_setsOutValue" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour.ServerCallback_float_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour" runstate="Runnable" testcasecount="2" result="Passed" start-time="2021-03-06 06:27:14Z" end-time="2021-03-06 06:27:14Z" duration="0.019719" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="5330" name="ServerCallback_float_setsOutValue(True)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour.ServerCallback_float_setsOutValue(True)" methodname="ServerCallback_float_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour" runstate="Runnable" seed="1700568507" result="Passed" start-time="2021-03-06 06:27:14Z" end-time="2021-03-06 06:27:14Z" duration="0.002112" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="5331" name="ServerCallback_float_setsOutValue(False)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour.ServerCallback_float_setsOutValue(False)" methodname="ServerCallback_float_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour" runstate="Runnable" seed="338643030" result="Passed" start-time="2021-03-06 06:27:14Z" end-time="2021-03-06 06:27:14Z" duration="0.001721" asserts="0">
                    <properties />
                  </test-case>
                </test-suite>
                <test-suite type="ParameterizedMethod" id="5359" name="ServerCallback_int_returnsValue" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour.ServerCallback_int_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour" runstate="Runnable" testcasecount="2" result="Passed" start-time="2021-03-06 06:27:14Z" end-time="2021-03-06 06:27:14Z" duration="0.017005" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="5357" name="ServerCallback_int_returnsValue(True)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour.ServerCallback_int_returnsValue(True)" methodname="ServerCallback_int_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour" runstate="Runnable" seed="534053037" result="Passed" start-time="2021-03-06 06:27:14Z" end-time="2021-03-06 06:27:14Z" duration="0.002204" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="5358" name="ServerCallback_int_returnsValue(False)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour.ServerCallback_int_returnsValue(False)" methodname="ServerCallback_int_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour" runstate="Runnable" seed="1960478795" result="Passed" start-time="2021-03-06 06:27:14Z" end-time="2021-03-06 06:27:14Z" duration="0.002011" asserts="0">
                    <properties />
                  </test-case>
                </test-suite>
                <test-suite type="ParameterizedMethod" id="5362" name="ServerCallback_int_setsOutValue" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour.ServerCallback_int_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour" runstate="Runnable" testcasecount="2" result="Passed" start-time="2021-03-06 06:27:14Z" end-time="2021-03-06 06:27:14Z" duration="0.018104" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="5360" name="ServerCallback_int_setsOutValue(True)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour.ServerCallback_int_setsOutValue(True)" methodname="ServerCallback_int_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour" runstate="Runnable" seed="1328458265" result="Passed" start-time="2021-03-06 06:27:14Z" end-time="2021-03-06 06:27:14Z" duration="0.002704" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="5361" name="ServerCallback_int_setsOutValue(False)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour.ServerCallback_int_setsOutValue(False)" methodname="ServerCallback_int_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour" runstate="Runnable" seed="1423181610" result="Passed" start-time="2021-03-06 06:27:14Z" end-time="2021-03-06 06:27:14Z" duration="0.001593" asserts="0">
                    <properties />
                  </test-case>
                </test-suite>
                <test-suite type="ParameterizedMethod" id="5365" name="ServerCallback_long_returnsValue" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour.ServerCallback_long_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour" runstate="Runnable" testcasecount="2" result="Passed" start-time="2021-03-06 06:27:14Z" end-time="2021-03-06 06:27:14Z" duration="0.018994" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="5363" name="ServerCallback_long_returnsValue(True)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour.ServerCallback_long_returnsValue(True)" methodname="ServerCallback_long_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour" runstate="Runnable" seed="1212637117" result="Passed" start-time="2021-03-06 06:27:14Z" end-time="2021-03-06 06:27:14Z" duration="0.002306" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="5364" name="ServerCallback_long_returnsValue(False)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour.ServerCallback_long_returnsValue(False)" methodname="ServerCallback_long_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour" runstate="Runnable" seed="1655174133" result="Passed" start-time="2021-03-06 06:27:14Z" end-time="2021-03-06 06:27:14Z" duration="0.001649" asserts="0">
                    <properties />
                  </test-case>
                </test-suite>
                <test-suite type="ParameterizedMethod" id="5368" name="ServerCallback_long_setsOutValue" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour.ServerCallback_long_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour" runstate="Runnable" testcasecount="2" result="Passed" start-time="2021-03-06 06:27:14Z" end-time="2021-03-06 06:27:14Z" duration="0.016892" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="5366" name="ServerCallback_long_setsOutValue(True)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour.ServerCallback_long_setsOutValue(True)" methodname="ServerCallback_long_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour" runstate="Runnable" seed="2145627058" result="Passed" start-time="2021-03-06 06:27:14Z" end-time="2021-03-06 06:27:14Z" duration="0.002143" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="5367" name="ServerCallback_long_setsOutValue(False)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour.ServerCallback_long_setsOutValue(False)" methodname="ServerCallback_long_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour" runstate="Runnable" seed="809321727" result="Passed" start-time="2021-03-06 06:27:14Z" end-time="2021-03-06 06:27:14Z" duration="0.001560" asserts="0">
                    <properties />
                  </test-case>
                </test-suite>
                <test-suite type="ParameterizedMethod" id="5371" name="ServerCallback_ulong_returnsValue" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour.ServerCallback_ulong_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour" runstate="Runnable" testcasecount="2" result="Passed" start-time="2021-03-06 06:27:14Z" end-time="2021-03-06 06:27:14Z" duration="0.015704" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="5369" name="ServerCallback_ulong_returnsValue(True)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour.ServerCallback_ulong_returnsValue(True)" methodname="ServerCallback_ulong_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour" runstate="Runnable" seed="1883673493" result="Passed" start-time="2021-03-06 06:27:14Z" end-time="2021-03-06 06:27:14Z" duration="0.002033" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="5370" name="ServerCallback_ulong_returnsValue(False)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour.ServerCallback_ulong_returnsValue(False)" methodname="ServerCallback_ulong_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour" runstate="Runnable" seed="1309423335" result="Passed" start-time="2021-03-06 06:27:14Z" end-time="2021-03-06 06:27:14Z" duration="0.001588" asserts="0">
                    <properties />
                  </test-case>
                </test-suite>
                <test-suite type="ParameterizedMethod" id="5374" name="ServerCallback_ulong_setsOutValue" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour.ServerCallback_ulong_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour" runstate="Runnable" testcasecount="2" result="Passed" start-time="2021-03-06 06:27:14Z" end-time="2021-03-06 06:27:14Z" duration="0.018507" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="5372" name="ServerCallback_ulong_setsOutValue(True)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour.ServerCallback_ulong_setsOutValue(True)" methodname="ServerCallback_ulong_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour" runstate="Runnable" seed="1719703814" result="Passed" start-time="2021-03-06 06:27:14Z" end-time="2021-03-06 06:27:14Z" duration="0.002185" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="5373" name="ServerCallback_ulong_setsOutValue(False)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour.ServerCallback_ulong_setsOutValue(False)" methodname="ServerCallback_ulong_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour" runstate="Runnable" seed="567210262" result="Passed" start-time="2021-03-06 06:27:14Z" end-time="2021-03-06 06:27:14Z" duration="0.001892" asserts="0">
                    <properties />
                  </test-case>
                </test-suite>
                <test-suite type="ParameterizedMethod" id="5377" name="ServerCallback_Vector3_returnsValue" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour.ServerCallback_Vector3_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour" runstate="Runnable" testcasecount="2" result="Passed" start-time="2021-03-06 06:27:14Z" end-time="2021-03-06 06:27:14Z" duration="0.044221" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="5375" name="ServerCallback_Vector3_returnsValue(True)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour.ServerCallback_Vector3_returnsValue(True)" methodname="ServerCallback_Vector3_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour" runstate="Runnable" seed="1292114807" result="Passed" start-time="2021-03-06 06:27:14Z" end-time="2021-03-06 06:27:14Z" duration="0.002454" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="5376" name="ServerCallback_Vector3_returnsValue(False)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour.ServerCallback_Vector3_returnsValue(False)" methodname="ServerCallback_Vector3_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour" runstate="Runnable" seed="1109134667" result="Passed" start-time="2021-03-06 06:27:14Z" end-time="2021-03-06 06:27:14Z" duration="0.001613" asserts="0">
                    <properties />
                  </test-case>
                </test-suite>
                <test-suite type="ParameterizedMethod" id="5380" name="ServerCallback_Vector3_setsOutValue" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour.ServerCallback_Vector3_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour" runstate="Runnable" testcasecount="2" result="Passed" start-time="2021-03-06 06:27:14Z" end-time="2021-03-06 06:27:14Z" duration="0.017758" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="5378" name="ServerCallback_Vector3_setsOutValue(True)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour.ServerCallback_Vector3_setsOutValue(True)" methodname="ServerCallback_Vector3_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour" runstate="Runnable" seed="375363565" result="Passed" start-time="2021-03-06 06:27:14Z" end-time="2021-03-06 06:27:14Z" duration="0.002391" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="5379" name="ServerCallback_Vector3_setsOutValue(False)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour.ServerCallback_Vector3_setsOutValue(False)" methodname="ServerCallback_Vector3_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_MonoBehaviour" runstate="Runnable" seed="1455367904" result="Passed" start-time="2021-03-06 06:27:14Z" end-time="2021-03-06 06:27:14Z" duration="0.001904" asserts="0">
                    <properties />
                  </test-case>
                </test-suite>
              </test-suite>
              <test-suite type="TestFixture" id="4863" name="AttributeTest_NetworkBehaviour" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour" classname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour" runstate="Runnable" testcasecount="176" result="Passed" start-time="2021-03-06 06:27:14Z" end-time="2021-03-06 06:27:16Z" duration="1.981348" total="176" passed="176" failed="0" inconclusive="0" skipped="0" asserts="0">
                <properties />
                <test-suite type="ParameterizedMethod" id="4878" name="Client_bool_returnsValue" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour.Client_bool_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour" runstate="Runnable" testcasecount="2" result="Passed" start-time="2021-03-06 06:27:14Z" end-time="2021-03-06 06:27:14Z" duration="0.018010" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="4876" name="Client_bool_returnsValue(True)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour.Client_bool_returnsValue(True)" methodname="Client_bool_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour" runstate="Runnable" seed="943600037" result="Passed" start-time="2021-03-06 06:27:14Z" end-time="2021-03-06 06:27:14Z" duration="0.002324" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="4877" name="Client_bool_returnsValue(False)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour.Client_bool_returnsValue(False)" methodname="Client_bool_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour" runstate="Runnable" seed="168117686" result="Passed" start-time="2021-03-06 06:27:14Z" end-time="2021-03-06 06:27:14Z" duration="0.003858" asserts="0">
                    <properties />
                    <output><![CDATA[[Client] function 'System.Boolean Mirror.Tests.Generated.Attributes.AttributeBehaviour_NetworkBehaviour::Client_bool_Function()' called when client was not active
]]></output>
                  </test-case>
                </test-suite>
                <test-suite type="ParameterizedMethod" id="4881" name="Client_bool_setsOutValue" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour.Client_bool_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour" runstate="Runnable" testcasecount="2" result="Passed" start-time="2021-03-06 06:27:14Z" end-time="2021-03-06 06:27:14Z" duration="0.022479" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="4879" name="Client_bool_setsOutValue(True)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour.Client_bool_setsOutValue(True)" methodname="Client_bool_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour" runstate="Runnable" seed="1805421823" result="Passed" start-time="2021-03-06 06:27:14Z" end-time="2021-03-06 06:27:14Z" duration="0.002470" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="4880" name="Client_bool_setsOutValue(False)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour.Client_bool_setsOutValue(False)" methodname="Client_bool_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour" runstate="Runnable" seed="594258179" result="Passed" start-time="2021-03-06 06:27:14Z" end-time="2021-03-06 06:27:14Z" duration="0.004313" asserts="0">
                    <properties />
                    <output><![CDATA[[Client] function 'System.Void Mirror.Tests.Generated.Attributes.AttributeBehaviour_NetworkBehaviour::Client_bool_out_Function(System.Boolean&)' called when client was not active
]]></output>
                  </test-case>
                </test-suite>
                <test-suite type="ParameterizedMethod" id="4890" name="Client_byte_returnsValue" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour.Client_byte_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour" runstate="Runnable" testcasecount="2" result="Passed" start-time="2021-03-06 06:27:14Z" end-time="2021-03-06 06:27:15Z" duration="0.020179" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="4888" name="Client_byte_returnsValue(True)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour.Client_byte_returnsValue(True)" methodname="Client_byte_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour" runstate="Runnable" seed="830675431" result="Passed" start-time="2021-03-06 06:27:14Z" end-time="2021-03-06 06:27:14Z" duration="0.002065" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="4889" name="Client_byte_returnsValue(False)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour.Client_byte_returnsValue(False)" methodname="Client_byte_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour" runstate="Runnable" seed="1967239917" result="Passed" start-time="2021-03-06 06:27:14Z" end-time="2021-03-06 06:27:15Z" duration="0.003873" asserts="0">
                    <properties />
                    <output><![CDATA[[Client] function 'System.Byte Mirror.Tests.Generated.Attributes.AttributeBehaviour_NetworkBehaviour::Client_byte_Function()' called when client was not active
]]></output>
                  </test-case>
                </test-suite>
                <test-suite type="ParameterizedMethod" id="4893" name="Client_byte_setsOutValue" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour.Client_byte_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour" runstate="Runnable" testcasecount="2" result="Passed" start-time="2021-03-06 06:27:15Z" end-time="2021-03-06 06:27:15Z" duration="0.021033" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="4891" name="Client_byte_setsOutValue(True)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour.Client_byte_setsOutValue(True)" methodname="Client_byte_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour" runstate="Runnable" seed="138031366" result="Passed" start-time="2021-03-06 06:27:15Z" end-time="2021-03-06 06:27:15Z" duration="0.002113" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="4892" name="Client_byte_setsOutValue(False)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour.Client_byte_setsOutValue(False)" methodname="Client_byte_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour" runstate="Runnable" seed="1735097713" result="Passed" start-time="2021-03-06 06:27:15Z" end-time="2021-03-06 06:27:15Z" duration="0.004142" asserts="0">
                    <properties />
                    <output><![CDATA[[Client] function 'System.Void Mirror.Tests.Generated.Attributes.AttributeBehaviour_NetworkBehaviour::Client_byte_out_Function(System.Byte&)' called when client was not active
]]></output>
                  </test-case>
                </test-suite>
                <test-suite type="ParameterizedMethod" id="4884" name="Client_char_returnsValue" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour.Client_char_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour" runstate="Runnable" testcasecount="2" result="Passed" start-time="2021-03-06 06:27:15Z" end-time="2021-03-06 06:27:15Z" duration="0.023778" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="4882" name="Client_char_returnsValue(True)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour.Client_char_returnsValue(True)" methodname="Client_char_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour" runstate="Runnable" seed="884504882" result="Passed" start-time="2021-03-06 06:27:15Z" end-time="2021-03-06 06:27:15Z" duration="0.002203" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="4883" name="Client_char_returnsValue(False)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour.Client_char_returnsValue(False)" methodname="Client_char_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour" runstate="Runnable" seed="949024970" result="Passed" start-time="2021-03-06 06:27:15Z" end-time="2021-03-06 06:27:15Z" duration="0.004156" asserts="0">
                    <properties />
                    <output><![CDATA[[Client] function 'System.Char Mirror.Tests.Generated.Attributes.AttributeBehaviour_NetworkBehaviour::Client_char_Function()' called when client was not active
]]></output>
                  </test-case>
                </test-suite>
                <test-suite type="ParameterizedMethod" id="4887" name="Client_char_setsOutValue" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour.Client_char_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour" runstate="Runnable" testcasecount="2" result="Passed" start-time="2021-03-06 06:27:15Z" end-time="2021-03-06 06:27:15Z" duration="0.020021" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="4885" name="Client_char_setsOutValue(True)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour.Client_char_setsOutValue(True)" methodname="Client_char_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour" runstate="Runnable" seed="559259848" result="Passed" start-time="2021-03-06 06:27:15Z" end-time="2021-03-06 06:27:15Z" duration="0.002578" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="4886" name="Client_char_setsOutValue(False)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour.Client_char_setsOutValue(False)" methodname="Client_char_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour" runstate="Runnable" seed="1786437793" result="Passed" start-time="2021-03-06 06:27:15Z" end-time="2021-03-06 06:27:15Z" duration="0.004456" asserts="0">
                    <properties />
                    <output><![CDATA[[Client] function 'System.Void Mirror.Tests.Generated.Attributes.AttributeBehaviour_NetworkBehaviour::Client_char_out_Function(System.Char&)' called when client was not active
]]></output>
                  </test-case>
                </test-suite>
                <test-suite type="ParameterizedMethod" id="4926" name="Client_ClassWithConstructor_returnsValue" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour.Client_ClassWithConstructor_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour" runstate="Runnable" testcasecount="2" result="Passed" start-time="2021-03-06 06:27:15Z" end-time="2021-03-06 06:27:15Z" duration="0.019514" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="4924" name="Client_ClassWithConstructor_returnsValue(True)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour.Client_ClassWithConstructor_returnsValue(True)" methodname="Client_ClassWithConstructor_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour" runstate="Runnable" seed="191116713" result="Passed" start-time="2021-03-06 06:27:15Z" end-time="2021-03-06 06:27:15Z" duration="0.002274" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="4925" name="Client_ClassWithConstructor_returnsValue(False)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour.Client_ClassWithConstructor_returnsValue(False)" methodname="Client_ClassWithConstructor_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour" runstate="Runnable" seed="1883022524" result="Passed" start-time="2021-03-06 06:27:15Z" end-time="2021-03-06 06:27:15Z" duration="0.003597" asserts="0">
                    <properties />
                    <output><![CDATA[[Client] function 'Mirror.Tests.Generators.ClassWithConstructor Mirror.Tests.Generated.Attributes.AttributeBehaviour_NetworkBehaviour::Client_ClassWithConstructor_Function()' called when client was not active
]]></output>
                  </test-case>
                </test-suite>
                <test-suite type="ParameterizedMethod" id="4929" name="Client_ClassWithConstructor_setsOutValue" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour.Client_ClassWithConstructor_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour" runstate="Runnable" testcasecount="2" result="Passed" start-time="2021-03-06 06:27:15Z" end-time="2021-03-06 06:27:15Z" duration="0.021592" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="4927" name="Client_ClassWithConstructor_setsOutValue(True)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour.Client_ClassWithConstructor_setsOutValue(True)" methodname="Client_ClassWithConstructor_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour" runstate="Runnable" seed="714903474" result="Passed" start-time="2021-03-06 06:27:15Z" end-time="2021-03-06 06:27:15Z" duration="0.002408" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="4928" name="Client_ClassWithConstructor_setsOutValue(False)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour.Client_ClassWithConstructor_setsOutValue(False)" methodname="Client_ClassWithConstructor_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour" runstate="Runnable" seed="313028994" result="Passed" start-time="2021-03-06 06:27:15Z" end-time="2021-03-06 06:27:15Z" duration="0.003663" asserts="0">
                    <properties />
                    <output><![CDATA[[Client] function 'System.Void Mirror.Tests.Generated.Attributes.AttributeBehaviour_NetworkBehaviour::Client_ClassWithConstructor_out_Function(Mirror.Tests.Generators.ClassWithConstructor&)' called when client was not active
]]></output>
                  </test-case>
                </test-suite>
                <test-suite type="ParameterizedMethod" id="4920" name="Client_ClassWithNoConstructor_returnsValue" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour.Client_ClassWithNoConstructor_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour" runstate="Runnable" testcasecount="2" result="Passed" start-time="2021-03-06 06:27:15Z" end-time="2021-03-06 06:27:15Z" duration="0.020603" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="4918" name="Client_ClassWithNoConstructor_returnsValue(True)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour.Client_ClassWithNoConstructor_returnsValue(True)" methodname="Client_ClassWithNoConstructor_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour" runstate="Runnable" seed="1339333400" result="Passed" start-time="2021-03-06 06:27:15Z" end-time="2021-03-06 06:27:15Z" duration="0.002101" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="4919" name="Client_ClassWithNoConstructor_returnsValue(False)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour.Client_ClassWithNoConstructor_returnsValue(False)" methodname="Client_ClassWithNoConstructor_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour" runstate="Runnable" seed="1772733190" result="Passed" start-time="2021-03-06 06:27:15Z" end-time="2021-03-06 06:27:15Z" duration="0.003771" asserts="0">
                    <properties />
                    <output><![CDATA[[Client] function 'Mirror.Tests.Generators.ClassWithNoConstructor Mirror.Tests.Generated.Attributes.AttributeBehaviour_NetworkBehaviour::Client_ClassWithNoConstructor_Function()' called when client was not active
]]></output>
                  </test-case>
                </test-suite>
                <test-suite type="ParameterizedMethod" id="4923" name="Client_ClassWithNoConstructor_setsOutValue" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour.Client_ClassWithNoConstructor_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour" runstate="Runnable" testcasecount="2" result="Passed" start-time="2021-03-06 06:27:15Z" end-time="2021-03-06 06:27:15Z" duration="0.020335" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="4921" name="Client_ClassWithNoConstructor_setsOutValue(True)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour.Client_ClassWithNoConstructor_setsOutValue(True)" methodname="Client_ClassWithNoConstructor_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour" runstate="Runnable" seed="2000467134" result="Passed" start-time="2021-03-06 06:27:15Z" end-time="2021-03-06 06:27:15Z" duration="0.002032" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="4922" name="Client_ClassWithNoConstructor_setsOutValue(False)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour.Client_ClassWithNoConstructor_setsOutValue(False)" methodname="Client_ClassWithNoConstructor_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour" runstate="Runnable" seed="1603951838" result="Passed" start-time="2021-03-06 06:27:15Z" end-time="2021-03-06 06:27:15Z" duration="0.004054" asserts="0">
                    <properties />
                    <output><![CDATA[[Client] function 'System.Void Mirror.Tests.Generated.Attributes.AttributeBehaviour_NetworkBehaviour::Client_ClassWithNoConstructor_out_Function(Mirror.Tests.Generators.ClassWithNoConstructor&)' called when client was not active
]]></output>
                  </test-case>
                </test-suite>
                <test-suite type="ParameterizedMethod" id="4872" name="Client_double_returnsValue" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour.Client_double_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour" runstate="Runnable" testcasecount="2" result="Passed" start-time="2021-03-06 06:27:15Z" end-time="2021-03-06 06:27:15Z" duration="0.020498" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="4870" name="Client_double_returnsValue(True)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour.Client_double_returnsValue(True)" methodname="Client_double_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour" runstate="Runnable" seed="2006992218" result="Passed" start-time="2021-03-06 06:27:15Z" end-time="2021-03-06 06:27:15Z" duration="0.002070" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="4871" name="Client_double_returnsValue(False)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour.Client_double_returnsValue(False)" methodname="Client_double_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour" runstate="Runnable" seed="60202082" result="Passed" start-time="2021-03-06 06:27:15Z" end-time="2021-03-06 06:27:15Z" duration="0.004103" asserts="0">
                    <properties />
                    <output><![CDATA[[Client] function 'System.Double Mirror.Tests.Generated.Attributes.AttributeBehaviour_NetworkBehaviour::Client_double_Function()' called when client was not active
]]></output>
                  </test-case>
                </test-suite>
                <test-suite type="ParameterizedMethod" id="4875" name="Client_double_setsOutValue" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour.Client_double_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour" runstate="Runnable" testcasecount="2" result="Passed" start-time="2021-03-06 06:27:15Z" end-time="2021-03-06 06:27:15Z" duration="0.016651" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="4873" name="Client_double_setsOutValue(True)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour.Client_double_setsOutValue(True)" methodname="Client_double_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour" runstate="Runnable" seed="1472856948" result="Passed" start-time="2021-03-06 06:27:15Z" end-time="2021-03-06 06:27:15Z" duration="0.002105" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="4874" name="Client_double_setsOutValue(False)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour.Client_double_setsOutValue(False)" methodname="Client_double_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour" runstate="Runnable" seed="1334328027" result="Passed" start-time="2021-03-06 06:27:15Z" end-time="2021-03-06 06:27:15Z" duration="0.003760" asserts="0">
                    <properties />
                    <output><![CDATA[[Client] function 'System.Void Mirror.Tests.Generated.Attributes.AttributeBehaviour_NetworkBehaviour::Client_double_out_Function(System.Double&)' called when client was not active
]]></output>
                  </test-case>
                </test-suite>
                <test-suite type="ParameterizedMethod" id="4866" name="Client_float_returnsValue" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour.Client_float_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour" runstate="Runnable" testcasecount="2" result="Passed" start-time="2021-03-06 06:27:15Z" end-time="2021-03-06 06:27:15Z" duration="0.019096" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="4864" name="Client_float_returnsValue(True)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour.Client_float_returnsValue(True)" methodname="Client_float_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour" runstate="Runnable" seed="1915784878" result="Passed" start-time="2021-03-06 06:27:15Z" end-time="2021-03-06 06:27:15Z" duration="0.002011" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="4865" name="Client_float_returnsValue(False)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour.Client_float_returnsValue(False)" methodname="Client_float_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour" runstate="Runnable" seed="1176610164" result="Passed" start-time="2021-03-06 06:27:15Z" end-time="2021-03-06 06:27:15Z" duration="0.003966" asserts="0">
                    <properties />
                    <output><![CDATA[[Client] function 'System.Single Mirror.Tests.Generated.Attributes.AttributeBehaviour_NetworkBehaviour::Client_float_Function()' called when client was not active
]]></output>
                  </test-case>
                </test-suite>
                <test-suite type="ParameterizedMethod" id="4869" name="Client_float_setsOutValue" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour.Client_float_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour" runstate="Runnable" testcasecount="2" result="Passed" start-time="2021-03-06 06:27:15Z" end-time="2021-03-06 06:27:15Z" duration="0.019908" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="4867" name="Client_float_setsOutValue(True)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour.Client_float_setsOutValue(True)" methodname="Client_float_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour" runstate="Runnable" seed="2012904137" result="Passed" start-time="2021-03-06 06:27:15Z" end-time="2021-03-06 06:27:15Z" duration="0.002089" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="4868" name="Client_float_setsOutValue(False)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour.Client_float_setsOutValue(False)" methodname="Client_float_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour" runstate="Runnable" seed="12429261" result="Passed" start-time="2021-03-06 06:27:15Z" end-time="2021-03-06 06:27:15Z" duration="0.003640" asserts="0">
                    <properties />
                    <output><![CDATA[[Client] function 'System.Void Mirror.Tests.Generated.Attributes.AttributeBehaviour_NetworkBehaviour::Client_float_out_Function(System.Single&)' called when client was not active
]]></output>
                  </test-case>
                </test-suite>
                <test-suite type="ParameterizedMethod" id="4896" name="Client_int_returnsValue" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour.Client_int_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour" runstate="Runnable" testcasecount="2" result="Passed" start-time="2021-03-06 06:27:15Z" end-time="2021-03-06 06:27:15Z" duration="0.022855" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="4894" name="Client_int_returnsValue(True)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour.Client_int_returnsValue(True)" methodname="Client_int_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour" runstate="Runnable" seed="1571783456" result="Passed" start-time="2021-03-06 06:27:15Z" end-time="2021-03-06 06:27:15Z" duration="0.002622" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="4895" name="Client_int_returnsValue(False)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour.Client_int_returnsValue(False)" methodname="Client_int_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour" runstate="Runnable" seed="1619596706" result="Passed" start-time="2021-03-06 06:27:15Z" end-time="2021-03-06 06:27:15Z" duration="0.004530" asserts="0">
                    <properties />
                    <output><![CDATA[[Client] function 'System.Int32 Mirror.Tests.Generated.Attributes.AttributeBehaviour_NetworkBehaviour::Client_int_Function()' called when client was not active
]]></output>
                  </test-case>
                </test-suite>
                <test-suite type="ParameterizedMethod" id="4899" name="Client_int_setsOutValue" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour.Client_int_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour" runstate="Runnable" testcasecount="2" result="Passed" start-time="2021-03-06 06:27:15Z" end-time="2021-03-06 06:27:15Z" duration="0.019524" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="4897" name="Client_int_setsOutValue(True)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour.Client_int_setsOutValue(True)" methodname="Client_int_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour" runstate="Runnable" seed="1820810943" result="Passed" start-time="2021-03-06 06:27:15Z" end-time="2021-03-06 06:27:15Z" duration="0.002320" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="4898" name="Client_int_setsOutValue(False)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour.Client_int_setsOutValue(False)" methodname="Client_int_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour" runstate="Runnable" seed="1318548574" result="Passed" start-time="2021-03-06 06:27:15Z" end-time="2021-03-06 06:27:15Z" duration="0.003564" asserts="0">
                    <properties />
                    <output><![CDATA[[Client] function 'System.Void Mirror.Tests.Generated.Attributes.AttributeBehaviour_NetworkBehaviour::Client_int_out_Function(System.Int32&)' called when client was not active
]]></output>
                  </test-case>
                </test-suite>
                <test-suite type="ParameterizedMethod" id="4902" name="Client_long_returnsValue" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour.Client_long_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour" runstate="Runnable" testcasecount="2" result="Passed" start-time="2021-03-06 06:27:15Z" end-time="2021-03-06 06:27:15Z" duration="0.018773" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="4900" name="Client_long_returnsValue(True)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour.Client_long_returnsValue(True)" methodname="Client_long_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour" runstate="Runnable" seed="205084990" result="Passed" start-time="2021-03-06 06:27:15Z" end-time="2021-03-06 06:27:15Z" duration="0.002788" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="4901" name="Client_long_returnsValue(False)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour.Client_long_returnsValue(False)" methodname="Client_long_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour" runstate="Runnable" seed="368178441" result="Passed" start-time="2021-03-06 06:27:15Z" end-time="2021-03-06 06:27:15Z" duration="0.004402" asserts="0">
                    <properties />
                    <output><![CDATA[[Client] function 'System.Int64 Mirror.Tests.Generated.Attributes.AttributeBehaviour_NetworkBehaviour::Client_long_Function()' called when client was not active
]]></output>
                  </test-case>
                </test-suite>
                <test-suite type="ParameterizedMethod" id="4905" name="Client_long_setsOutValue" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour.Client_long_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour" runstate="Runnable" testcasecount="2" result="Passed" start-time="2021-03-06 06:27:15Z" end-time="2021-03-06 06:27:15Z" duration="0.019694" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="4903" name="Client_long_setsOutValue(True)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour.Client_long_setsOutValue(True)" methodname="Client_long_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour" runstate="Runnable" seed="2059274025" result="Passed" start-time="2021-03-06 06:27:15Z" end-time="2021-03-06 06:27:15Z" duration="0.002160" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="4904" name="Client_long_setsOutValue(False)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour.Client_long_setsOutValue(False)" methodname="Client_long_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour" runstate="Runnable" seed="928926122" result="Passed" start-time="2021-03-06 06:27:15Z" end-time="2021-03-06 06:27:15Z" duration="0.003890" asserts="0">
                    <properties />
                    <output><![CDATA[[Client] function 'System.Void Mirror.Tests.Generated.Attributes.AttributeBehaviour_NetworkBehaviour::Client_long_out_Function(System.Int64&)' called when client was not active
]]></output>
                  </test-case>
                </test-suite>
                <test-suite type="ParameterizedMethod" id="4908" name="Client_ulong_returnsValue" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour.Client_ulong_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour" runstate="Runnable" testcasecount="2" result="Passed" start-time="2021-03-06 06:27:15Z" end-time="2021-03-06 06:27:15Z" duration="0.018109" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="4906" name="Client_ulong_returnsValue(True)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour.Client_ulong_returnsValue(True)" methodname="Client_ulong_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour" runstate="Runnable" seed="360373508" result="Passed" start-time="2021-03-06 06:27:15Z" end-time="2021-03-06 06:27:15Z" duration="0.002200" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="4907" name="Client_ulong_returnsValue(False)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour.Client_ulong_returnsValue(False)" methodname="Client_ulong_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour" runstate="Runnable" seed="1256774718" result="Passed" start-time="2021-03-06 06:27:15Z" end-time="2021-03-06 06:27:15Z" duration="0.003699" asserts="0">
                    <properties />
                    <output><![CDATA[[Client] function 'System.UInt64 Mirror.Tests.Generated.Attributes.AttributeBehaviour_NetworkBehaviour::Client_ulong_Function()' called when client was not active
]]></output>
                  </test-case>
                </test-suite>
                <test-suite type="ParameterizedMethod" id="4911" name="Client_ulong_setsOutValue" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour.Client_ulong_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour" runstate="Runnable" testcasecount="2" result="Passed" start-time="2021-03-06 06:27:15Z" end-time="2021-03-06 06:27:15Z" duration="0.021711" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="4909" name="Client_ulong_setsOutValue(True)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour.Client_ulong_setsOutValue(True)" methodname="Client_ulong_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour" runstate="Runnable" seed="752891915" result="Passed" start-time="2021-03-06 06:27:15Z" end-time="2021-03-06 06:27:15Z" duration="0.002207" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="4910" name="Client_ulong_setsOutValue(False)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour.Client_ulong_setsOutValue(False)" methodname="Client_ulong_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour" runstate="Runnable" seed="333735386" result="Passed" start-time="2021-03-06 06:27:15Z" end-time="2021-03-06 06:27:15Z" duration="0.003943" asserts="0">
                    <properties />
                    <output><![CDATA[[Client] function 'System.Void Mirror.Tests.Generated.Attributes.AttributeBehaviour_NetworkBehaviour::Client_ulong_out_Function(System.UInt64&)' called when client was not active
]]></output>
                  </test-case>
                </test-suite>
                <test-suite type="ParameterizedMethod" id="4914" name="Client_Vector3_returnsValue" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour.Client_Vector3_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour" runstate="Runnable" testcasecount="2" result="Passed" start-time="2021-03-06 06:27:15Z" end-time="2021-03-06 06:27:15Z" duration="0.022367" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="4912" name="Client_Vector3_returnsValue(True)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour.Client_Vector3_returnsValue(True)" methodname="Client_Vector3_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour" runstate="Runnable" seed="32982711" result="Passed" start-time="2021-03-06 06:27:15Z" end-time="2021-03-06 06:27:15Z" duration="0.002299" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="4913" name="Client_Vector3_returnsValue(False)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour.Client_Vector3_returnsValue(False)" methodname="Client_Vector3_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour" runstate="Runnable" seed="526946368" result="Passed" start-time="2021-03-06 06:27:15Z" end-time="2021-03-06 06:27:15Z" duration="0.003910" asserts="0">
                    <properties />
                    <output><![CDATA[[Client] function 'UnityEngine.Vector3 Mirror.Tests.Generated.Attributes.AttributeBehaviour_NetworkBehaviour::Client_Vector3_Function()' called when client was not active
]]></output>
                  </test-case>
                </test-suite>
                <test-suite type="ParameterizedMethod" id="4917" name="Client_Vector3_setsOutValue" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour.Client_Vector3_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour" runstate="Runnable" testcasecount="2" result="Passed" start-time="2021-03-06 06:27:15Z" end-time="2021-03-06 06:27:15Z" duration="0.019312" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="4915" name="Client_Vector3_setsOutValue(True)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour.Client_Vector3_setsOutValue(True)" methodname="Client_Vector3_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour" runstate="Runnable" seed="1531377886" result="Passed" start-time="2021-03-06 06:27:15Z" end-time="2021-03-06 06:27:15Z" duration="0.002214" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="4916" name="Client_Vector3_setsOutValue(False)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour.Client_Vector3_setsOutValue(False)" methodname="Client_Vector3_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour" runstate="Runnable" seed="398784850" result="Passed" start-time="2021-03-06 06:27:15Z" end-time="2021-03-06 06:27:15Z" duration="0.003721" asserts="0">
                    <properties />
                    <output><![CDATA[[Client] function 'System.Void Mirror.Tests.Generated.Attributes.AttributeBehaviour_NetworkBehaviour::Client_Vector3_out_Function(UnityEngine.Vector3&)' called when client was not active
]]></output>
                  </test-case>
                </test-suite>
                <test-suite type="ParameterizedMethod" id="5010" name="ClientCallback_bool_returnsValue" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour.ClientCallback_bool_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour" runstate="Runnable" testcasecount="2" result="Passed" start-time="2021-03-06 06:27:15Z" end-time="2021-03-06 06:27:15Z" duration="0.019967" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="5008" name="ClientCallback_bool_returnsValue(True)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour.ClientCallback_bool_returnsValue(True)" methodname="ClientCallback_bool_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour" runstate="Runnable" seed="1330728852" result="Passed" start-time="2021-03-06 06:27:15Z" end-time="2021-03-06 06:27:15Z" duration="0.002305" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="5009" name="ClientCallback_bool_returnsValue(False)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour.ClientCallback_bool_returnsValue(False)" methodname="ClientCallback_bool_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour" runstate="Runnable" seed="863243380" result="Passed" start-time="2021-03-06 06:27:15Z" end-time="2021-03-06 06:27:15Z" duration="0.001619" asserts="0">
                    <properties />
                  </test-case>
                </test-suite>
                <test-suite type="ParameterizedMethod" id="5013" name="ClientCallback_bool_setsOutValue" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour.ClientCallback_bool_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour" runstate="Runnable" testcasecount="2" result="Passed" start-time="2021-03-06 06:27:15Z" end-time="2021-03-06 06:27:15Z" duration="0.016993" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="5011" name="ClientCallback_bool_setsOutValue(True)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour.ClientCallback_bool_setsOutValue(True)" methodname="ClientCallback_bool_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour" runstate="Runnable" seed="1954515714" result="Passed" start-time="2021-03-06 06:27:15Z" end-time="2021-03-06 06:27:15Z" duration="0.002160" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="5012" name="ClientCallback_bool_setsOutValue(False)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour.ClientCallback_bool_setsOutValue(False)" methodname="ClientCallback_bool_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour" runstate="Runnable" seed="781153841" result="Passed" start-time="2021-03-06 06:27:15Z" end-time="2021-03-06 06:27:15Z" duration="0.001722" asserts="0">
                    <properties />
                  </test-case>
                </test-suite>
                <test-suite type="ParameterizedMethod" id="5022" name="ClientCallback_byte_returnsValue" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour.ClientCallback_byte_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour" runstate="Runnable" testcasecount="2" result="Passed" start-time="2021-03-06 06:27:15Z" end-time="2021-03-06 06:27:15Z" duration="0.021148" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="5020" name="ClientCallback_byte_returnsValue(True)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour.ClientCallback_byte_returnsValue(True)" methodname="ClientCallback_byte_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour" runstate="Runnable" seed="1677566690" result="Passed" start-time="2021-03-06 06:27:15Z" end-time="2021-03-06 06:27:15Z" duration="0.002129" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="5021" name="ClientCallback_byte_returnsValue(False)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour.ClientCallback_byte_returnsValue(False)" methodname="ClientCallback_byte_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour" runstate="Runnable" seed="120082788" result="Passed" start-time="2021-03-06 06:27:15Z" end-time="2021-03-06 06:27:15Z" duration="0.001778" asserts="0">
                    <properties />
                  </test-case>
                </test-suite>
                <test-suite type="ParameterizedMethod" id="5025" name="ClientCallback_byte_setsOutValue" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour.ClientCallback_byte_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour" runstate="Runnable" testcasecount="2" result="Passed" start-time="2021-03-06 06:27:15Z" end-time="2021-03-06 06:27:15Z" duration="0.017089" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="5023" name="ClientCallback_byte_setsOutValue(True)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour.ClientCallback_byte_setsOutValue(True)" methodname="ClientCallback_byte_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour" runstate="Runnable" seed="1586425050" result="Passed" start-time="2021-03-06 06:27:15Z" end-time="2021-03-06 06:27:15Z" duration="0.002294" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="5024" name="ClientCallback_byte_setsOutValue(False)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour.ClientCallback_byte_setsOutValue(False)" methodname="ClientCallback_byte_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour" runstate="Runnable" seed="2052296713" result="Passed" start-time="2021-03-06 06:27:15Z" end-time="2021-03-06 06:27:15Z" duration="0.001912" asserts="0">
                    <properties />
                  </test-case>
                </test-suite>
                <test-suite type="ParameterizedMethod" id="5016" name="ClientCallback_char_returnsValue" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour.ClientCallback_char_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour" runstate="Runnable" testcasecount="2" result="Passed" start-time="2021-03-06 06:27:15Z" end-time="2021-03-06 06:27:15Z" duration="0.016928" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="5014" name="ClientCallback_char_returnsValue(True)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour.ClientCallback_char_returnsValue(True)" methodname="ClientCallback_char_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour" runstate="Runnable" seed="833015734" result="Passed" start-time="2021-03-06 06:27:15Z" end-time="2021-03-06 06:27:15Z" duration="0.002271" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="5015" name="ClientCallback_char_returnsValue(False)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour.ClientCallback_char_returnsValue(False)" methodname="ClientCallback_char_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour" runstate="Runnable" seed="1035726995" result="Passed" start-time="2021-03-06 06:27:15Z" end-time="2021-03-06 06:27:15Z" duration="0.001575" asserts="0">
                    <properties />
                  </test-case>
                </test-suite>
                <test-suite type="ParameterizedMethod" id="5019" name="ClientCallback_char_setsOutValue" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour.ClientCallback_char_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour" runstate="Runnable" testcasecount="2" result="Passed" start-time="2021-03-06 06:27:15Z" end-time="2021-03-06 06:27:15Z" duration="0.017661" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="5017" name="ClientCallback_char_setsOutValue(True)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour.ClientCallback_char_setsOutValue(True)" methodname="ClientCallback_char_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour" runstate="Runnable" seed="1488390804" result="Passed" start-time="2021-03-06 06:27:15Z" end-time="2021-03-06 06:27:15Z" duration="0.002046" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="5018" name="ClientCallback_char_setsOutValue(False)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour.ClientCallback_char_setsOutValue(False)" methodname="ClientCallback_char_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour" runstate="Runnable" seed="2050414300" result="Passed" start-time="2021-03-06 06:27:15Z" end-time="2021-03-06 06:27:15Z" duration="0.001658" asserts="0">
                    <properties />
                  </test-case>
                </test-suite>
                <test-suite type="ParameterizedMethod" id="5058" name="ClientCallback_ClassWithConstructor_returnsValue" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour.ClientCallback_ClassWithConstructor_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour" runstate="Runnable" testcasecount="2" result="Passed" start-time="2021-03-06 06:27:15Z" end-time="2021-03-06 06:27:15Z" duration="0.017429" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="5056" name="ClientCallback_ClassWithConstructor_returnsValue(True)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour.ClientCallback_ClassWithConstructor_returnsValue(True)" methodname="ClientCallback_ClassWithConstructor_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour" runstate="Runnable" seed="643103356" result="Passed" start-time="2021-03-06 06:27:15Z" end-time="2021-03-06 06:27:15Z" duration="0.002320" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="5057" name="ClientCallback_ClassWithConstructor_returnsValue(False)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour.ClientCallback_ClassWithConstructor_returnsValue(False)" methodname="ClientCallback_ClassWithConstructor_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour" runstate="Runnable" seed="639587388" result="Passed" start-time="2021-03-06 06:27:15Z" end-time="2021-03-06 06:27:15Z" duration="0.001720" asserts="0">
                    <properties />
                  </test-case>
                </test-suite>
                <test-suite type="ParameterizedMethod" id="5061" name="ClientCallback_ClassWithConstructor_setsOutValue" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour.ClientCallback_ClassWithConstructor_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour" runstate="Runnable" testcasecount="2" result="Passed" start-time="2021-03-06 06:27:15Z" end-time="2021-03-06 06:27:15Z" duration="0.018105" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="5059" name="ClientCallback_ClassWithConstructor_setsOutValue(True)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour.ClientCallback_ClassWithConstructor_setsOutValue(True)" methodname="ClientCallback_ClassWithConstructor_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour" runstate="Runnable" seed="263513413" result="Passed" start-time="2021-03-06 06:27:15Z" end-time="2021-03-06 06:27:15Z" duration="0.002037" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="5060" name="ClientCallback_ClassWithConstructor_setsOutValue(False)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour.ClientCallback_ClassWithConstructor_setsOutValue(False)" methodname="ClientCallback_ClassWithConstructor_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour" runstate="Runnable" seed="2138164265" result="Passed" start-time="2021-03-06 06:27:15Z" end-time="2021-03-06 06:27:15Z" duration="0.001834" asserts="0">
                    <properties />
                  </test-case>
                </test-suite>
                <test-suite type="ParameterizedMethod" id="5052" name="ClientCallback_ClassWithNoConstructor_returnsValue" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour.ClientCallback_ClassWithNoConstructor_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour" runstate="Runnable" testcasecount="2" result="Passed" start-time="2021-03-06 06:27:15Z" end-time="2021-03-06 06:27:15Z" duration="0.016091" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="5050" name="ClientCallback_ClassWithNoConstructor_returnsValue(True)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour.ClientCallback_ClassWithNoConstructor_returnsValue(True)" methodname="ClientCallback_ClassWithNoConstructor_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour" runstate="Runnable" seed="291359338" result="Passed" start-time="2021-03-06 06:27:15Z" end-time="2021-03-06 06:27:15Z" duration="0.002043" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="5051" name="ClientCallback_ClassWithNoConstructor_returnsValue(False)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour.ClientCallback_ClassWithNoConstructor_returnsValue(False)" methodname="ClientCallback_ClassWithNoConstructor_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour" runstate="Runnable" seed="2034554050" result="Passed" start-time="2021-03-06 06:27:15Z" end-time="2021-03-06 06:27:15Z" duration="0.001781" asserts="0">
                    <properties />
                  </test-case>
                </test-suite>
                <test-suite type="ParameterizedMethod" id="5055" name="ClientCallback_ClassWithNoConstructor_setsOutValue" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour.ClientCallback_ClassWithNoConstructor_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour" runstate="Runnable" testcasecount="2" result="Passed" start-time="2021-03-06 06:27:15Z" end-time="2021-03-06 06:27:15Z" duration="0.017278" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="5053" name="ClientCallback_ClassWithNoConstructor_setsOutValue(True)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour.ClientCallback_ClassWithNoConstructor_setsOutValue(True)" methodname="ClientCallback_ClassWithNoConstructor_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour" runstate="Runnable" seed="478359680" result="Passed" start-time="2021-03-06 06:27:15Z" end-time="2021-03-06 06:27:15Z" duration="0.002083" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="5054" name="ClientCallback_ClassWithNoConstructor_setsOutValue(False)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour.ClientCallback_ClassWithNoConstructor_setsOutValue(False)" methodname="ClientCallback_ClassWithNoConstructor_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour" runstate="Runnable" seed="272186489" result="Passed" start-time="2021-03-06 06:27:15Z" end-time="2021-03-06 06:27:15Z" duration="0.001520" asserts="0">
                    <properties />
                  </test-case>
                </test-suite>
                <test-suite type="ParameterizedMethod" id="5004" name="ClientCallback_double_returnsValue" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour.ClientCallback_double_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour" runstate="Runnable" testcasecount="2" result="Passed" start-time="2021-03-06 06:27:15Z" end-time="2021-03-06 06:27:15Z" duration="0.018057" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="5002" name="ClientCallback_double_returnsValue(True)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour.ClientCallback_double_returnsValue(True)" methodname="ClientCallback_double_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour" runstate="Runnable" seed="1617340010" result="Passed" start-time="2021-03-06 06:27:15Z" end-time="2021-03-06 06:27:15Z" duration="0.002127" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="5003" name="ClientCallback_double_returnsValue(False)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour.ClientCallback_double_returnsValue(False)" methodname="ClientCallback_double_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour" runstate="Runnable" seed="1906064332" result="Passed" start-time="2021-03-06 06:27:15Z" end-time="2021-03-06 06:27:15Z" duration="0.001835" asserts="0">
                    <properties />
                  </test-case>
                </test-suite>
                <test-suite type="ParameterizedMethod" id="5007" name="ClientCallback_double_setsOutValue" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour.ClientCallback_double_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour" runstate="Runnable" testcasecount="2" result="Passed" start-time="2021-03-06 06:27:15Z" end-time="2021-03-06 06:27:15Z" duration="0.016350" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="5005" name="ClientCallback_double_setsOutValue(True)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour.ClientCallback_double_setsOutValue(True)" methodname="ClientCallback_double_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour" runstate="Runnable" seed="1302617174" result="Passed" start-time="2021-03-06 06:27:15Z" end-time="2021-03-06 06:27:15Z" duration="0.002273" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="5006" name="ClientCallback_double_setsOutValue(False)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour.ClientCallback_double_setsOutValue(False)" methodname="ClientCallback_double_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour" runstate="Runnable" seed="115811688" result="Passed" start-time="2021-03-06 06:27:15Z" end-time="2021-03-06 06:27:15Z" duration="0.001550" asserts="0">
                    <properties />
                  </test-case>
                </test-suite>
                <test-suite type="ParameterizedMethod" id="4998" name="ClientCallback_float_returnsValue" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour.ClientCallback_float_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour" runstate="Runnable" testcasecount="2" result="Passed" start-time="2021-03-06 06:27:15Z" end-time="2021-03-06 06:27:15Z" duration="0.018056" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="4996" name="ClientCallback_float_returnsValue(True)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour.ClientCallback_float_returnsValue(True)" methodname="ClientCallback_float_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour" runstate="Runnable" seed="1545721050" result="Passed" start-time="2021-03-06 06:27:15Z" end-time="2021-03-06 06:27:15Z" duration="0.002043" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="4997" name="ClientCallback_float_returnsValue(False)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour.ClientCallback_float_returnsValue(False)" methodname="ClientCallback_float_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour" runstate="Runnable" seed="827333790" result="Passed" start-time="2021-03-06 06:27:15Z" end-time="2021-03-06 06:27:15Z" duration="0.001556" asserts="0">
                    <properties />
                  </test-case>
                </test-suite>
                <test-suite type="ParameterizedMethod" id="5001" name="ClientCallback_float_setsOutValue" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour.ClientCallback_float_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour" runstate="Runnable" testcasecount="2" result="Passed" start-time="2021-03-06 06:27:15Z" end-time="2021-03-06 06:27:15Z" duration="0.017469" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="4999" name="ClientCallback_float_setsOutValue(True)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour.ClientCallback_float_setsOutValue(True)" methodname="ClientCallback_float_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour" runstate="Runnable" seed="887730588" result="Passed" start-time="2021-03-06 06:27:15Z" end-time="2021-03-06 06:27:15Z" duration="0.002121" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="5000" name="ClientCallback_float_setsOutValue(False)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour.ClientCallback_float_setsOutValue(False)" methodname="ClientCallback_float_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour" runstate="Runnable" seed="139409026" result="Passed" start-time="2021-03-06 06:27:15Z" end-time="2021-03-06 06:27:15Z" duration="0.001794" asserts="0">
                    <properties />
                  </test-case>
                </test-suite>
                <test-suite type="ParameterizedMethod" id="5028" name="ClientCallback_int_returnsValue" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour.ClientCallback_int_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour" runstate="Runnable" testcasecount="2" result="Passed" start-time="2021-03-06 06:27:15Z" end-time="2021-03-06 06:27:15Z" duration="0.046734" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="5026" name="ClientCallback_int_returnsValue(True)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour.ClientCallback_int_returnsValue(True)" methodname="ClientCallback_int_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour" runstate="Runnable" seed="798976205" result="Passed" start-time="2021-03-06 06:27:15Z" end-time="2021-03-06 06:27:15Z" duration="0.002161" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="5027" name="ClientCallback_int_returnsValue(False)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour.ClientCallback_int_returnsValue(False)" methodname="ClientCallback_int_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour" runstate="Runnable" seed="68231560" result="Passed" start-time="2021-03-06 06:27:15Z" end-time="2021-03-06 06:27:15Z" duration="0.030528" asserts="0">
                    <properties />
                  </test-case>
                </test-suite>
                <test-suite type="ParameterizedMethod" id="5031" name="ClientCallback_int_setsOutValue" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour.ClientCallback_int_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour" runstate="Runnable" testcasecount="2" result="Passed" start-time="2021-03-06 06:27:15Z" end-time="2021-03-06 06:27:15Z" duration="0.017840" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="5029" name="ClientCallback_int_setsOutValue(True)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour.ClientCallback_int_setsOutValue(True)" methodname="ClientCallback_int_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour" runstate="Runnable" seed="2055421785" result="Passed" start-time="2021-03-06 06:27:15Z" end-time="2021-03-06 06:27:15Z" duration="0.002514" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="5030" name="ClientCallback_int_setsOutValue(False)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour.ClientCallback_int_setsOutValue(False)" methodname="ClientCallback_int_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour" runstate="Runnable" seed="960379571" result="Passed" start-time="2021-03-06 06:27:15Z" end-time="2021-03-06 06:27:15Z" duration="0.001763" asserts="0">
                    <properties />
                  </test-case>
                </test-suite>
                <test-suite type="ParameterizedMethod" id="5034" name="ClientCallback_long_returnsValue" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour.ClientCallback_long_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour" runstate="Runnable" testcasecount="2" result="Passed" start-time="2021-03-06 06:27:15Z" end-time="2021-03-06 06:27:15Z" duration="0.019891" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="5032" name="ClientCallback_long_returnsValue(True)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour.ClientCallback_long_returnsValue(True)" methodname="ClientCallback_long_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour" runstate="Runnable" seed="1827638069" result="Passed" start-time="2021-03-06 06:27:15Z" end-time="2021-03-06 06:27:15Z" duration="0.002430" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="5033" name="ClientCallback_long_returnsValue(False)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour.ClientCallback_long_returnsValue(False)" methodname="ClientCallback_long_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour" runstate="Runnable" seed="1627687108" result="Passed" start-time="2021-03-06 06:27:15Z" end-time="2021-03-06 06:27:15Z" duration="0.001728" asserts="0">
                    <properties />
                  </test-case>
                </test-suite>
                <test-suite type="ParameterizedMethod" id="5037" name="ClientCallback_long_setsOutValue" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour.ClientCallback_long_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour" runstate="Runnable" testcasecount="2" result="Passed" start-time="2021-03-06 06:27:15Z" end-time="2021-03-06 06:27:15Z" duration="0.017349" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="5035" name="ClientCallback_long_setsOutValue(True)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour.ClientCallback_long_setsOutValue(True)" methodname="ClientCallback_long_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour" runstate="Runnable" seed="370146514" result="Passed" start-time="2021-03-06 06:27:15Z" end-time="2021-03-06 06:27:15Z" duration="0.002039" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="5036" name="ClientCallback_long_setsOutValue(False)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour.ClientCallback_long_setsOutValue(False)" methodname="ClientCallback_long_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour" runstate="Runnable" seed="1945026545" result="Passed" start-time="2021-03-06 06:27:15Z" end-time="2021-03-06 06:27:15Z" duration="0.001501" asserts="0">
                    <properties />
                  </test-case>
                </test-suite>
                <test-suite type="ParameterizedMethod" id="5040" name="ClientCallback_ulong_returnsValue" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour.ClientCallback_ulong_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour" runstate="Runnable" testcasecount="2" result="Passed" start-time="2021-03-06 06:27:15Z" end-time="2021-03-06 06:27:15Z" duration="0.017124" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="5038" name="ClientCallback_ulong_returnsValue(True)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour.ClientCallback_ulong_returnsValue(True)" methodname="ClientCallback_ulong_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour" runstate="Runnable" seed="1244035717" result="Passed" start-time="2021-03-06 06:27:15Z" end-time="2021-03-06 06:27:15Z" duration="0.002005" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="5039" name="ClientCallback_ulong_returnsValue(False)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour.ClientCallback_ulong_returnsValue(False)" methodname="ClientCallback_ulong_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour" runstate="Runnable" seed="218986984" result="Passed" start-time="2021-03-06 06:27:15Z" end-time="2021-03-06 06:27:15Z" duration="0.001867" asserts="0">
                    <properties />
                  </test-case>
                </test-suite>
                <test-suite type="ParameterizedMethod" id="5043" name="ClientCallback_ulong_setsOutValue" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour.ClientCallback_ulong_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour" runstate="Runnable" testcasecount="2" result="Passed" start-time="2021-03-06 06:27:15Z" end-time="2021-03-06 06:27:15Z" duration="0.019083" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="5041" name="ClientCallback_ulong_setsOutValue(True)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour.ClientCallback_ulong_setsOutValue(True)" methodname="ClientCallback_ulong_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour" runstate="Runnable" seed="843291028" result="Passed" start-time="2021-03-06 06:27:15Z" end-time="2021-03-06 06:27:15Z" duration="0.002461" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="5042" name="ClientCallback_ulong_setsOutValue(False)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour.ClientCallback_ulong_setsOutValue(False)" methodname="ClientCallback_ulong_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour" runstate="Runnable" seed="782592926" result="Passed" start-time="2021-03-06 06:27:15Z" end-time="2021-03-06 06:27:15Z" duration="0.001587" asserts="0">
                    <properties />
                  </test-case>
                </test-suite>
                <test-suite type="ParameterizedMethod" id="5046" name="ClientCallback_Vector3_returnsValue" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour.ClientCallback_Vector3_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour" runstate="Runnable" testcasecount="2" result="Passed" start-time="2021-03-06 06:27:15Z" end-time="2021-03-06 06:27:15Z" duration="0.017278" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="5044" name="ClientCallback_Vector3_returnsValue(True)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour.ClientCallback_Vector3_returnsValue(True)" methodname="ClientCallback_Vector3_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour" runstate="Runnable" seed="584477189" result="Passed" start-time="2021-03-06 06:27:15Z" end-time="2021-03-06 06:27:15Z" duration="0.002117" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="5045" name="ClientCallback_Vector3_returnsValue(False)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour.ClientCallback_Vector3_returnsValue(False)" methodname="ClientCallback_Vector3_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour" runstate="Runnable" seed="2046802597" result="Passed" start-time="2021-03-06 06:27:15Z" end-time="2021-03-06 06:27:15Z" duration="0.001948" asserts="0">
                    <properties />
                  </test-case>
                </test-suite>
                <test-suite type="ParameterizedMethod" id="5049" name="ClientCallback_Vector3_setsOutValue" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour.ClientCallback_Vector3_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour" runstate="Runnable" testcasecount="2" result="Passed" start-time="2021-03-06 06:27:15Z" end-time="2021-03-06 06:27:15Z" duration="0.016523" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="5047" name="ClientCallback_Vector3_setsOutValue(True)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour.ClientCallback_Vector3_setsOutValue(True)" methodname="ClientCallback_Vector3_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour" runstate="Runnable" seed="1528661968" result="Passed" start-time="2021-03-06 06:27:15Z" end-time="2021-03-06 06:27:15Z" duration="0.002398" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="5048" name="ClientCallback_Vector3_setsOutValue(False)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour.ClientCallback_Vector3_setsOutValue(False)" methodname="ClientCallback_Vector3_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour" runstate="Runnable" seed="133373039" result="Passed" start-time="2021-03-06 06:27:15Z" end-time="2021-03-06 06:27:15Z" duration="0.001598" asserts="0">
                    <properties />
                  </test-case>
                </test-suite>
                <test-suite type="ParameterizedMethod" id="4944" name="Server_bool_returnsValue" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour.Server_bool_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour" runstate="Runnable" testcasecount="2" result="Passed" start-time="2021-03-06 06:27:15Z" end-time="2021-03-06 06:27:15Z" duration="0.019607" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="4942" name="Server_bool_returnsValue(True)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour.Server_bool_returnsValue(True)" methodname="Server_bool_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour" runstate="Runnable" seed="399526388" result="Passed" start-time="2021-03-06 06:27:15Z" end-time="2021-03-06 06:27:15Z" duration="0.002121" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="4943" name="Server_bool_returnsValue(False)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour.Server_bool_returnsValue(False)" methodname="Server_bool_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour" runstate="Runnable" seed="1275143894" result="Passed" start-time="2021-03-06 06:27:15Z" end-time="2021-03-06 06:27:15Z" duration="0.003893" asserts="0">
                    <properties />
                    <output><![CDATA[[Server] function 'System.Boolean Mirror.Tests.Generated.Attributes.AttributeBehaviour_NetworkBehaviour::Server_bool_Function()' called when server was not active
]]></output>
                  </test-case>
                </test-suite>
                <test-suite type="ParameterizedMethod" id="4947" name="Server_bool_setsOutValue" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour.Server_bool_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour" runstate="Runnable" testcasecount="2" result="Passed" start-time="2021-03-06 06:27:15Z" end-time="2021-03-06 06:27:15Z" duration="0.017412" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="4945" name="Server_bool_setsOutValue(True)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour.Server_bool_setsOutValue(True)" methodname="Server_bool_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour" runstate="Runnable" seed="1879247935" result="Passed" start-time="2021-03-06 06:27:15Z" end-time="2021-03-06 06:27:15Z" duration="0.002091" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="4946" name="Server_bool_setsOutValue(False)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour.Server_bool_setsOutValue(False)" methodname="Server_bool_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour" runstate="Runnable" seed="196526355" result="Passed" start-time="2021-03-06 06:27:15Z" end-time="2021-03-06 06:27:15Z" duration="0.004284" asserts="0">
                    <properties />
                    <output><![CDATA[[Server] function 'System.Void Mirror.Tests.Generated.Attributes.AttributeBehaviour_NetworkBehaviour::Server_bool_out_Function(System.Boolean&)' called when server was not active
]]></output>
                  </test-case>
                </test-suite>
                <test-suite type="ParameterizedMethod" id="4956" name="Server_byte_returnsValue" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour.Server_byte_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour" runstate="Runnable" testcasecount="2" result="Passed" start-time="2021-03-06 06:27:15Z" end-time="2021-03-06 06:27:15Z" duration="0.017855" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="4954" name="Server_byte_returnsValue(True)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour.Server_byte_returnsValue(True)" methodname="Server_byte_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour" runstate="Runnable" seed="1315163437" result="Passed" start-time="2021-03-06 06:27:15Z" end-time="2021-03-06 06:27:15Z" duration="0.002303" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="4955" name="Server_byte_returnsValue(False)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour.Server_byte_returnsValue(False)" methodname="Server_byte_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour" runstate="Runnable" seed="1127817970" result="Passed" start-time="2021-03-06 06:27:15Z" end-time="2021-03-06 06:27:15Z" duration="0.003967" asserts="0">
                    <properties />
                    <output><![CDATA[[Server] function 'System.Byte Mirror.Tests.Generated.Attributes.AttributeBehaviour_NetworkBehaviour::Server_byte_Function()' called when server was not active
]]></output>
                  </test-case>
                </test-suite>
                <test-suite type="ParameterizedMethod" id="4959" name="Server_byte_setsOutValue" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour.Server_byte_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour" runstate="Runnable" testcasecount="2" result="Passed" start-time="2021-03-06 06:27:15Z" end-time="2021-03-06 06:27:16Z" duration="0.025286" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="4957" name="Server_byte_setsOutValue(True)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour.Server_byte_setsOutValue(True)" methodname="Server_byte_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour" runstate="Runnable" seed="1358384415" result="Passed" start-time="2021-03-06 06:27:16Z" end-time="2021-03-06 06:27:16Z" duration="0.002088" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="4958" name="Server_byte_setsOutValue(False)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour.Server_byte_setsOutValue(False)" methodname="Server_byte_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour" runstate="Runnable" seed="499507304" result="Passed" start-time="2021-03-06 06:27:16Z" end-time="2021-03-06 06:27:16Z" duration="0.004528" asserts="0">
                    <properties />
                    <output><![CDATA[[Server] function 'System.Void Mirror.Tests.Generated.Attributes.AttributeBehaviour_NetworkBehaviour::Server_byte_out_Function(System.Byte&)' called when server was not active
]]></output>
                  </test-case>
                </test-suite>
                <test-suite type="ParameterizedMethod" id="4950" name="Server_char_returnsValue" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour.Server_char_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour" runstate="Runnable" testcasecount="2" result="Passed" start-time="2021-03-06 06:27:16Z" end-time="2021-03-06 06:27:16Z" duration="0.021951" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="4948" name="Server_char_returnsValue(True)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour.Server_char_returnsValue(True)" methodname="Server_char_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour" runstate="Runnable" seed="829075478" result="Passed" start-time="2021-03-06 06:27:16Z" end-time="2021-03-06 06:27:16Z" duration="0.002589" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="4949" name="Server_char_returnsValue(False)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour.Server_char_returnsValue(False)" methodname="Server_char_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour" runstate="Runnable" seed="1756396504" result="Passed" start-time="2021-03-06 06:27:16Z" end-time="2021-03-06 06:27:16Z" duration="0.004060" asserts="0">
                    <properties />
                    <output><![CDATA[[Server] function 'System.Char Mirror.Tests.Generated.Attributes.AttributeBehaviour_NetworkBehaviour::Server_char_Function()' called when server was not active
]]></output>
                  </test-case>
                </test-suite>
                <test-suite type="ParameterizedMethod" id="4953" name="Server_char_setsOutValue" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour.Server_char_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour" runstate="Runnable" testcasecount="2" result="Passed" start-time="2021-03-06 06:27:16Z" end-time="2021-03-06 06:27:16Z" duration="0.020833" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="4951" name="Server_char_setsOutValue(True)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour.Server_char_setsOutValue(True)" methodname="Server_char_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour" runstate="Runnable" seed="748790669" result="Passed" start-time="2021-03-06 06:27:16Z" end-time="2021-03-06 06:27:16Z" duration="0.002040" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="4952" name="Server_char_setsOutValue(False)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour.Server_char_setsOutValue(False)" methodname="Server_char_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour" runstate="Runnable" seed="809928722" result="Passed" start-time="2021-03-06 06:27:16Z" end-time="2021-03-06 06:27:16Z" duration="0.003766" asserts="0">
                    <properties />
                    <output><![CDATA[[Server] function 'System.Void Mirror.Tests.Generated.Attributes.AttributeBehaviour_NetworkBehaviour::Server_char_out_Function(System.Char&)' called when server was not active
]]></output>
                  </test-case>
                </test-suite>
                <test-suite type="ParameterizedMethod" id="4992" name="Server_ClassWithConstructor_returnsValue" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour.Server_ClassWithConstructor_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour" runstate="Runnable" testcasecount="2" result="Passed" start-time="2021-03-06 06:27:16Z" end-time="2021-03-06 06:27:16Z" duration="0.018321" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="4990" name="Server_ClassWithConstructor_returnsValue(True)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour.Server_ClassWithConstructor_returnsValue(True)" methodname="Server_ClassWithConstructor_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour" runstate="Runnable" seed="331937844" result="Passed" start-time="2021-03-06 06:27:16Z" end-time="2021-03-06 06:27:16Z" duration="0.002265" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="4991" name="Server_ClassWithConstructor_returnsValue(False)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour.Server_ClassWithConstructor_returnsValue(False)" methodname="Server_ClassWithConstructor_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour" runstate="Runnable" seed="170272664" result="Passed" start-time="2021-03-06 06:27:16Z" end-time="2021-03-06 06:27:16Z" duration="0.004164" asserts="0">
                    <properties />
                    <output><![CDATA[[Server] function 'Mirror.Tests.Generators.ClassWithConstructor Mirror.Tests.Generated.Attributes.AttributeBehaviour_NetworkBehaviour::Server_ClassWithConstructor_Function()' called when server was not active
]]></output>
                  </test-case>
                </test-suite>
                <test-suite type="ParameterizedMethod" id="4995" name="Server_ClassWithConstructor_setsOutValue" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour.Server_ClassWithConstructor_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour" runstate="Runnable" testcasecount="2" result="Passed" start-time="2021-03-06 06:27:16Z" end-time="2021-03-06 06:27:16Z" duration="0.021192" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="4993" name="Server_ClassWithConstructor_setsOutValue(True)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour.Server_ClassWithConstructor_setsOutValue(True)" methodname="Server_ClassWithConstructor_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour" runstate="Runnable" seed="1606261804" result="Passed" start-time="2021-03-06 06:27:16Z" end-time="2021-03-06 06:27:16Z" duration="0.002345" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="4994" name="Server_ClassWithConstructor_setsOutValue(False)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour.Server_ClassWithConstructor_setsOutValue(False)" methodname="Server_ClassWithConstructor_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour" runstate="Runnable" seed="1037598816" result="Passed" start-time="2021-03-06 06:27:16Z" end-time="2021-03-06 06:27:16Z" duration="0.003793" asserts="0">
                    <properties />
                    <output><![CDATA[[Server] function 'System.Void Mirror.Tests.Generated.Attributes.AttributeBehaviour_NetworkBehaviour::Server_ClassWithConstructor_out_Function(Mirror.Tests.Generators.ClassWithConstructor&)' called when server was not active
]]></output>
                  </test-case>
                </test-suite>
                <test-suite type="ParameterizedMethod" id="4986" name="Server_ClassWithNoConstructor_returnsValue" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour.Server_ClassWithNoConstructor_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour" runstate="Runnable" testcasecount="2" result="Passed" start-time="2021-03-06 06:27:16Z" end-time="2021-03-06 06:27:16Z" duration="0.020815" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="4984" name="Server_ClassWithNoConstructor_returnsValue(True)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour.Server_ClassWithNoConstructor_returnsValue(True)" methodname="Server_ClassWithNoConstructor_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour" runstate="Runnable" seed="331902824" result="Passed" start-time="2021-03-06 06:27:16Z" end-time="2021-03-06 06:27:16Z" duration="0.002164" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="4985" name="Server_ClassWithNoConstructor_returnsValue(False)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour.Server_ClassWithNoConstructor_returnsValue(False)" methodname="Server_ClassWithNoConstructor_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour" runstate="Runnable" seed="1038810880" result="Passed" start-time="2021-03-06 06:27:16Z" end-time="2021-03-06 06:27:16Z" duration="0.003908" asserts="0">
                    <properties />
                    <output><![CDATA[[Server] function 'Mirror.Tests.Generators.ClassWithNoConstructor Mirror.Tests.Generated.Attributes.AttributeBehaviour_NetworkBehaviour::Server_ClassWithNoConstructor_Function()' called when server was not active
]]></output>
                  </test-case>
                </test-suite>
                <test-suite type="ParameterizedMethod" id="4989" name="Server_ClassWithNoConstructor_setsOutValue" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour.Server_ClassWithNoConstructor_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour" runstate="Runnable" testcasecount="2" result="Passed" start-time="2021-03-06 06:27:16Z" end-time="2021-03-06 06:27:16Z" duration="0.020403" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="4987" name="Server_ClassWithNoConstructor_setsOutValue(True)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour.Server_ClassWithNoConstructor_setsOutValue(True)" methodname="Server_ClassWithNoConstructor_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour" runstate="Runnable" seed="629287815" result="Passed" start-time="2021-03-06 06:27:16Z" end-time="2021-03-06 06:27:16Z" duration="0.002149" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="4988" name="Server_ClassWithNoConstructor_setsOutValue(False)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour.Server_ClassWithNoConstructor_setsOutValue(False)" methodname="Server_ClassWithNoConstructor_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour" runstate="Runnable" seed="372615689" result="Passed" start-time="2021-03-06 06:27:16Z" end-time="2021-03-06 06:27:16Z" duration="0.003615" asserts="0">
                    <properties />
                    <output><![CDATA[[Server] function 'System.Void Mirror.Tests.Generated.Attributes.AttributeBehaviour_NetworkBehaviour::Server_ClassWithNoConstructor_out_Function(Mirror.Tests.Generators.ClassWithNoConstructor&)' called when server was not active
]]></output>
                  </test-case>
                </test-suite>
                <test-suite type="ParameterizedMethod" id="4938" name="Server_double_returnsValue" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour.Server_double_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour" runstate="Runnable" testcasecount="2" result="Passed" start-time="2021-03-06 06:27:16Z" end-time="2021-03-06 06:27:16Z" duration="0.022859" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="4936" name="Server_double_returnsValue(True)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour.Server_double_returnsValue(True)" methodname="Server_double_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour" runstate="Runnable" seed="30698476" result="Passed" start-time="2021-03-06 06:27:16Z" end-time="2021-03-06 06:27:16Z" duration="0.002256" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="4937" name="Server_double_returnsValue(False)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour.Server_double_returnsValue(False)" methodname="Server_double_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour" runstate="Runnable" seed="2080315813" result="Passed" start-time="2021-03-06 06:27:16Z" end-time="2021-03-06 06:27:16Z" duration="0.004380" asserts="0">
                    <properties />
                    <output><![CDATA[[Server] function 'System.Double Mirror.Tests.Generated.Attributes.AttributeBehaviour_NetworkBehaviour::Server_double_Function()' called when server was not active
]]></output>
                  </test-case>
                </test-suite>
                <test-suite type="ParameterizedMethod" id="4941" name="Server_double_setsOutValue" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour.Server_double_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour" runstate="Runnable" testcasecount="2" result="Passed" start-time="2021-03-06 06:27:16Z" end-time="2021-03-06 06:27:16Z" duration="0.020953" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="4939" name="Server_double_setsOutValue(True)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour.Server_double_setsOutValue(True)" methodname="Server_double_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour" runstate="Runnable" seed="1848576841" result="Passed" start-time="2021-03-06 06:27:16Z" end-time="2021-03-06 06:27:16Z" duration="0.002841" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="4940" name="Server_double_setsOutValue(False)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour.Server_double_setsOutValue(False)" methodname="Server_double_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour" runstate="Runnable" seed="664403125" result="Passed" start-time="2021-03-06 06:27:16Z" end-time="2021-03-06 06:27:16Z" duration="0.003978" asserts="0">
                    <properties />
                    <output><![CDATA[[Server] function 'System.Void Mirror.Tests.Generated.Attributes.AttributeBehaviour_NetworkBehaviour::Server_double_out_Function(System.Double&)' called when server was not active
]]></output>
                  </test-case>
                </test-suite>
                <test-suite type="ParameterizedMethod" id="4932" name="Server_float_returnsValue" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour.Server_float_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour" runstate="Runnable" testcasecount="2" result="Passed" start-time="2021-03-06 06:27:16Z" end-time="2021-03-06 06:27:16Z" duration="0.023961" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="4930" name="Server_float_returnsValue(True)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour.Server_float_returnsValue(True)" methodname="Server_float_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour" runstate="Runnable" seed="997000344" result="Passed" start-time="2021-03-06 06:27:16Z" end-time="2021-03-06 06:27:16Z" duration="0.002068" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="4931" name="Server_float_returnsValue(False)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour.Server_float_returnsValue(False)" methodname="Server_float_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour" runstate="Runnable" seed="41018988" result="Passed" start-time="2021-03-06 06:27:16Z" end-time="2021-03-06 06:27:16Z" duration="0.003837" asserts="0">
                    <properties />
                    <output><![CDATA[[Server] function 'System.Single Mirror.Tests.Generated.Attributes.AttributeBehaviour_NetworkBehaviour::Server_float_Function()' called when server was not active
]]></output>
                  </test-case>
                </test-suite>
                <test-suite type="ParameterizedMethod" id="4935" name="Server_float_setsOutValue" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour.Server_float_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour" runstate="Runnable" testcasecount="2" result="Passed" start-time="2021-03-06 06:27:16Z" end-time="2021-03-06 06:27:16Z" duration="0.018588" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="4933" name="Server_float_setsOutValue(True)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour.Server_float_setsOutValue(True)" methodname="Server_float_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour" runstate="Runnable" seed="1972340447" result="Passed" start-time="2021-03-06 06:27:16Z" end-time="2021-03-06 06:27:16Z" duration="0.002344" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="4934" name="Server_float_setsOutValue(False)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour.Server_float_setsOutValue(False)" methodname="Server_float_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour" runstate="Runnable" seed="1471984312" result="Passed" start-time="2021-03-06 06:27:16Z" end-time="2021-03-06 06:27:16Z" duration="0.003693" asserts="0">
                    <properties />
                    <output><![CDATA[[Server] function 'System.Void Mirror.Tests.Generated.Attributes.AttributeBehaviour_NetworkBehaviour::Server_float_out_Function(System.Single&)' called when server was not active
]]></output>
                  </test-case>
                </test-suite>
                <test-suite type="ParameterizedMethod" id="4962" name="Server_int_returnsValue" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour.Server_int_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour" runstate="Runnable" testcasecount="2" result="Passed" start-time="2021-03-06 06:27:16Z" end-time="2021-03-06 06:27:16Z" duration="0.019612" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="4960" name="Server_int_returnsValue(True)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour.Server_int_returnsValue(True)" methodname="Server_int_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour" runstate="Runnable" seed="1168330806" result="Passed" start-time="2021-03-06 06:27:16Z" end-time="2021-03-06 06:27:16Z" duration="0.002072" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="4961" name="Server_int_returnsValue(False)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour.Server_int_returnsValue(False)" methodname="Server_int_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour" runstate="Runnable" seed="1518709310" result="Passed" start-time="2021-03-06 06:27:16Z" end-time="2021-03-06 06:27:16Z" duration="0.003945" asserts="0">
                    <properties />
                    <output><![CDATA[[Server] function 'System.Int32 Mirror.Tests.Generated.Attributes.AttributeBehaviour_NetworkBehaviour::Server_int_Function()' called when server was not active
]]></output>
                  </test-case>
                </test-suite>
                <test-suite type="ParameterizedMethod" id="4965" name="Server_int_setsOutValue" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour.Server_int_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour" runstate="Runnable" testcasecount="2" result="Passed" start-time="2021-03-06 06:27:16Z" end-time="2021-03-06 06:27:16Z" duration="0.022295" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="4963" name="Server_int_setsOutValue(True)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour.Server_int_setsOutValue(True)" methodname="Server_int_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour" runstate="Runnable" seed="1452942286" result="Passed" start-time="2021-03-06 06:27:16Z" end-time="2021-03-06 06:27:16Z" duration="0.002208" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="4964" name="Server_int_setsOutValue(False)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour.Server_int_setsOutValue(False)" methodname="Server_int_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour" runstate="Runnable" seed="693430211" result="Passed" start-time="2021-03-06 06:27:16Z" end-time="2021-03-06 06:27:16Z" duration="0.004226" asserts="0">
                    <properties />
                    <output><![CDATA[[Server] function 'System.Void Mirror.Tests.Generated.Attributes.AttributeBehaviour_NetworkBehaviour::Server_int_out_Function(System.Int32&)' called when server was not active
]]></output>
                  </test-case>
                </test-suite>
                <test-suite type="ParameterizedMethod" id="4968" name="Server_long_returnsValue" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour.Server_long_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour" runstate="Runnable" testcasecount="2" result="Passed" start-time="2021-03-06 06:27:16Z" end-time="2021-03-06 06:27:16Z" duration="0.020193" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="4966" name="Server_long_returnsValue(True)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour.Server_long_returnsValue(True)" methodname="Server_long_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour" runstate="Runnable" seed="771210849" result="Passed" start-time="2021-03-06 06:27:16Z" end-time="2021-03-06 06:27:16Z" duration="0.002047" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="4967" name="Server_long_returnsValue(False)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour.Server_long_returnsValue(False)" methodname="Server_long_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour" runstate="Runnable" seed="1338240123" result="Passed" start-time="2021-03-06 06:27:16Z" end-time="2021-03-06 06:27:16Z" duration="0.003929" asserts="0">
                    <properties />
                    <output><![CDATA[[Server] function 'System.Int64 Mirror.Tests.Generated.Attributes.AttributeBehaviour_NetworkBehaviour::Server_long_Function()' called when server was not active
]]></output>
                  </test-case>
                </test-suite>
                <test-suite type="ParameterizedMethod" id="4971" name="Server_long_setsOutValue" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour.Server_long_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour" runstate="Runnable" testcasecount="2" result="Passed" start-time="2021-03-06 06:27:16Z" end-time="2021-03-06 06:27:16Z" duration="0.021675" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="4969" name="Server_long_setsOutValue(True)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour.Server_long_setsOutValue(True)" methodname="Server_long_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour" runstate="Runnable" seed="966464572" result="Passed" start-time="2021-03-06 06:27:16Z" end-time="2021-03-06 06:27:16Z" duration="0.002086" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="4970" name="Server_long_setsOutValue(False)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour.Server_long_setsOutValue(False)" methodname="Server_long_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour" runstate="Runnable" seed="484837642" result="Passed" start-time="2021-03-06 06:27:16Z" end-time="2021-03-06 06:27:16Z" duration="0.003866" asserts="0">
                    <properties />
                    <output><![CDATA[[Server] function 'System.Void Mirror.Tests.Generated.Attributes.AttributeBehaviour_NetworkBehaviour::Server_long_out_Function(System.Int64&)' called when server was not active
]]></output>
                  </test-case>
                </test-suite>
                <test-suite type="ParameterizedMethod" id="4974" name="Server_ulong_returnsValue" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour.Server_ulong_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour" runstate="Runnable" testcasecount="2" result="Passed" start-time="2021-03-06 06:27:16Z" end-time="2021-03-06 06:27:16Z" duration="0.017836" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="4972" name="Server_ulong_returnsValue(True)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour.Server_ulong_returnsValue(True)" methodname="Server_ulong_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour" runstate="Runnable" seed="1307847524" result="Passed" start-time="2021-03-06 06:27:16Z" end-time="2021-03-06 06:27:16Z" duration="0.002139" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="4973" name="Server_ulong_returnsValue(False)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour.Server_ulong_returnsValue(False)" methodname="Server_ulong_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour" runstate="Runnable" seed="1843574311" result="Passed" start-time="2021-03-06 06:27:16Z" end-time="2021-03-06 06:27:16Z" duration="0.003983" asserts="0">
                    <properties />
                    <output><![CDATA[[Server] function 'System.UInt64 Mirror.Tests.Generated.Attributes.AttributeBehaviour_NetworkBehaviour::Server_ulong_Function()' called when server was not active
]]></output>
                  </test-case>
                </test-suite>
                <test-suite type="ParameterizedMethod" id="4977" name="Server_ulong_setsOutValue" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour.Server_ulong_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour" runstate="Runnable" testcasecount="2" result="Passed" start-time="2021-03-06 06:27:16Z" end-time="2021-03-06 06:27:16Z" duration="0.016132" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="4975" name="Server_ulong_setsOutValue(True)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour.Server_ulong_setsOutValue(True)" methodname="Server_ulong_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour" runstate="Runnable" seed="1187109959" result="Passed" start-time="2021-03-06 06:27:16Z" end-time="2021-03-06 06:27:16Z" duration="0.002585" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="4976" name="Server_ulong_setsOutValue(False)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour.Server_ulong_setsOutValue(False)" methodname="Server_ulong_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour" runstate="Runnable" seed="1146644892" result="Passed" start-time="2021-03-06 06:27:16Z" end-time="2021-03-06 06:27:16Z" duration="0.003614" asserts="0">
                    <properties />
                    <output><![CDATA[[Server] function 'System.Void Mirror.Tests.Generated.Attributes.AttributeBehaviour_NetworkBehaviour::Server_ulong_out_Function(System.UInt64&)' called when server was not active
]]></output>
                  </test-case>
                </test-suite>
                <test-suite type="ParameterizedMethod" id="4980" name="Server_Vector3_returnsValue" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour.Server_Vector3_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour" runstate="Runnable" testcasecount="2" result="Passed" start-time="2021-03-06 06:27:16Z" end-time="2021-03-06 06:27:16Z" duration="0.018504" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="4978" name="Server_Vector3_returnsValue(True)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour.Server_Vector3_returnsValue(True)" methodname="Server_Vector3_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour" runstate="Runnable" seed="1015069316" result="Passed" start-time="2021-03-06 06:27:16Z" end-time="2021-03-06 06:27:16Z" duration="0.002221" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="4979" name="Server_Vector3_returnsValue(False)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour.Server_Vector3_returnsValue(False)" methodname="Server_Vector3_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour" runstate="Runnable" seed="1990651381" result="Passed" start-time="2021-03-06 06:27:16Z" end-time="2021-03-06 06:27:16Z" duration="0.004081" asserts="0">
                    <properties />
                    <output><![CDATA[[Server] function 'UnityEngine.Vector3 Mirror.Tests.Generated.Attributes.AttributeBehaviour_NetworkBehaviour::Server_Vector3_Function()' called when server was not active
]]></output>
                  </test-case>
                </test-suite>
                <test-suite type="ParameterizedMethod" id="4983" name="Server_Vector3_setsOutValue" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour.Server_Vector3_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour" runstate="Runnable" testcasecount="2" result="Passed" start-time="2021-03-06 06:27:16Z" end-time="2021-03-06 06:27:16Z" duration="0.020776" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="4981" name="Server_Vector3_setsOutValue(True)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour.Server_Vector3_setsOutValue(True)" methodname="Server_Vector3_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour" runstate="Runnable" seed="596190892" result="Passed" start-time="2021-03-06 06:27:16Z" end-time="2021-03-06 06:27:16Z" duration="0.002165" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="4982" name="Server_Vector3_setsOutValue(False)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour.Server_Vector3_setsOutValue(False)" methodname="Server_Vector3_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour" runstate="Runnable" seed="1181048323" result="Passed" start-time="2021-03-06 06:27:16Z" end-time="2021-03-06 06:27:16Z" duration="0.003990" asserts="0">
                    <properties />
                    <output><![CDATA[[Server] function 'System.Void Mirror.Tests.Generated.Attributes.AttributeBehaviour_NetworkBehaviour::Server_Vector3_out_Function(UnityEngine.Vector3&)' called when server was not active
]]></output>
                  </test-case>
                </test-suite>
                <test-suite type="ParameterizedMethod" id="5076" name="ServerCallback_bool_returnsValue" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour.ServerCallback_bool_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour" runstate="Runnable" testcasecount="2" result="Passed" start-time="2021-03-06 06:27:16Z" end-time="2021-03-06 06:27:16Z" duration="0.015552" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="5074" name="ServerCallback_bool_returnsValue(True)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour.ServerCallback_bool_returnsValue(True)" methodname="ServerCallback_bool_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour" runstate="Runnable" seed="2064354086" result="Passed" start-time="2021-03-06 06:27:16Z" end-time="2021-03-06 06:27:16Z" duration="0.002307" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="5075" name="ServerCallback_bool_returnsValue(False)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour.ServerCallback_bool_returnsValue(False)" methodname="ServerCallback_bool_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour" runstate="Runnable" seed="1920580647" result="Passed" start-time="2021-03-06 06:27:16Z" end-time="2021-03-06 06:27:16Z" duration="0.001705" asserts="0">
                    <properties />
                  </test-case>
                </test-suite>
                <test-suite type="ParameterizedMethod" id="5079" name="ServerCallback_bool_setsOutValue" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour.ServerCallback_bool_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour" runstate="Runnable" testcasecount="2" result="Passed" start-time="2021-03-06 06:27:16Z" end-time="2021-03-06 06:27:16Z" duration="0.017262" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="5077" name="ServerCallback_bool_setsOutValue(True)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour.ServerCallback_bool_setsOutValue(True)" methodname="ServerCallback_bool_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour" runstate="Runnable" seed="1256753512" result="Passed" start-time="2021-03-06 06:27:16Z" end-time="2021-03-06 06:27:16Z" duration="0.002465" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="5078" name="ServerCallback_bool_setsOutValue(False)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour.ServerCallback_bool_setsOutValue(False)" methodname="ServerCallback_bool_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour" runstate="Runnable" seed="108717019" result="Passed" start-time="2021-03-06 06:27:16Z" end-time="2021-03-06 06:27:16Z" duration="0.001584" asserts="0">
                    <properties />
                  </test-case>
                </test-suite>
                <test-suite type="ParameterizedMethod" id="5088" name="ServerCallback_byte_returnsValue" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour.ServerCallback_byte_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour" runstate="Runnable" testcasecount="2" result="Passed" start-time="2021-03-06 06:27:16Z" end-time="2021-03-06 06:27:16Z" duration="0.016913" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="5086" name="ServerCallback_byte_returnsValue(True)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour.ServerCallback_byte_returnsValue(True)" methodname="ServerCallback_byte_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour" runstate="Runnable" seed="879883065" result="Passed" start-time="2021-03-06 06:27:16Z" end-time="2021-03-06 06:27:16Z" duration="0.002108" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="5087" name="ServerCallback_byte_returnsValue(False)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour.ServerCallback_byte_returnsValue(False)" methodname="ServerCallback_byte_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour" runstate="Runnable" seed="1171375162" result="Passed" start-time="2021-03-06 06:27:16Z" end-time="2021-03-06 06:27:16Z" duration="0.002125" asserts="0">
                    <properties />
                  </test-case>
                </test-suite>
                <test-suite type="ParameterizedMethod" id="5091" name="ServerCallback_byte_setsOutValue" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour.ServerCallback_byte_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour" runstate="Runnable" testcasecount="2" result="Passed" start-time="2021-03-06 06:27:16Z" end-time="2021-03-06 06:27:16Z" duration="0.017608" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="5089" name="ServerCallback_byte_setsOutValue(True)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour.ServerCallback_byte_setsOutValue(True)" methodname="ServerCallback_byte_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour" runstate="Runnable" seed="48956108" result="Passed" start-time="2021-03-06 06:27:16Z" end-time="2021-03-06 06:27:16Z" duration="0.002360" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="5090" name="ServerCallback_byte_setsOutValue(False)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour.ServerCallback_byte_setsOutValue(False)" methodname="ServerCallback_byte_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour" runstate="Runnable" seed="1902974149" result="Passed" start-time="2021-03-06 06:27:16Z" end-time="2021-03-06 06:27:16Z" duration="0.001742" asserts="0">
                    <properties />
                  </test-case>
                </test-suite>
                <test-suite type="ParameterizedMethod" id="5082" name="ServerCallback_char_returnsValue" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour.ServerCallback_char_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour" runstate="Runnable" testcasecount="2" result="Passed" start-time="2021-03-06 06:27:16Z" end-time="2021-03-06 06:27:16Z" duration="0.016512" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="5080" name="ServerCallback_char_returnsValue(True)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour.ServerCallback_char_returnsValue(True)" methodname="ServerCallback_char_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour" runstate="Runnable" seed="1927065035" result="Passed" start-time="2021-03-06 06:27:16Z" end-time="2021-03-06 06:27:16Z" duration="0.002033" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="5081" name="ServerCallback_char_returnsValue(False)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour.ServerCallback_char_returnsValue(False)" methodname="ServerCallback_char_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour" runstate="Runnable" seed="1928349299" result="Passed" start-time="2021-03-06 06:27:16Z" end-time="2021-03-06 06:27:16Z" duration="0.001612" asserts="0">
                    <properties />
                  </test-case>
                </test-suite>
                <test-suite type="ParameterizedMethod" id="5085" name="ServerCallback_char_setsOutValue" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour.ServerCallback_char_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour" runstate="Runnable" testcasecount="2" result="Passed" start-time="2021-03-06 06:27:16Z" end-time="2021-03-06 06:27:16Z" duration="0.016786" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="5083" name="ServerCallback_char_setsOutValue(True)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour.ServerCallback_char_setsOutValue(True)" methodname="ServerCallback_char_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour" runstate="Runnable" seed="33798154" result="Passed" start-time="2021-03-06 06:27:16Z" end-time="2021-03-06 06:27:16Z" duration="0.002106" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="5084" name="ServerCallback_char_setsOutValue(False)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour.ServerCallback_char_setsOutValue(False)" methodname="ServerCallback_char_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour" runstate="Runnable" seed="1791782506" result="Passed" start-time="2021-03-06 06:27:16Z" end-time="2021-03-06 06:27:16Z" duration="0.001755" asserts="0">
                    <properties />
                  </test-case>
                </test-suite>
                <test-suite type="ParameterizedMethod" id="5124" name="ServerCallback_ClassWithConstructor_returnsValue" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour.ServerCallback_ClassWithConstructor_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour" runstate="Runnable" testcasecount="2" result="Passed" start-time="2021-03-06 06:27:16Z" end-time="2021-03-06 06:27:16Z" duration="0.019350" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="5122" name="ServerCallback_ClassWithConstructor_returnsValue(True)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour.ServerCallback_ClassWithConstructor_returnsValue(True)" methodname="ServerCallback_ClassWithConstructor_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour" runstate="Runnable" seed="2112177400" result="Passed" start-time="2021-03-06 06:27:16Z" end-time="2021-03-06 06:27:16Z" duration="0.002465" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="5123" name="ServerCallback_ClassWithConstructor_returnsValue(False)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour.ServerCallback_ClassWithConstructor_returnsValue(False)" methodname="ServerCallback_ClassWithConstructor_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour" runstate="Runnable" seed="307189125" result="Passed" start-time="2021-03-06 06:27:16Z" end-time="2021-03-06 06:27:16Z" duration="0.001610" asserts="0">
                    <properties />
                  </test-case>
                </test-suite>
                <test-suite type="ParameterizedMethod" id="5127" name="ServerCallback_ClassWithConstructor_setsOutValue" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour.ServerCallback_ClassWithConstructor_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour" runstate="Runnable" testcasecount="2" result="Passed" start-time="2021-03-06 06:27:16Z" end-time="2021-03-06 06:27:16Z" duration="0.017155" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="5125" name="ServerCallback_ClassWithConstructor_setsOutValue(True)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour.ServerCallback_ClassWithConstructor_setsOutValue(True)" methodname="ServerCallback_ClassWithConstructor_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour" runstate="Runnable" seed="288353703" result="Passed" start-time="2021-03-06 06:27:16Z" end-time="2021-03-06 06:27:16Z" duration="0.002037" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="5126" name="ServerCallback_ClassWithConstructor_setsOutValue(False)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour.ServerCallback_ClassWithConstructor_setsOutValue(False)" methodname="ServerCallback_ClassWithConstructor_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour" runstate="Runnable" seed="1932186976" result="Passed" start-time="2021-03-06 06:27:16Z" end-time="2021-03-06 06:27:16Z" duration="0.001763" asserts="0">
                    <properties />
                  </test-case>
                </test-suite>
                <test-suite type="ParameterizedMethod" id="5118" name="ServerCallback_ClassWithNoConstructor_returnsValue" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour.ServerCallback_ClassWithNoConstructor_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour" runstate="Runnable" testcasecount="2" result="Passed" start-time="2021-03-06 06:27:16Z" end-time="2021-03-06 06:27:16Z" duration="0.016631" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="5116" name="ServerCallback_ClassWithNoConstructor_returnsValue(True)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour.ServerCallback_ClassWithNoConstructor_returnsValue(True)" methodname="ServerCallback_ClassWithNoConstructor_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour" runstate="Runnable" seed="745976112" result="Passed" start-time="2021-03-06 06:27:16Z" end-time="2021-03-06 06:27:16Z" duration="0.002104" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="5117" name="ServerCallback_ClassWithNoConstructor_returnsValue(False)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour.ServerCallback_ClassWithNoConstructor_returnsValue(False)" methodname="ServerCallback_ClassWithNoConstructor_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour" runstate="Runnable" seed="1263999541" result="Passed" start-time="2021-03-06 06:27:16Z" end-time="2021-03-06 06:27:16Z" duration="0.001563" asserts="0">
                    <properties />
                  </test-case>
                </test-suite>
                <test-suite type="ParameterizedMethod" id="5121" name="ServerCallback_ClassWithNoConstructor_setsOutValue" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour.ServerCallback_ClassWithNoConstructor_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour" runstate="Runnable" testcasecount="2" result="Passed" start-time="2021-03-06 06:27:16Z" end-time="2021-03-06 06:27:16Z" duration="0.021293" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="5119" name="ServerCallback_ClassWithNoConstructor_setsOutValue(True)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour.ServerCallback_ClassWithNoConstructor_setsOutValue(True)" methodname="ServerCallback_ClassWithNoConstructor_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour" runstate="Runnable" seed="933145517" result="Passed" start-time="2021-03-06 06:27:16Z" end-time="2021-03-06 06:27:16Z" duration="0.002171" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="5120" name="ServerCallback_ClassWithNoConstructor_setsOutValue(False)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour.ServerCallback_ClassWithNoConstructor_setsOutValue(False)" methodname="ServerCallback_ClassWithNoConstructor_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour" runstate="Runnable" seed="927535644" result="Passed" start-time="2021-03-06 06:27:16Z" end-time="2021-03-06 06:27:16Z" duration="0.001792" asserts="0">
                    <properties />
                  </test-case>
                </test-suite>
                <test-suite type="ParameterizedMethod" id="5070" name="ServerCallback_double_returnsValue" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour.ServerCallback_double_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour" runstate="Runnable" testcasecount="2" result="Passed" start-time="2021-03-06 06:27:16Z" end-time="2021-03-06 06:27:16Z" duration="0.016075" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="5068" name="ServerCallback_double_returnsValue(True)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour.ServerCallback_double_returnsValue(True)" methodname="ServerCallback_double_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour" runstate="Runnable" seed="2122824551" result="Passed" start-time="2021-03-06 06:27:16Z" end-time="2021-03-06 06:27:16Z" duration="0.002503" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="5069" name="ServerCallback_double_returnsValue(False)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour.ServerCallback_double_returnsValue(False)" methodname="ServerCallback_double_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour" runstate="Runnable" seed="147980350" result="Passed" start-time="2021-03-06 06:27:16Z" end-time="2021-03-06 06:27:16Z" duration="0.001547" asserts="0">
                    <properties />
                  </test-case>
                </test-suite>
                <test-suite type="ParameterizedMethod" id="5073" name="ServerCallback_double_setsOutValue" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour.ServerCallback_double_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour" runstate="Runnable" testcasecount="2" result="Passed" start-time="2021-03-06 06:27:16Z" end-time="2021-03-06 06:27:16Z" duration="0.017972" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="5071" name="ServerCallback_double_setsOutValue(True)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour.ServerCallback_double_setsOutValue(True)" methodname="ServerCallback_double_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour" runstate="Runnable" seed="1616059810" result="Passed" start-time="2021-03-06 06:27:16Z" end-time="2021-03-06 06:27:16Z" duration="0.002065" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="5072" name="ServerCallback_double_setsOutValue(False)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour.ServerCallback_double_setsOutValue(False)" methodname="ServerCallback_double_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour" runstate="Runnable" seed="769684799" result="Passed" start-time="2021-03-06 06:27:16Z" end-time="2021-03-06 06:27:16Z" duration="0.001702" asserts="0">
                    <properties />
                  </test-case>
                </test-suite>
                <test-suite type="ParameterizedMethod" id="5064" name="ServerCallback_float_returnsValue" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour.ServerCallback_float_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour" runstate="Runnable" testcasecount="2" result="Passed" start-time="2021-03-06 06:27:16Z" end-time="2021-03-06 06:27:16Z" duration="0.016759" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="5062" name="ServerCallback_float_returnsValue(True)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour.ServerCallback_float_returnsValue(True)" methodname="ServerCallback_float_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour" runstate="Runnable" seed="1832160808" result="Passed" start-time="2021-03-06 06:27:16Z" end-time="2021-03-06 06:27:16Z" duration="0.002390" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="5063" name="ServerCallback_float_returnsValue(False)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour.ServerCallback_float_returnsValue(False)" methodname="ServerCallback_float_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour" runstate="Runnable" seed="1529661704" result="Passed" start-time="2021-03-06 06:27:16Z" end-time="2021-03-06 06:27:16Z" duration="0.001626" asserts="0">
                    <properties />
                  </test-case>
                </test-suite>
                <test-suite type="ParameterizedMethod" id="5067" name="ServerCallback_float_setsOutValue" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour.ServerCallback_float_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour" runstate="Runnable" testcasecount="2" result="Passed" start-time="2021-03-06 06:27:16Z" end-time="2021-03-06 06:27:16Z" duration="0.017552" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="5065" name="ServerCallback_float_setsOutValue(True)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour.ServerCallback_float_setsOutValue(True)" methodname="ServerCallback_float_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour" runstate="Runnable" seed="1810906797" result="Passed" start-time="2021-03-06 06:27:16Z" end-time="2021-03-06 06:27:16Z" duration="0.002032" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="5066" name="ServerCallback_float_setsOutValue(False)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour.ServerCallback_float_setsOutValue(False)" methodname="ServerCallback_float_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour" runstate="Runnable" seed="131992348" result="Passed" start-time="2021-03-06 06:27:16Z" end-time="2021-03-06 06:27:16Z" duration="0.001590" asserts="0">
                    <properties />
                  </test-case>
                </test-suite>
                <test-suite type="ParameterizedMethod" id="5094" name="ServerCallback_int_returnsValue" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour.ServerCallback_int_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour" runstate="Runnable" testcasecount="2" result="Passed" start-time="2021-03-06 06:27:16Z" end-time="2021-03-06 06:27:16Z" duration="0.018623" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="5092" name="ServerCallback_int_returnsValue(True)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour.ServerCallback_int_returnsValue(True)" methodname="ServerCallback_int_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour" runstate="Runnable" seed="1125755734" result="Passed" start-time="2021-03-06 06:27:16Z" end-time="2021-03-06 06:27:16Z" duration="0.002448" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="5093" name="ServerCallback_int_returnsValue(False)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour.ServerCallback_int_returnsValue(False)" methodname="ServerCallback_int_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour" runstate="Runnable" seed="84001653" result="Passed" start-time="2021-03-06 06:27:16Z" end-time="2021-03-06 06:27:16Z" duration="0.001619" asserts="0">
                    <properties />
                  </test-case>
                </test-suite>
                <test-suite type="ParameterizedMethod" id="5097" name="ServerCallback_int_setsOutValue" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour.ServerCallback_int_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour" runstate="Runnable" testcasecount="2" result="Passed" start-time="2021-03-06 06:27:16Z" end-time="2021-03-06 06:27:16Z" duration="0.017075" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="5095" name="ServerCallback_int_setsOutValue(True)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour.ServerCallback_int_setsOutValue(True)" methodname="ServerCallback_int_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour" runstate="Runnable" seed="573844649" result="Passed" start-time="2021-03-06 06:27:16Z" end-time="2021-03-06 06:27:16Z" duration="0.002479" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="5096" name="ServerCallback_int_setsOutValue(False)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour.ServerCallback_int_setsOutValue(False)" methodname="ServerCallback_int_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour" runstate="Runnable" seed="1990381954" result="Passed" start-time="2021-03-06 06:27:16Z" end-time="2021-03-06 06:27:16Z" duration="0.001628" asserts="0">
                    <properties />
                  </test-case>
                </test-suite>
                <test-suite type="ParameterizedMethod" id="5100" name="ServerCallback_long_returnsValue" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour.ServerCallback_long_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour" runstate="Runnable" testcasecount="2" result="Passed" start-time="2021-03-06 06:27:16Z" end-time="2021-03-06 06:27:16Z" duration="0.016994" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="5098" name="ServerCallback_long_returnsValue(True)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour.ServerCallback_long_returnsValue(True)" methodname="ServerCallback_long_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour" runstate="Runnable" seed="392527654" result="Passed" start-time="2021-03-06 06:27:16Z" end-time="2021-03-06 06:27:16Z" duration="0.002011" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="5099" name="ServerCallback_long_returnsValue(False)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour.ServerCallback_long_returnsValue(False)" methodname="ServerCallback_long_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour" runstate="Runnable" seed="614125288" result="Passed" start-time="2021-03-06 06:27:16Z" end-time="2021-03-06 06:27:16Z" duration="0.001620" asserts="0">
                    <properties />
                  </test-case>
                </test-suite>
                <test-suite type="ParameterizedMethod" id="5103" name="ServerCallback_long_setsOutValue" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour.ServerCallback_long_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour" runstate="Runnable" testcasecount="2" result="Passed" start-time="2021-03-06 06:27:16Z" end-time="2021-03-06 06:27:16Z" duration="0.018064" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="5101" name="ServerCallback_long_setsOutValue(True)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour.ServerCallback_long_setsOutValue(True)" methodname="ServerCallback_long_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour" runstate="Runnable" seed="126909633" result="Passed" start-time="2021-03-06 06:27:16Z" end-time="2021-03-06 06:27:16Z" duration="0.002246" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="5102" name="ServerCallback_long_setsOutValue(False)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour.ServerCallback_long_setsOutValue(False)" methodname="ServerCallback_long_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour" runstate="Runnable" seed="95955320" result="Passed" start-time="2021-03-06 06:27:16Z" end-time="2021-03-06 06:27:16Z" duration="0.001578" asserts="0">
                    <properties />
                  </test-case>
                </test-suite>
                <test-suite type="ParameterizedMethod" id="5106" name="ServerCallback_ulong_returnsValue" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour.ServerCallback_ulong_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour" runstate="Runnable" testcasecount="2" result="Passed" start-time="2021-03-06 06:27:16Z" end-time="2021-03-06 06:27:16Z" duration="0.017068" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="5104" name="ServerCallback_ulong_returnsValue(True)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour.ServerCallback_ulong_returnsValue(True)" methodname="ServerCallback_ulong_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour" runstate="Runnable" seed="1831342276" result="Passed" start-time="2021-03-06 06:27:16Z" end-time="2021-03-06 06:27:16Z" duration="0.002063" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="5105" name="ServerCallback_ulong_returnsValue(False)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour.ServerCallback_ulong_returnsValue(False)" methodname="ServerCallback_ulong_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour" runstate="Runnable" seed="672163249" result="Passed" start-time="2021-03-06 06:27:16Z" end-time="2021-03-06 06:27:16Z" duration="0.001711" asserts="0">
                    <properties />
                  </test-case>
                </test-suite>
                <test-suite type="ParameterizedMethod" id="5109" name="ServerCallback_ulong_setsOutValue" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour.ServerCallback_ulong_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour" runstate="Runnable" testcasecount="2" result="Passed" start-time="2021-03-06 06:27:16Z" end-time="2021-03-06 06:27:16Z" duration="0.018457" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="5107" name="ServerCallback_ulong_setsOutValue(True)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour.ServerCallback_ulong_setsOutValue(True)" methodname="ServerCallback_ulong_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour" runstate="Runnable" seed="1510980212" result="Passed" start-time="2021-03-06 06:27:16Z" end-time="2021-03-06 06:27:16Z" duration="0.002308" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="5108" name="ServerCallback_ulong_setsOutValue(False)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour.ServerCallback_ulong_setsOutValue(False)" methodname="ServerCallback_ulong_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour" runstate="Runnable" seed="117206575" result="Passed" start-time="2021-03-06 06:27:16Z" end-time="2021-03-06 06:27:16Z" duration="0.001755" asserts="0">
                    <properties />
                  </test-case>
                </test-suite>
                <test-suite type="ParameterizedMethod" id="5112" name="ServerCallback_Vector3_returnsValue" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour.ServerCallback_Vector3_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour" runstate="Runnable" testcasecount="2" result="Passed" start-time="2021-03-06 06:27:16Z" end-time="2021-03-06 06:27:16Z" duration="0.049859" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="5110" name="ServerCallback_Vector3_returnsValue(True)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour.ServerCallback_Vector3_returnsValue(True)" methodname="ServerCallback_Vector3_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour" runstate="Runnable" seed="1432456154" result="Passed" start-time="2021-03-06 06:27:16Z" end-time="2021-03-06 06:27:16Z" duration="0.002307" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="5111" name="ServerCallback_Vector3_returnsValue(False)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour.ServerCallback_Vector3_returnsValue(False)" methodname="ServerCallback_Vector3_returnsValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour" runstate="Runnable" seed="664140815" result="Passed" start-time="2021-03-06 06:27:16Z" end-time="2021-03-06 06:27:16Z" duration="0.033770" asserts="0">
                    <properties />
                  </test-case>
                </test-suite>
                <test-suite type="ParameterizedMethod" id="5115" name="ServerCallback_Vector3_setsOutValue" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour.ServerCallback_Vector3_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour" runstate="Runnable" testcasecount="2" result="Passed" start-time="2021-03-06 06:27:16Z" end-time="2021-03-06 06:27:16Z" duration="0.017021" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                  <properties />
                  <test-case id="5113" name="ServerCallback_Vector3_setsOutValue(True)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour.ServerCallback_Vector3_setsOutValue(True)" methodname="ServerCallback_Vector3_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour" runstate="Runnable" seed="2007199322" result="Passed" start-time="2021-03-06 06:27:16Z" end-time="2021-03-06 06:27:16Z" duration="0.002281" asserts="0">
                    <properties />
                  </test-case>
                  <test-case id="5114" name="ServerCallback_Vector3_setsOutValue(False)" fullname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour.ServerCallback_Vector3_setsOutValue(False)" methodname="ServerCallback_Vector3_setsOutValue" classname="Mirror.Tests.Generated.Attributes.AttributeTest_NetworkBehaviour" runstate="Runnable" seed="1807655016" result="Passed" start-time="2021-03-06 06:27:16Z" end-time="2021-03-06 06:27:16Z" duration="0.001903" asserts="0">
                    <properties />
                  </test-case>
                </test-suite>
              </test-suite>
            </test-suite>
            <test-suite type="TestSuite" id="5888" name="CollectionWriters" fullname="Mirror.Tests.Generated.CollectionWriters" runstate="Runnable" testcasecount="45" result="Passed" start-time="2021-03-06 06:27:17Z" end-time="2021-03-06 06:27:18Z" duration="0.284310" total="45" passed="45" failed="0" inconclusive="0" skipped="0" asserts="0">
              <properties />
              <test-suite type="TestFixture" id="4819" name="Array_ClassWithNoConstructor_Test" fullname="Mirror.Tests.Generated.CollectionWriters.Array_ClassWithNoConstructor_Test" classname="Mirror.Tests.Generated.CollectionWriters.Array_ClassWithNoConstructor_Test" runstate="Runnable" testcasecount="3" result="Passed" start-time="2021-03-06 06:27:17Z" end-time="2021-03-06 06:27:17Z" duration="0.016247" total="3" passed="3" failed="0" inconclusive="0" skipped="0" asserts="0">
                <properties />
                <test-case id="4822" name="SendsData" fullname="Mirror.Tests.Generated.CollectionWriters.Array_ClassWithNoConstructor_Test.SendsData" methodname="SendsData" classname="Mirror.Tests.Generated.CollectionWriters.Array_ClassWithNoConstructor_Test" runstate="Runnable" seed="1393694761" result="Passed" start-time="2021-03-06 06:27:17Z" end-time="2021-03-06 06:27:17Z" duration="0.004682" asserts="0">
                  <properties />
                </test-case>
                <test-case id="4821" name="SendsEmpty" fullname="Mirror.Tests.Generated.CollectionWriters.Array_ClassWithNoConstructor_Test.SendsEmpty" methodname="SendsEmpty" classname="Mirror.Tests.Generated.CollectionWriters.Array_ClassWithNoConstructor_Test" runstate="Runnable" seed="1452022039" result="Passed" start-time="2021-03-06 06:27:17Z" end-time="2021-03-06 06:27:17Z" duration="0.000746" asserts="0">
                  <properties />
                </test-case>
                <test-case id="4820" name="SendsNull" fullname="Mirror.Tests.Generated.CollectionWriters.Array_ClassWithNoConstructor_Test.SendsNull" methodname="SendsNull" classname="Mirror.Tests.Generated.CollectionWriters.Array_ClassWithNoConstructor_Test" runstate="Runnable" seed="952443196" result="Passed" start-time="2021-03-06 06:27:17Z" end-time="2021-03-06 06:27:17Z" duration="0.001422" asserts="0">
                  <properties />
                </test-case>
              </test-suite>
              <test-suite type="TestFixture" id="4815" name="Array_FloatStringStruct_Test" fullname="Mirror.Tests.Generated.CollectionWriters.Array_FloatStringStruct_Test" classname="Mirror.Tests.Generated.CollectionWriters.Array_FloatStringStruct_Test" runstate="Runnable" testcasecount="3" result="Passed" start-time="2021-03-06 06:27:17Z" end-time="2021-03-06 06:27:17Z" duration="0.018933" total="3" passed="3" failed="0" inconclusive="0" skipped="0" asserts="0">
                <properties />
                <test-case id="4818" name="SendsData" fullname="Mirror.Tests.Generated.CollectionWriters.Array_FloatStringStruct_Test.SendsData" methodname="SendsData" classname="Mirror.Tests.Generated.CollectionWriters.Array_FloatStringStruct_Test" runstate="Runnable" seed="326982755" result="Passed" start-time="2021-03-06 06:27:17Z" end-time="2021-03-06 06:27:17Z" duration="0.003973" asserts="0">
                  <properties />
                </test-case>
                <test-case id="4817" name="SendsEmpty" fullname="Mirror.Tests.Generated.CollectionWriters.Array_FloatStringStruct_Test.SendsEmpty" methodname="SendsEmpty" classname="Mirror.Tests.Generated.CollectionWriters.Array_FloatStringStruct_Test" runstate="Runnable" seed="1040355395" result="Passed" start-time="2021-03-06 06:27:17Z" end-time="2021-03-06 06:27:17Z" duration="0.000719" asserts="0">
                  <properties />
                </test-case>
                <test-case id="4816" name="SendsNull" fullname="Mirror.Tests.Generated.CollectionWriters.Array_FloatStringStruct_Test.SendsNull" methodname="SendsNull" classname="Mirror.Tests.Generated.CollectionWriters.Array_FloatStringStruct_Test" runstate="Runnable" seed="1191873681" result="Passed" start-time="2021-03-06 06:27:17Z" end-time="2021-03-06 06:27:17Z" duration="0.000750" asserts="0">
                  <properties />
                </test-case>
              </test-suite>
              <test-suite type="TestFixture" id="4803" name="Array_int_Test" fullname="Mirror.Tests.Generated.CollectionWriters.Array_int_Test" classname="Mirror.Tests.Generated.CollectionWriters.Array_int_Test" runstate="Runnable" testcasecount="3" result="Passed" start-time="2021-03-06 06:27:17Z" end-time="2021-03-06 06:27:17Z" duration="0.012805" total="3" passed="3" failed="0" inconclusive="0" skipped="0" asserts="0">
                <properties />
                <test-case id="4806" name="SendsData" fullname="Mirror.Tests.Generated.CollectionWriters.Array_int_Test.SendsData" methodname="SendsData" classname="Mirror.Tests.Generated.CollectionWriters.Array_int_Test" runstate="Runnable" seed="171439385" result="Passed" start-time="2021-03-06 06:27:17Z" end-time="2021-03-06 06:27:17Z" duration="0.003366" asserts="0">
                  <properties />
                </test-case>
                <test-case id="4805" name="SendsEmpty" fullname="Mirror.Tests.Generated.CollectionWriters.Array_int_Test.SendsEmpty" methodname="SendsEmpty" classname="Mirror.Tests.Generated.CollectionWriters.Array_int_Test" runstate="Runnable" seed="1596101374" result="Passed" start-time="2021-03-06 06:27:17Z" end-time="2021-03-06 06:27:17Z" duration="0.000651" asserts="0">
                  <properties />
                </test-case>
                <test-case id="4804" name="SendsNull" fullname="Mirror.Tests.Generated.CollectionWriters.Array_int_Test.SendsNull" methodname="SendsNull" classname="Mirror.Tests.Generated.CollectionWriters.Array_int_Test" runstate="Runnable" seed="1144035649" result="Passed" start-time="2021-03-06 06:27:17Z" end-time="2021-03-06 06:27:17Z" duration="0.000844" asserts="0">
                  <properties />
                </test-case>
              </test-suite>
              <test-suite type="TestFixture" id="4807" name="Array_string_Test" fullname="Mirror.Tests.Generated.CollectionWriters.Array_string_Test" classname="Mirror.Tests.Generated.CollectionWriters.Array_string_Test" runstate="Runnable" testcasecount="3" result="Passed" start-time="2021-03-06 06:27:17Z" end-time="2021-03-06 06:27:17Z" duration="0.012885" total="3" passed="3" failed="0" inconclusive="0" skipped="0" asserts="0">
                <properties />
                <test-case id="4810" name="SendsData" fullname="Mirror.Tests.Generated.CollectionWriters.Array_string_Test.SendsData" methodname="SendsData" classname="Mirror.Tests.Generated.CollectionWriters.Array_string_Test" runstate="Runnable" seed="190743312" result="Passed" start-time="2021-03-06 06:27:17Z" end-time="2021-03-06 06:27:17Z" duration="0.002529" asserts="0">
                  <properties />
                </test-case>
                <test-case id="4809" name="SendsEmpty" fullname="Mirror.Tests.Generated.CollectionWriters.Array_string_Test.SendsEmpty" methodname="SendsEmpty" classname="Mirror.Tests.Generated.CollectionWriters.Array_string_Test" runstate="Runnable" seed="497948201" result="Passed" start-time="2021-03-06 06:27:17Z" end-time="2021-03-06 06:27:17Z" duration="0.000844" asserts="0">
                  <properties />
                </test-case>
                <test-case id="4808" name="SendsNull" fullname="Mirror.Tests.Generated.CollectionWriters.Array_string_Test.SendsNull" methodname="SendsNull" classname="Mirror.Tests.Generated.CollectionWriters.Array_string_Test" runstate="Runnable" seed="9069067" result="Passed" start-time="2021-03-06 06:27:17Z" end-time="2021-03-06 06:27:17Z" duration="0.000882" asserts="0">
                  <properties />
                </test-case>
              </test-suite>
              <test-suite type="TestFixture" id="4811" name="Array_Vector3_Test" fullname="Mirror.Tests.Generated.CollectionWriters.Array_Vector3_Test" classname="Mirror.Tests.Generated.CollectionWriters.Array_Vector3_Test" runstate="Runnable" testcasecount="3" result="Passed" start-time="2021-03-06 06:27:17Z" end-time="2021-03-06 06:27:17Z" duration="0.019028" total="3" passed="3" failed="0" inconclusive="0" skipped="0" asserts="0">
                <properties />
                <test-case id="4814" name="SendsData" fullname="Mirror.Tests.Generated.CollectionWriters.Array_Vector3_Test.SendsData" methodname="SendsData" classname="Mirror.Tests.Generated.CollectionWriters.Array_Vector3_Test" runstate="Runnable" seed="9418981" result="Passed" start-time="2021-03-06 06:27:17Z" end-time="2021-03-06 06:27:17Z" duration="0.004210" asserts="0">
                  <properties />
                </test-case>
                <test-case id="4813" name="SendsEmpty" fullname="Mirror.Tests.Generated.CollectionWriters.Array_Vector3_Test.SendsEmpty" methodname="SendsEmpty" classname="Mirror.Tests.Generated.CollectionWriters.Array_Vector3_Test" runstate="Runnable" seed="1314101488" result="Passed" start-time="2021-03-06 06:27:17Z" end-time="2021-03-06 06:27:17Z" duration="0.000610" asserts="0">
                  <properties />
                </test-case>
                <test-case id="4812" name="SendsNull" fullname="Mirror.Tests.Generated.CollectionWriters.Array_Vector3_Test.SendsNull" methodname="SendsNull" classname="Mirror.Tests.Generated.CollectionWriters.Array_Vector3_Test" runstate="Runnable" seed="1653858135" result="Passed" start-time="2021-03-06 06:27:17Z" end-time="2021-03-06 06:27:17Z" duration="0.000613" asserts="0">
                  <properties />
                </test-case>
              </test-suite>
              <test-suite type="TestFixture" id="4839" name="ArraySegment_ClassWithNoConstructor_Test" fullname="Mirror.Tests.Generated.CollectionWriters.ArraySegment_ClassWithNoConstructor_Test" classname="Mirror.Tests.Generated.CollectionWriters.ArraySegment_ClassWithNoConstructor_Test" runstate="Runnable" testcasecount="3" result="Passed" start-time="2021-03-06 06:27:17Z" end-time="2021-03-06 06:27:17Z" duration="0.013067" total="3" passed="3" failed="0" inconclusive="0" skipped="0" asserts="0">
                <properties />
                <test-case id="4842" name="SendsData" fullname="Mirror.Tests.Generated.CollectionWriters.ArraySegment_ClassWithNoConstructor_Test.SendsData" methodname="SendsData" classname="Mirror.Tests.Generated.CollectionWriters.ArraySegment_ClassWithNoConstructor_Test" runstate="Runnable" seed="650976795" result="Passed" start-time="2021-03-06 06:27:17Z" end-time="2021-03-06 06:27:17Z" duration="0.003637" asserts="0">
                  <properties />
                </test-case>
                <test-case id="4841" name="SendsEmpty" fullname="Mirror.Tests.Generated.CollectionWriters.ArraySegment_ClassWithNoConstructor_Test.SendsEmpty" methodname="SendsEmpty" classname="Mirror.Tests.Generated.CollectionWriters.ArraySegment_ClassWithNoConstructor_Test" runstate="Runnable" seed="2073503220" result="Passed" start-time="2021-03-06 06:27:17Z" end-time="2021-03-06 06:27:17Z" duration="0.000765" asserts="0">
                  <properties />
                </test-case>
                <test-case id="4840" name="SendsNull" fullname="Mirror.Tests.Generated.CollectionWriters.ArraySegment_ClassWithNoConstructor_Test.SendsNull" methodname="SendsNull" classname="Mirror.Tests.Generated.CollectionWriters.ArraySegment_ClassWithNoConstructor_Test" runstate="Runnable" seed="1265333720" result="Passed" start-time="2021-03-06 06:27:17Z" end-time="2021-03-06 06:27:17Z" duration="0.000739" asserts="0">
                  <properties />
                </test-case>
              </test-suite>
              <test-suite type="TestFixture" id="4835" name="ArraySegment_FloatStringStruct_Test" fullname="Mirror.Tests.Generated.CollectionWriters.ArraySegment_FloatStringStruct_Test" classname="Mirror.Tests.Generated.CollectionWriters.ArraySegment_FloatStringStruct_Test" runstate="Runnable" testcasecount="3" result="Passed" start-time="2021-03-06 06:27:17Z" end-time="2021-03-06 06:27:17Z" duration="0.015034" total="3" passed="3" failed="0" inconclusive="0" skipped="0" asserts="0">
                <properties />
                <test-case id="4838" name="SendsData" fullname="Mirror.Tests.Generated.CollectionWriters.ArraySegment_FloatStringStruct_Test.SendsData" methodname="SendsData" classname="Mirror.Tests.Generated.CollectionWriters.ArraySegment_FloatStringStruct_Test" runstate="Runnable" seed="364387521" result="Passed" start-time="2021-03-06 06:27:17Z" end-time="2021-03-06 06:27:17Z" duration="0.003516" asserts="0">
                  <properties />
                </test-case>
                <test-case id="4837" name="SendsEmpty" fullname="Mirror.Tests.Generated.CollectionWriters.ArraySegment_FloatStringStruct_Test.SendsEmpty" methodname="SendsEmpty" classname="Mirror.Tests.Generated.CollectionWriters.ArraySegment_FloatStringStruct_Test" runstate="Runnable" seed="662307616" result="Passed" start-time="2021-03-06 06:27:17Z" end-time="2021-03-06 06:27:17Z" duration="0.000681" asserts="0">
                  <properties />
                </test-case>
                <test-case id="4836" name="SendsNull" fullname="Mirror.Tests.Generated.CollectionWriters.ArraySegment_FloatStringStruct_Test.SendsNull" methodname="SendsNull" classname="Mirror.Tests.Generated.CollectionWriters.ArraySegment_FloatStringStruct_Test" runstate="Runnable" seed="204310349" result="Passed" start-time="2021-03-06 06:27:17Z" end-time="2021-03-06 06:27:17Z" duration="0.000617" asserts="0">
                  <properties />
                </test-case>
              </test-suite>
              <test-suite type="TestFixture" id="4823" name="ArraySegment_int_Test" fullname="Mirror.Tests.Generated.CollectionWriters.ArraySegment_int_Test" classname="Mirror.Tests.Generated.CollectionWriters.ArraySegment_int_Test" runstate="Runnable" testcasecount="3" result="Passed" start-time="2021-03-06 06:27:17Z" end-time="2021-03-06 06:27:17Z" duration="0.013988" total="3" passed="3" failed="0" inconclusive="0" skipped="0" asserts="0">
                <properties />
                <test-case id="4826" name="SendsData" fullname="Mirror.Tests.Generated.CollectionWriters.ArraySegment_int_Test.SendsData" methodname="SendsData" classname="Mirror.Tests.Generated.CollectionWriters.ArraySegment_int_Test" runstate="Runnable" seed="322174191" result="Passed" start-time="2021-03-06 06:27:17Z" end-time="2021-03-06 06:27:17Z" duration="0.003231" asserts="0">
                  <properties />
                </test-case>
                <test-case id="4825" name="SendsEmpty" fullname="Mirror.Tests.Generated.CollectionWriters.ArraySegment_int_Test.SendsEmpty" methodname="SendsEmpty" classname="Mirror.Tests.Generated.CollectionWriters.ArraySegment_int_Test" runstate="Runnable" seed="1176837606" result="Passed" start-time="2021-03-06 06:27:17Z" end-time="2021-03-06 06:27:17Z" duration="0.000684" asserts="0">
                  <properties />
                </test-case>
                <test-case id="4824" name="SendsNull" fullname="Mirror.Tests.Generated.CollectionWriters.ArraySegment_int_Test.SendsNull" methodname="SendsNull" classname="Mirror.Tests.Generated.CollectionWriters.ArraySegment_int_Test" runstate="Runnable" seed="46446809" result="Passed" start-time="2021-03-06 06:27:17Z" end-time="2021-03-06 06:27:17Z" duration="0.000702" asserts="0">
                  <properties />
                </test-case>
              </test-suite>
              <test-suite type="TestFixture" id="4827" name="ArraySegment_string_Test" fullname="Mirror.Tests.Generated.CollectionWriters.ArraySegment_string_Test" classname="Mirror.Tests.Generated.CollectionWriters.ArraySegment_string_Test" runstate="Runnable" testcasecount="3" result="Passed" start-time="2021-03-06 06:27:17Z" end-time="2021-03-06 06:27:17Z" duration="0.013414" total="3" passed="3" failed="0" inconclusive="0" skipped="0" asserts="0">
                <properties />
                <test-case id="4830" name="SendsData" fullname="Mirror.Tests.Generated.CollectionWriters.ArraySegment_string_Test.SendsData" methodname="SendsData" classname="Mirror.Tests.Generated.CollectionWriters.ArraySegment_string_Test" runstate="Runnable" seed="871010382" result="Passed" start-time="2021-03-06 06:27:17Z" end-time="2021-03-06 06:27:17Z" duration="0.003155" asserts="0">
                  <properties />
                </test-case>
                <test-case id="4829" name="SendsEmpty" fullname="Mirror.Tests.Generated.CollectionWriters.ArraySegment_string_Test.SendsEmpty" methodname="SendsEmpty" classname="Mirror.Tests.Generated.CollectionWriters.ArraySegment_string_Test" runstate="Runnable" seed="214147726" result="Passed" start-time="2021-03-06 06:27:17Z" end-time="2021-03-06 06:27:17Z" duration="0.000839" asserts="0">
                  <properties />
                </test-case>
                <test-case id="4828" name="SendsNull" fullname="Mirror.Tests.Generated.CollectionWriters.ArraySegment_string_Test.SendsNull" methodname="SendsNull" classname="Mirror.Tests.Generated.CollectionWriters.ArraySegment_string_Test" runstate="Runnable" seed="1344688673" result="Passed" start-time="2021-03-06 06:27:17Z" end-time="2021-03-06 06:27:17Z" duration="0.000674" asserts="0">
                  <properties />
                </test-case>
              </test-suite>
              <test-suite type="TestFixture" id="4831" name="ArraySegment_Vector3_Test" fullname="Mirror.Tests.Generated.CollectionWriters.ArraySegment_Vector3_Test" classname="Mirror.Tests.Generated.CollectionWriters.ArraySegment_Vector3_Test" runstate="Runnable" testcasecount="3" result="Passed" start-time="2021-03-06 06:27:17Z" end-time="2021-03-06 06:27:17Z" duration="0.013627" total="3" passed="3" failed="0" inconclusive="0" skipped="0" asserts="0">
                <properties />
                <test-case id="4834" name="SendsData" fullname="Mirror.Tests.Generated.CollectionWriters.ArraySegment_Vector3_Test.SendsData" methodname="SendsData" classname="Mirror.Tests.Generated.CollectionWriters.ArraySegment_Vector3_Test" runstate="Runnable" seed="1547895340" result="Passed" start-time="2021-03-06 06:27:17Z" end-time="2021-03-06 06:27:17Z" duration="0.003742" asserts="0">
                  <properties />
                </test-case>
                <test-case id="4833" name="SendsEmpty" fullname="Mirror.Tests.Generated.CollectionWriters.ArraySegment_Vector3_Test.SendsEmpty" methodname="SendsEmpty" classname="Mirror.Tests.Generated.CollectionWriters.ArraySegment_Vector3_Test" runstate="Runnable" seed="1299540487" result="Passed" start-time="2021-03-06 06:27:17Z" end-time="2021-03-06 06:27:17Z" duration="0.000765" asserts="0">
                  <properties />
                </test-case>
                <test-case id="4832" name="SendsNull" fullname="Mirror.Tests.Generated.CollectionWriters.ArraySegment_Vector3_Test.SendsNull" methodname="SendsNull" classname="Mirror.Tests.Generated.CollectionWriters.ArraySegment_Vector3_Test" runstate="Runnable" seed="1355596097" result="Passed" start-time="2021-03-06 06:27:17Z" end-time="2021-03-06 06:27:17Z" duration="0.000722" asserts="0">
                  <properties />
                </test-case>
              </test-suite>
              <test-suite type="TestFixture" id="4859" name="List_ClassWithNoConstructor_Test" fullname="Mirror.Tests.Generated.CollectionWriters.List_ClassWithNoConstructor_Test" classname="Mirror.Tests.Generated.CollectionWriters.List_ClassWithNoConstructor_Test" runstate="Runnable" testcasecount="3" result="Passed" start-time="2021-03-06 06:27:17Z" end-time="2021-03-06 06:27:17Z" duration="0.012596" total="3" passed="3" failed="0" inconclusive="0" skipped="0" asserts="0">
                <properties />
                <test-case id="4862" name="SendsData" fullname="Mirror.Tests.Generated.CollectionWriters.List_ClassWithNoConstructor_Test.SendsData" methodname="SendsData" classname="Mirror.Tests.Generated.CollectionWriters.List_ClassWithNoConstructor_Test" runstate="Runnable" seed="2070110422" result="Passed" start-time="2021-03-06 06:27:17Z" end-time="2021-03-06 06:27:17Z" duration="0.003663" asserts="0">
                  <properties />
                </test-case>
                <test-case id="4861" name="SendsEmpty" fullname="Mirror.Tests.Generated.CollectionWriters.List_ClassWithNoConstructor_Test.SendsEmpty" methodname="SendsEmpty" classname="Mirror.Tests.Generated.CollectionWriters.List_ClassWithNoConstructor_Test" runstate="Runnable" seed="1062749961" result="Passed" start-time="2021-03-06 06:27:17Z" end-time="2021-03-06 06:27:17Z" duration="0.000723" asserts="0">
                  <properties />
                </test-case>
                <test-case id="4860" name="SendsNull" fullname="Mirror.Tests.Generated.CollectionWriters.List_ClassWithNoConstructor_Test.SendsNull" methodname="SendsNull" classname="Mirror.Tests.Generated.CollectionWriters.List_ClassWithNoConstructor_Test" runstate="Runnable" seed="83281558" result="Passed" start-time="2021-03-06 06:27:17Z" end-time="2021-03-06 06:27:17Z" duration="0.000652" asserts="0">
                  <properties />
                </test-case>
              </test-suite>
              <test-suite type="TestFixture" id="4855" name="List_FloatStringStruct_Test" fullname="Mirror.Tests.Generated.CollectionWriters.List_FloatStringStruct_Test" classname="Mirror.Tests.Generated.CollectionWriters.List_FloatStringStruct_Test" runstate="Runnable" testcasecount="3" result="Passed" start-time="2021-03-06 06:27:17Z" end-time="2021-03-06 06:27:17Z" duration="0.018457" total="3" passed="3" failed="0" inconclusive="0" skipped="0" asserts="0">
                <properties />
                <test-case id="4858" name="SendsData" fullname="Mirror.Tests.Generated.CollectionWriters.List_FloatStringStruct_Test.SendsData" methodname="SendsData" classname="Mirror.Tests.Generated.CollectionWriters.List_FloatStringStruct_Test" runstate="Runnable" seed="832082446" result="Passed" start-time="2021-03-06 06:27:17Z" end-time="2021-03-06 06:27:17Z" duration="0.004536" asserts="0">
                  <properties />
                </test-case>
                <test-case id="4857" name="SendsEmpty" fullname="Mirror.Tests.Generated.CollectionWriters.List_FloatStringStruct_Test.SendsEmpty" methodname="SendsEmpty" classname="Mirror.Tests.Generated.CollectionWriters.List_FloatStringStruct_Test" runstate="Runnable" seed="723841104" result="Passed" start-time="2021-03-06 06:27:17Z" end-time="2021-03-06 06:27:17Z" duration="0.000716" asserts="0">
                  <properties />
                </test-case>
                <test-case id="4856" name="SendsNull" fullname="Mirror.Tests.Generated.CollectionWriters.List_FloatStringStruct_Test.SendsNull" methodname="SendsNull" classname="Mirror.Tests.Generated.CollectionWriters.List_FloatStringStruct_Test" runstate="Runnable" seed="822764315" result="Passed" start-time="2021-03-06 06:27:17Z" end-time="2021-03-06 06:27:17Z" duration="0.000882" asserts="0">
                  <properties />
                </test-case>
              </test-suite>
              <test-suite type="TestFixture" id="4843" name="List_int_Test" fullname="Mirror.Tests.Generated.CollectionWriters.List_int_Test" classname="Mirror.Tests.Generated.CollectionWriters.List_int_Test" runstate="Runnable" testcasecount="3" result="Passed" start-time="2021-03-06 06:27:17Z" end-time="2021-03-06 06:27:17Z" duration="0.014143" total="3" passed="3" failed="0" inconclusive="0" skipped="0" asserts="0">
                <properties />
                <test-case id="4846" name="SendsData" fullname="Mirror.Tests.Generated.CollectionWriters.List_int_Test.SendsData" methodname="SendsData" classname="Mirror.Tests.Generated.CollectionWriters.List_int_Test" runstate="Runnable" seed="206768806" result="Passed" start-time="2021-03-06 06:27:17Z" end-time="2021-03-06 06:27:17Z" duration="0.003063" asserts="0">
                  <properties />
                </test-case>
                <test-case id="4845" name="SendsEmpty" fullname="Mirror.Tests.Generated.CollectionWriters.List_int_Test.SendsEmpty" methodname="SendsEmpty" classname="Mirror.Tests.Generated.CollectionWriters.List_int_Test" runstate="Runnable" seed="1493467500" result="Passed" start-time="2021-03-06 06:27:17Z" end-time="2021-03-06 06:27:17Z" duration="0.000830" asserts="0">
                  <properties />
                </test-case>
                <test-case id="4844" name="SendsNull" fullname="Mirror.Tests.Generated.CollectionWriters.List_int_Test.SendsNull" methodname="SendsNull" classname="Mirror.Tests.Generated.CollectionWriters.List_int_Test" runstate="Runnable" seed="460384064" result="Passed" start-time="2021-03-06 06:27:17Z" end-time="2021-03-06 06:27:17Z" duration="0.000667" asserts="0">
                  <properties />
                </test-case>
              </test-suite>
              <test-suite type="TestFixture" id="4847" name="List_string_Test" fullname="Mirror.Tests.Generated.CollectionWriters.List_string_Test" classname="Mirror.Tests.Generated.CollectionWriters.List_string_Test" runstate="Runnable" testcasecount="3" result="Passed" start-time="2021-03-06 06:27:17Z" end-time="2021-03-06 06:27:18Z" duration="0.014868" total="3" passed="3" failed="0" inconclusive="0" skipped="0" asserts="0">
                <properties />
                <test-case id="4850" name="SendsData" fullname="Mirror.Tests.Generated.CollectionWriters.List_string_Test.SendsData" methodname="SendsData" classname="Mirror.Tests.Generated.CollectionWriters.List_string_Test" runstate="Runnable" seed="1620194629" result="Passed" start-time="2021-03-06 06:27:17Z" end-time="2021-03-06 06:27:17Z" duration="0.002783" asserts="0">
                  <properties />
                </test-case>
                <test-case id="4849" name="SendsEmpty" fullname="Mirror.Tests.Generated.CollectionWriters.List_string_Test.SendsEmpty" methodname="SendsEmpty" classname="Mirror.Tests.Generated.CollectionWriters.List_string_Test" runstate="Runnable" seed="1648319102" result="Passed" start-time="2021-03-06 06:27:17Z" end-time="2021-03-06 06:27:17Z" duration="0.000760" asserts="0">
                  <properties />
                </test-case>
                <test-case id="4848" name="SendsNull" fullname="Mirror.Tests.Generated.CollectionWriters.List_string_Test.SendsNull" methodname="SendsNull" classname="Mirror.Tests.Generated.CollectionWriters.List_string_Test" runstate="Runnable" seed="1933190848" result="Passed" start-time="2021-03-06 06:27:17Z" end-time="2021-03-06 06:27:17Z" duration="0.000740" asserts="0">
                  <properties />
                </test-case>
              </test-suite>
              <test-suite type="TestFixture" id="4851" name="List_Vector3_Test" fullname="Mirror.Tests.Generated.CollectionWriters.List_Vector3_Test" classname="Mirror.Tests.Generated.CollectionWriters.List_Vector3_Test" runstate="Runnable" testcasecount="3" result="Passed" start-time="2021-03-06 06:27:18Z" end-time="2021-03-06 06:27:18Z" duration="0.014544" total="3" passed="3" failed="0" inconclusive="0" skipped="0" asserts="0">
                <properties />
                <test-case id="4854" name="SendsData" fullname="Mirror.Tests.Generated.CollectionWriters.List_Vector3_Test.SendsData" methodname="SendsData" classname="Mirror.Tests.Generated.CollectionWriters.List_Vector3_Test" runstate="Runnable" seed="1718735019" result="Passed" start-time="2021-03-06 06:27:18Z" end-time="2021-03-06 06:27:18Z" duration="0.003988" asserts="0">
                  <properties />
                </test-case>
                <test-case id="4853" name="SendsEmpty" fullname="Mirror.Tests.Generated.CollectionWriters.List_Vector3_Test.SendsEmpty" methodname="SendsEmpty" classname="Mirror.Tests.Generated.CollectionWriters.List_Vector3_Test" runstate="Runnable" seed="1781571832" result="Passed" start-time="2021-03-06 06:27:18Z" end-time="2021-03-06 06:27:18Z" duration="0.000806" asserts="0">
                  <properties />
                </test-case>
                <test-case id="4852" name="SendsNull" fullname="Mirror.Tests.Generated.CollectionWriters.List_Vector3_Test.SendsNull" methodname="SendsNull" classname="Mirror.Tests.Generated.CollectionWriters.List_Vector3_Test" runstate="Runnable" seed="62414263" result="Passed" start-time="2021-03-06 06:27:18Z" end-time="2021-03-06 06:27:18Z" duration="0.000674" asserts="0">
                  <properties />
                </test-case>
              </test-suite>
            </test-suite>
          </test-suite>
          <test-suite type="TestSuite" id="5890" name="GeneratedWriterTests" fullname="Mirror.Tests.GeneratedWriterTests" runstate="Runnable" testcasecount="1" result="Passed" start-time="2021-03-06 06:27:18Z" end-time="2021-03-06 06:27:18Z" duration="0.075294" total="1" passed="1" failed="0" inconclusive="0" skipped="0" asserts="0">
            <properties />
            <test-suite type="TestFixture" id="5658" name="FieldsInBaseClasses" fullname="Mirror.Tests.GeneratedWriterTests.FieldsInBaseClasses" classname="Mirror.Tests.GeneratedWriterTests.FieldsInBaseClasses" runstate="Runnable" testcasecount="1" result="Passed" start-time="2021-03-06 06:27:18Z" end-time="2021-03-06 06:27:18Z" duration="0.066262" total="1" passed="1" failed="0" inconclusive="0" skipped="0" asserts="0">
              <properties />
              <test-case id="5659" name="WriterShouldIncludeFieldsInBaseClass" fullname="Mirror.Tests.GeneratedWriterTests.FieldsInBaseClasses.WriterShouldIncludeFieldsInBaseClass" methodname="WriterShouldIncludeFieldsInBaseClass" classname="Mirror.Tests.GeneratedWriterTests.FieldsInBaseClasses" runstate="Runnable" seed="116172919" result="Passed" start-time="2021-03-06 06:27:18Z" end-time="2021-03-06 06:27:18Z" duration="0.060113" asserts="0">
                <properties />
                <output><![CDATA[Server started listening
Shutting down client.
]]></output>
              </test-case>
            </test-suite>
          </test-suite>
          <test-suite type="TestFixture" id="4249" name="Grid2DTests" fullname="Mirror.Tests.Grid2DTests" classname="Mirror.Tests.Grid2DTests" runstate="Runnable" testcasecount="3" result="Passed" start-time="2021-03-06 06:27:18Z" end-time="2021-03-06 06:27:18Z" duration="0.014784" total="3" passed="3" failed="0" inconclusive="0" skipped="0" asserts="0">
            <properties />
            <test-case id="4250" name="AddAndGetNeighbours" fullname="Mirror.Tests.Grid2DTests.AddAndGetNeighbours" methodname="AddAndGetNeighbours" classname="Mirror.Tests.Grid2DTests" runstate="Runnable" seed="1264188206" result="Passed" start-time="2021-03-06 06:27:18Z" end-time="2021-03-06 06:27:18Z" duration="0.004023" asserts="0">
              <properties />
            </test-case>
            <test-case id="4252" name="ClearNonAlloc" fullname="Mirror.Tests.Grid2DTests.ClearNonAlloc" methodname="ClearNonAlloc" classname="Mirror.Tests.Grid2DTests" runstate="Runnable" seed="121934961" result="Passed" start-time="2021-03-06 06:27:18Z" end-time="2021-03-06 06:27:18Z" duration="0.001567" asserts="0">
              <properties />
            </test-case>
            <test-case id="4251" name="GetIgnoresTooFarNeighbours" fullname="Mirror.Tests.Grid2DTests.GetIgnoresTooFarNeighbours" methodname="GetIgnoresTooFarNeighbours" classname="Mirror.Tests.Grid2DTests" runstate="Runnable" seed="1473990699" result="Passed" start-time="2021-03-06 06:27:18Z" end-time="2021-03-06 06:27:18Z" duration="0.000693" asserts="0">
              <properties />
            </test-case>
          </test-suite>
          <test-suite type="TestFixture" id="4253" name="InterestManagementTests_Default" fullname="Mirror.Tests.InterestManagementTests_Default" classname="Mirror.Tests.InterestManagementTests_Default" runstate="Runnable" testcasecount="4" result="Passed" start-time="2021-03-06 06:27:18Z" end-time="2021-03-06 06:27:18Z" duration="0.140916" total="4" passed="4" failed="0" inconclusive="0" skipped="0" asserts="0">
            <properties />
            <test-case id="4256" name="EveryoneSeesEveryone_Initial" fullname="Mirror.Tests.InterestManagementTests_Default.EveryoneSeesEveryone_Initial" methodname="EveryoneSeesEveryone_Initial" classname="Mirror.Tests.InterestManagementTests_Default" runstate="Runnable" seed="832997298" result="Passed" start-time="2021-03-06 06:27:18Z" end-time="2021-03-06 06:27:18Z" duration="0.025861" asserts="0">
              <properties />
              <output><![CDATA[Server started listening
]]></output>
            </test-case>
            <test-case id="4254" name="ForceHidden_Initial" fullname="Mirror.Tests.InterestManagementTests_Default.ForceHidden_Initial" methodname="ForceHidden_Initial" classname="Mirror.Tests.InterestManagementTests_Default" runstate="Runnable" seed="574703252" result="Passed" start-time="2021-03-06 06:27:18Z" end-time="2021-03-06 06:27:18Z" duration="0.033994" asserts="0">
              <properties />
              <output><![CDATA[Server started listening
]]></output>
            </test-case>
            <test-case id="4255" name="ForceShown_Initial" fullname="Mirror.Tests.InterestManagementTests_Default.ForceShown_Initial" methodname="ForceShown_Initial" classname="Mirror.Tests.InterestManagementTests_Default" runstate="Runnable" seed="1494077595" result="Passed" start-time="2021-03-06 06:27:18Z" end-time="2021-03-06 06:27:18Z" duration="0.030079" asserts="0">
              <properties />
              <output><![CDATA[Server started listening
]]></output>
            </test-case>
            <test-case id="4257" name="PlayerAlwaysSeesSelf_Initial" fullname="Mirror.Tests.InterestManagementTests_Default.PlayerAlwaysSeesSelf_Initial" methodname="PlayerAlwaysSeesSelf_Initial" classname="Mirror.Tests.InterestManagementTests_Common" runstate="Runnable" seed="544861781" result="Passed" start-time="2021-03-06 06:27:18Z" end-time="2021-03-06 06:27:18Z" duration="0.030414" asserts="0">
              <properties />
              <output><![CDATA[Server started listening
]]></output>
            </test-case>
          </test-suite>
          <test-suite type="TestFixture" id="4258" name="InterestManagementTests_Distance" fullname="Mirror.Tests.InterestManagementTests_Distance" classname="Mirror.Tests.InterestManagementTests_Distance" runstate="Runnable" testcasecount="7" result="Passed" start-time="2021-03-06 06:27:18Z" end-time="2021-03-06 06:27:19Z" duration="0.259538" total="7" passed="7" failed="0" inconclusive="0" skipped="0" asserts="0">
            <properties />
            <test-case id="4259" name="ForceHidden_Initial" fullname="Mirror.Tests.InterestManagementTests_Distance.ForceHidden_Initial" methodname="ForceHidden_Initial" classname="Mirror.Tests.InterestManagementTests_Distance" runstate="Runnable" seed="1635290375" result="Passed" start-time="2021-03-06 06:27:18Z" end-time="2021-03-06 06:27:18Z" duration="0.023335" asserts="0">
              <properties />
              <output><![CDATA[Server started listening
]]></output>
            </test-case>
            <test-case id="4260" name="ForceShown_Initial" fullname="Mirror.Tests.InterestManagementTests_Distance.ForceShown_Initial" methodname="ForceShown_Initial" classname="Mirror.Tests.InterestManagementTests_Distance" runstate="Runnable" seed="1499900606" result="Passed" start-time="2021-03-06 06:27:18Z" end-time="2021-03-06 06:27:18Z" duration="0.034986" asserts="0">
              <properties />
              <output><![CDATA[Server started listening
]]></output>
            </test-case>
            <test-case id="4261" name="InRange_Initial" fullname="Mirror.Tests.InterestManagementTests_Distance.InRange_Initial" methodname="InRange_Initial" classname="Mirror.Tests.InterestManagementTests_Distance" runstate="Runnable" seed="2108187932" result="Passed" start-time="2021-03-06 06:27:18Z" end-time="2021-03-06 06:27:19Z" duration="0.057395" asserts="0">
              <properties />
              <output><![CDATA[Server started listening
]]></output>
            </test-case>
            <test-case id="4262" name="InRange_NotInitial" fullname="Mirror.Tests.InterestManagementTests_Distance.InRange_NotInitial" methodname="InRange_NotInitial" classname="Mirror.Tests.InterestManagementTests_Distance" runstate="Runnable" seed="1056968267" result="Passed" start-time="2021-03-06 06:27:19Z" end-time="2021-03-06 06:27:19Z" duration="0.030681" asserts="0">
              <properties />
              <output><![CDATA[Server started listening
]]></output>
            </test-case>
            <test-case id="4263" name="OutOfRange_Initial" fullname="Mirror.Tests.InterestManagementTests_Distance.OutOfRange_Initial" methodname="OutOfRange_Initial" classname="Mirror.Tests.InterestManagementTests_Distance" runstate="Runnable" seed="2062125388" result="Passed" start-time="2021-03-06 06:27:19Z" end-time="2021-03-06 06:27:19Z" duration="0.034352" asserts="0">
              <properties />
              <output><![CDATA[Server started listening
]]></output>
            </test-case>
            <test-case id="4264" name="OutOfRange_NotInitial" fullname="Mirror.Tests.InterestManagementTests_Distance.OutOfRange_NotInitial" methodname="OutOfRange_NotInitial" classname="Mirror.Tests.InterestManagementTests_Distance" runstate="Runnable" seed="1316085231" result="Passed" start-time="2021-03-06 06:27:19Z" end-time="2021-03-06 06:27:19Z" duration="0.030405" asserts="0">
              <properties />
              <output><![CDATA[Server started listening
]]></output>
            </test-case>
            <test-case id="4265" name="PlayerAlwaysSeesSelf_Initial" fullname="Mirror.Tests.InterestManagementTests_Distance.PlayerAlwaysSeesSelf_Initial" methodname="PlayerAlwaysSeesSelf_Initial" classname="Mirror.Tests.InterestManagementTests_Common" runstate="Runnable" seed="181722310" result="Passed" start-time="2021-03-06 06:27:19Z" end-time="2021-03-06 06:27:19Z" duration="0.030330" asserts="0">
              <properties />
              <output><![CDATA[Server started listening
]]></output>
            </test-case>
          </test-suite>
          <test-suite type="TestFixture" id="4266" name="InterestManagementTests_SpatialHashing" fullname="Mirror.Tests.InterestManagementTests_SpatialHashing" classname="Mirror.Tests.InterestManagementTests_SpatialHashing" runstate="Runnable" testcasecount="7" result="Passed" start-time="2021-03-06 06:27:19Z" end-time="2021-03-06 06:27:19Z" duration="0.237392" total="7" passed="7" failed="0" inconclusive="0" skipped="0" asserts="0">
            <properties />
            <test-case id="4267" name="ForceHidden_Initial" fullname="Mirror.Tests.InterestManagementTests_SpatialHashing.ForceHidden_Initial" methodname="ForceHidden_Initial" classname="Mirror.Tests.InterestManagementTests_SpatialHashing" runstate="Runnable" seed="538046648" result="Passed" start-time="2021-03-06 06:27:19Z" end-time="2021-03-06 06:27:19Z" duration="0.032060" asserts="0">
              <properties />
              <output><![CDATA[Server started listening
]]></output>
            </test-case>
            <test-case id="4268" name="ForceShown_Initial" fullname="Mirror.Tests.InterestManagementTests_SpatialHashing.ForceShown_Initial" methodname="ForceShown_Initial" classname="Mirror.Tests.InterestManagementTests_SpatialHashing" runstate="Runnable" seed="966448284" result="Passed" start-time="2021-03-06 06:27:19Z" end-time="2021-03-06 06:27:19Z" duration="0.030366" asserts="0">
              <properties />
              <output><![CDATA[Server started listening
]]></output>
            </test-case>
            <test-case id="4269" name="InRange_Initial" fullname="Mirror.Tests.InterestManagementTests_SpatialHashing.InRange_Initial" methodname="InRange_Initial" classname="Mirror.Tests.InterestManagementTests_SpatialHashing" runstate="Runnable" seed="251745639" result="Passed" start-time="2021-03-06 06:27:19Z" end-time="2021-03-06 06:27:19Z" duration="0.030107" asserts="0">
              <properties />
              <output><![CDATA[Server started listening
]]></output>
            </test-case>
            <test-case id="4270" name="InRange_NotInitial" fullname="Mirror.Tests.InterestManagementTests_SpatialHashing.InRange_NotInitial" methodname="InRange_NotInitial" classname="Mirror.Tests.InterestManagementTests_SpatialHashing" runstate="Runnable" seed="1291970075" result="Passed" start-time="2021-03-06 06:27:19Z" end-time="2021-03-06 06:27:19Z" duration="0.033990" asserts="0">
              <properties />
              <output><![CDATA[Server started listening
]]></output>
            </test-case>
            <test-case id="4271" name="OutOfRange_Initial" fullname="Mirror.Tests.InterestManagementTests_SpatialHashing.OutOfRange_Initial" methodname="OutOfRange_Initial" classname="Mirror.Tests.InterestManagementTests_SpatialHashing" runstate="Runnable" seed="714246400" result="Passed" start-time="2021-03-06 06:27:19Z" end-time="2021-03-06 06:27:19Z" duration="0.030311" asserts="0">
              <properties />
              <output><![CDATA[Server started listening
]]></output>
            </test-case>
            <test-case id="4272" name="OutOfRange_NotInitial" fullname="Mirror.Tests.InterestManagementTests_SpatialHashing.OutOfRange_NotInitial" methodname="OutOfRange_NotInitial" classname="Mirror.Tests.InterestManagementTests_SpatialHashing" runstate="Runnable" seed="447529124" result="Passed" start-time="2021-03-06 06:27:19Z" end-time="2021-03-06 06:27:19Z" duration="0.030553" asserts="0">
              <properties />
              <output><![CDATA[Server started listening
]]></output>
            </test-case>
            <test-case id="4273" name="PlayerAlwaysSeesSelf_Initial" fullname="Mirror.Tests.InterestManagementTests_SpatialHashing.PlayerAlwaysSeesSelf_Initial" methodname="PlayerAlwaysSeesSelf_Initial" classname="Mirror.Tests.InterestManagementTests_Common" runstate="Runnable" seed="912377810" result="Passed" start-time="2021-03-06 06:27:19Z" end-time="2021-03-06 06:27:19Z" duration="0.029805" asserts="0">
              <properties />
              <output><![CDATA[Server started listening
]]></output>
            </test-case>
          </test-suite>
          <test-suite type="TestFixture" id="4274" name="MessagePackingTest" fullname="Mirror.Tests.MessagePackingTest" classname="Mirror.Tests.MessagePackingTest" runstate="Runnable" testcasecount="6" result="Passed" start-time="2021-03-06 06:27:19Z" end-time="2021-03-06 06:27:19Z" duration="0.020295" total="6" passed="6" failed="0" inconclusive="0" skipped="0" asserts="0">
            <properties />
            <test-case id="4280" name="MessageIdIsCorrectLength" fullname="Mirror.Tests.MessagePackingTest.MessageIdIsCorrectLength" methodname="MessageIdIsCorrectLength" classname="Mirror.Tests.MessagePackingTest" runstate="Runnable" seed="210084059" result="Passed" start-time="2021-03-06 06:27:19Z" end-time="2021-03-06 06:27:19Z" duration="0.001607" asserts="0">
              <properties />
            </test-case>
            <test-case id="4275" name="TestPacking" fullname="Mirror.Tests.MessagePackingTest.TestPacking" methodname="TestPacking" classname="Mirror.Tests.MessagePackingTest" runstate="Runnable" seed="1252582419" result="Passed" start-time="2021-03-06 06:27:19Z" end-time="2021-03-06 06:27:19Z" duration="0.002461" asserts="0">
              <properties />
            </test-case>
            <test-case id="4277" name="TestUnpackIdMismatch" fullname="Mirror.Tests.MessagePackingTest.TestUnpackIdMismatch" methodname="TestUnpackIdMismatch" classname="Mirror.Tests.MessagePackingTest" runstate="Runnable" seed="2110709142" result="Passed" start-time="2021-03-06 06:27:19Z" end-time="2021-03-06 06:27:19Z" duration="0.001546" asserts="0">
              <properties />
            </test-case>
            <test-case id="4278" name="TestUnpackMessageNonGeneric" fullname="Mirror.Tests.MessagePackingTest.TestUnpackMessageNonGeneric" methodname="TestUnpackMessageNonGeneric" classname="Mirror.Tests.MessagePackingTest" runstate="Runnable" seed="1707519994" result="Passed" start-time="2021-03-06 06:27:19Z" end-time="2021-03-06 06:27:19Z" duration="0.001450" asserts="0">
              <properties />
            </test-case>
            <test-case id="4279" name="UnpackInvalidMessage" fullname="Mirror.Tests.MessagePackingTest.UnpackInvalidMessage" methodname="UnpackInvalidMessage" classname="Mirror.Tests.MessagePackingTest" runstate="Runnable" seed="1675517761" result="Passed" start-time="2021-03-06 06:27:19Z" end-time="2021-03-06 06:27:19Z" duration="0.001296" asserts="0">
              <properties />
            </test-case>
            <test-case id="4276" name="UnpackWrongMessage" fullname="Mirror.Tests.MessagePackingTest.UnpackWrongMessage" methodname="UnpackWrongMessage" classname="Mirror.Tests.MessagePackingTest" runstate="Runnable" seed="391956526" result="Passed" start-time="2021-03-06 06:27:19Z" end-time="2021-03-06 06:27:19Z" duration="0.001169" asserts="0">
              <properties />
            </test-case>
          </test-suite>
          <test-suite type="TestSuite" id="5893" name="MessageTests" fullname="Mirror.Tests.MessageTests" runstate="Runnable" testcasecount="19" result="Passed" start-time="2021-03-06 06:27:19Z" end-time="2021-03-06 06:27:19Z" duration="0.126085" total="19" passed="19" failed="0" inconclusive="0" skipped="0" asserts="0">
            <properties />
            <test-suite type="TestFixture" id="5856" name="BuiltInMessages" fullname="Mirror.Tests.MessageTests.BuiltInMessages" classname="Mirror.Tests.MessageTests.BuiltInMessages" runstate="Runnable" testcasecount="12" result="Passed" start-time="2021-03-06 06:27:19Z" end-time="2021-03-06 06:27:19Z" duration="0.043507" total="12" passed="12" failed="0" inconclusive="0" skipped="0" asserts="0">
              <properties />
              <test-case id="5857" name="CommandMessage" fullname="Mirror.Tests.MessageTests.BuiltInMessages.CommandMessage" methodname="CommandMessage" classname="Mirror.Tests.MessageTests.BuiltInMessages" runstate="Runnable" seed="1832320228" result="Passed" start-time="2021-03-06 06:27:19Z" end-time="2021-03-06 06:27:19Z" duration="0.001685" asserts="0">
                <properties />
              </test-case>
              <test-case id="5858" name="NetworkPingMessage" fullname="Mirror.Tests.MessageTests.BuiltInMessages.NetworkPingMessage" methodname="NetworkPingMessage" classname="Mirror.Tests.MessageTests.BuiltInMessages" runstate="Runnable" seed="1980055072" result="Passed" start-time="2021-03-06 06:27:19Z" end-time="2021-03-06 06:27:19Z" duration="0.002347" asserts="0">
                <properties />
              </test-case>
              <test-case id="5859" name="NetworkPongMessage" fullname="Mirror.Tests.MessageTests.BuiltInMessages.NetworkPongMessage" methodname="NetworkPongMessage" classname="Mirror.Tests.MessageTests.BuiltInMessages" runstate="Runnable" seed="173138015" result="Passed" start-time="2021-03-06 06:27:19Z" end-time="2021-03-06 06:27:19Z" duration="0.002238" asserts="0">
                <properties />
              </test-case>
              <test-case id="5860" name="NotReadyMessage" fullname="Mirror.Tests.MessageTests.BuiltInMessages.NotReadyMessage" methodname="NotReadyMessage" classname="Mirror.Tests.MessageTests.BuiltInMessages" runstate="Runnable" seed="227774248" result="Passed" start-time="2021-03-06 06:27:19Z" end-time="2021-03-06 06:27:19Z" duration="0.003074" asserts="0">
                <properties />
              </test-case>
              <test-case id="5861" name="ObjectDestroyMessage" fullname="Mirror.Tests.MessageTests.BuiltInMessages.ObjectDestroyMessage" methodname="ObjectDestroyMessage" classname="Mirror.Tests.MessageTests.BuiltInMessages" runstate="Runnable" seed="1740743428" result="Passed" start-time="2021-03-06 06:27:19Z" end-time="2021-03-06 06:27:19Z" duration="0.002148" asserts="0">
                <properties />
              </test-case>
              <test-case id="5862" name="ObjectHideMessage" fullname="Mirror.Tests.MessageTests.BuiltInMessages.ObjectHideMessage" methodname="ObjectHideMessage" classname="Mirror.Tests.MessageTests.BuiltInMessages" runstate="Runnable" seed="499843836" result="Passed" start-time="2021-03-06 06:27:19Z" end-time="2021-03-06 06:27:19Z" duration="0.002049" asserts="0">
                <properties />
              </test-case>
              <test-case id="5863" name="ObjectSpawnFinishedMessage" fullname="Mirror.Tests.MessageTests.BuiltInMessages.ObjectSpawnFinishedMessage" methodname="ObjectSpawnFinishedMessage" classname="Mirror.Tests.MessageTests.BuiltInMessages" runstate="Runnable" seed="151759945" result="Passed" start-time="2021-03-06 06:27:19Z" end-time="2021-03-06 06:27:19Z" duration="0.002189" asserts="0">
                <properties />
              </test-case>
              <test-case id="5864" name="ObjectSpawnStartedMessage" fullname="Mirror.Tests.MessageTests.BuiltInMessages.ObjectSpawnStartedMessage" methodname="ObjectSpawnStartedMessage" classname="Mirror.Tests.MessageTests.BuiltInMessages" runstate="Runnable" seed="124634393" result="Passed" start-time="2021-03-06 06:27:19Z" end-time="2021-03-06 06:27:19Z" duration="0.002224" asserts="0">
                <properties />
              </test-case>
              <test-case id="5865" name="ReadyMessage" fullname="Mirror.Tests.MessageTests.BuiltInMessages.ReadyMessage" methodname="ReadyMessage" classname="Mirror.Tests.MessageTests.BuiltInMessages" runstate="Runnable" seed="1488954756" result="Passed" start-time="2021-03-06 06:27:19Z" end-time="2021-03-06 06:27:19Z" duration="0.001229" asserts="0">
                <properties />
              </test-case>
              <test-case id="5866" name="RpcMessage" fullname="Mirror.Tests.MessageTests.BuiltInMessages.RpcMessage" methodname="RpcMessage" classname="Mirror.Tests.MessageTests.BuiltInMessages" runstate="Runnable" seed="1920087425" result="Passed" start-time="2021-03-06 06:27:19Z" end-time="2021-03-06 06:27:19Z" duration="0.002296" asserts="0">
                <properties />
              </test-case>
              <test-case id="5867" name="SpawnMessage" fullname="Mirror.Tests.MessageTests.BuiltInMessages.SpawnMessage" methodname="SpawnMessage" classname="Mirror.Tests.MessageTests.BuiltInMessages" runstate="Runnable" seed="698944581" result="Passed" start-time="2021-03-06 06:27:19Z" end-time="2021-03-06 06:27:19Z" duration="0.002843" asserts="0">
                <properties />
              </test-case>
              <test-case id="5868" name="UpdateVarsMessage" fullname="Mirror.Tests.MessageTests.BuiltInMessages.UpdateVarsMessage" methodname="UpdateVarsMessage" classname="Mirror.Tests.MessageTests.BuiltInMessages" runstate="Runnable" seed="1602225561" result="Passed" start-time="2021-03-06 06:27:19Z" end-time="2021-03-06 06:27:19Z" duration="0.002436" asserts="0">
                <properties />
              </test-case>
            </test-suite>
            <test-suite type="TestFixture" id="5869" name="MessageBaseTests" fullname="Mirror.Tests.MessageTests.MessageBaseTests" classname="Mirror.Tests.MessageTests.MessageBaseTests" runstate="Runnable" testcasecount="2" result="Passed" start-time="2021-03-06 06:27:19Z" end-time="2021-03-06 06:27:19Z" duration="0.022457" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
              <properties />
              <test-case id="5871" name="StructWithEmptyMethods" fullname="Mirror.Tests.MessageTests.MessageBaseTests.StructWithEmptyMethods" methodname="StructWithEmptyMethods" classname="Mirror.Tests.MessageTests.MessageBaseTests" runstate="Runnable" seed="863358480" result="Passed" start-time="2021-03-06 06:27:19Z" end-time="2021-03-06 06:27:19Z" duration="0.002442" asserts="0">
                <properties />
              </test-case>
              <test-case id="5870" name="StructWithMethods" fullname="Mirror.Tests.MessageTests.MessageBaseTests.StructWithMethods" methodname="StructWithMethods" classname="Mirror.Tests.MessageTests.MessageBaseTests" runstate="Runnable" seed="1385401977" result="Passed" start-time="2021-03-06 06:27:19Z" end-time="2021-03-06 06:27:19Z" duration="0.002323" asserts="0">
                <properties />
              </test-case>
            </test-suite>
            <test-suite type="TestFixture" id="5872" name="MessageInheritanceTest" fullname="Mirror.Tests.MessageTests.MessageInheritanceTest" classname="Mirror.Tests.MessageTests.MessageInheritanceTest" runstate="Runnable" testcasecount="3" result="Passed" start-time="2021-03-06 06:27:19Z" end-time="2021-03-06 06:27:19Z" duration="0.021565" total="3" passed="3" failed="0" inconclusive="0" skipped="0" asserts="0">
              <properties />
              <test-case id="5873" name="SendsVauesInParentAndChildClass" fullname="Mirror.Tests.MessageTests.MessageInheritanceTest.SendsVauesInParentAndChildClass" methodname="SendsVauesInParentAndChildClass" classname="Mirror.Tests.MessageTests.MessageInheritanceTest" runstate="Runnable" seed="1011390205" result="Passed" start-time="2021-03-06 06:27:19Z" end-time="2021-03-06 06:27:19Z" duration="0.001813" asserts="0">
                <properties />
              </test-case>
              <test-case id="5874" name="SendsVauesWhenUsingAbstractClass" fullname="Mirror.Tests.MessageTests.MessageInheritanceTest.SendsVauesWhenUsingAbstractClass" methodname="SendsVauesWhenUsingAbstractClass" classname="Mirror.Tests.MessageTests.MessageInheritanceTest" runstate="Runnable" seed="1942651426" result="Passed" start-time="2021-03-06 06:27:19Z" end-time="2021-03-06 06:27:19Z" duration="0.001114" asserts="0">
                <properties />
              </test-case>
              <test-case id="5875" name="SendsVauesWhenUsingAbstractClassReverseDefineOrder" fullname="Mirror.Tests.MessageTests.MessageInheritanceTest.SendsVauesWhenUsingAbstractClassReverseDefineOrder" methodname="SendsVauesWhenUsingAbstractClassReverseDefineOrder" classname="Mirror.Tests.MessageTests.MessageInheritanceTest" runstate="Runnable" seed="822178850" result="Passed" start-time="2021-03-06 06:27:19Z" end-time="2021-03-06 06:27:19Z" duration="0.001127" asserts="0">
                <properties />
              </test-case>
            </test-suite>
            <test-suite type="TestFixture" id="5876" name="OverloadMethodTest" fullname="Mirror.Tests.MessageTests.OverloadMethodTest" classname="Mirror.Tests.MessageTests.OverloadMethodTest" runstate="Runnable" testcasecount="2" result="Passed" start-time="2021-03-06 06:27:19Z" end-time="2021-03-06 06:27:19Z" duration="0.016467" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
              <properties />
              <test-case id="5877" name="MethodsWithNoArgs" fullname="Mirror.Tests.MessageTests.OverloadMethodTest.MethodsWithNoArgs" methodname="MethodsWithNoArgs" classname="Mirror.Tests.MessageTests.OverloadMethodTest" runstate="Runnable" seed="2116244648" result="Passed" start-time="2021-03-06 06:27:19Z" end-time="2021-03-06 06:27:19Z" duration="0.002467" asserts="0">
                <properties />
              </test-case>
              <test-case id="5878" name="MethodsWithTwoArgs" fullname="Mirror.Tests.MessageTests.OverloadMethodTest.MethodsWithTwoArgs" methodname="MethodsWithTwoArgs" classname="Mirror.Tests.MessageTests.OverloadMethodTest" runstate="Runnable" seed="1728305239" result="Passed" start-time="2021-03-06 06:27:19Z" end-time="2021-03-06 06:27:19Z" duration="0.002262" asserts="0">
                <properties />
              </test-case>
            </test-suite>
          </test-suite>
          <test-suite type="TestFixture" id="4281" name="MiddlewareTransportTest" fullname="Mirror.Tests.MiddlewareTransportTest" classname="Mirror.Tests.MiddlewareTransportTest" runstate="Runnable" testcasecount="47" result="Passed" start-time="2021-03-06 06:27:19Z" end-time="2021-03-06 06:27:21Z" duration="1.679032" total="47" passed="47" failed="0" inconclusive="0" skipped="0" asserts="0">
            <properties>
              <property name="Description" value="Test to make sure inner methods are called when using Middleware Transport" />
            </properties>
            <test-suite type="ParameterizedMethod" id="4284" name="TestAvailable" fullname="Mirror.Tests.MiddlewareTransportTest.TestAvailable" classname="Mirror.Tests.MiddlewareTransportTest" runstate="Runnable" testcasecount="2" result="Passed" start-time="2021-03-06 06:27:19Z" end-time="2021-03-06 06:27:19Z" duration="0.064798" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
              <properties />
              <test-case id="4282" name="TestAvailable(True)" fullname="Mirror.Tests.MiddlewareTransportTest.TestAvailable(True)" methodname="TestAvailable" classname="Mirror.Tests.MiddlewareTransportTest" runstate="Runnable" seed="1591498583" result="Passed" start-time="2021-03-06 06:27:19Z" end-time="2021-03-06 06:27:19Z" duration="0.024192" asserts="0">
                <properties />
                <output><![CDATA[You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
]]></output>
              </test-case>
              <test-case id="4283" name="TestAvailable(False)" fullname="Mirror.Tests.MiddlewareTransportTest.TestAvailable(False)" methodname="TestAvailable" classname="Mirror.Tests.MiddlewareTransportTest" runstate="Runnable" seed="1971950211" result="Passed" start-time="2021-03-06 06:27:19Z" end-time="2021-03-06 06:27:19Z" duration="0.033992" asserts="0">
                <properties />
                <output><![CDATA[You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
]]></output>
              </test-case>
            </test-suite>
            <test-suite type="ParameterizedMethod" id="4292" name="TestClientConnect" fullname="Mirror.Tests.MiddlewareTransportTest.TestClientConnect" classname="Mirror.Tests.MiddlewareTransportTest" runstate="Runnable" testcasecount="2" result="Passed" start-time="2021-03-06 06:27:19Z" end-time="2021-03-06 06:27:19Z" duration="0.115803" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
              <properties />
              <test-case id="4290" name="TestClientConnect(&quot;localhost&quot;)" fullname="Mirror.Tests.MiddlewareTransportTest.TestClientConnect(&quot;localhost&quot;)" methodname="TestClientConnect" classname="Mirror.Tests.MiddlewareTransportTest" runstate="Runnable" seed="1468371622" result="Passed" start-time="2021-03-06 06:27:19Z" end-time="2021-03-06 06:27:19Z" duration="0.076124" asserts="0">
                <properties />
                <output><![CDATA[You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
]]></output>
              </test-case>
              <test-case id="4291" name="TestClientConnect(&quot;example.com&quot;)" fullname="Mirror.Tests.MiddlewareTransportTest.TestClientConnect(&quot;example.com&quot;)" methodname="TestClientConnect" classname="Mirror.Tests.MiddlewareTransportTest" runstate="Runnable" seed="2103003578" result="Passed" start-time="2021-03-06 06:27:19Z" end-time="2021-03-06 06:27:19Z" duration="0.030053" asserts="0">
                <properties />
                <output><![CDATA[You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
]]></output>
              </test-case>
            </test-suite>
            <test-suite type="ParameterizedMethod" id="4295" name="TestClientConnected" fullname="Mirror.Tests.MiddlewareTransportTest.TestClientConnected" classname="Mirror.Tests.MiddlewareTransportTest" runstate="Runnable" testcasecount="2" result="Passed" start-time="2021-03-06 06:27:19Z" end-time="2021-03-06 06:27:19Z" duration="0.065227" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
              <properties />
              <test-case id="4293" name="TestClientConnected(True)" fullname="Mirror.Tests.MiddlewareTransportTest.TestClientConnected(True)" methodname="TestClientConnected" classname="Mirror.Tests.MiddlewareTransportTest" runstate="Runnable" seed="144596439" result="Passed" start-time="2021-03-06 06:27:19Z" end-time="2021-03-06 06:27:19Z" duration="0.025368" asserts="0">
                <properties />
                <output><![CDATA[You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
]]></output>
              </test-case>
              <test-case id="4294" name="TestClientConnected(False)" fullname="Mirror.Tests.MiddlewareTransportTest.TestClientConnected(False)" methodname="TestClientConnected" classname="Mirror.Tests.MiddlewareTransportTest" runstate="Runnable" seed="365511538" result="Passed" start-time="2021-03-06 06:27:19Z" end-time="2021-03-06 06:27:19Z" duration="0.031920" asserts="0">
                <properties />
                <output><![CDATA[You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
]]></output>
              </test-case>
            </test-suite>
            <test-case id="4319" name="TestClientConnectedCallback" fullname="Mirror.Tests.MiddlewareTransportTest.TestClientConnectedCallback" methodname="TestClientConnectedCallback" classname="Mirror.Tests.MiddlewareTransportTest" runstate="Runnable" seed="1909563699" result="Passed" start-time="2021-03-06 06:27:19Z" end-time="2021-03-06 06:27:19Z" duration="0.027762" asserts="0">
              <properties />
              <output><![CDATA[You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
]]></output>
            </test-case>
            <test-suite type="ParameterizedMethod" id="4322" name="TestClientDataReceivedCallback" fullname="Mirror.Tests.MiddlewareTransportTest.TestClientDataReceivedCallback" classname="Mirror.Tests.MiddlewareTransportTest" runstate="Runnable" testcasecount="2" result="Passed" start-time="2021-03-06 06:27:19Z" end-time="2021-03-06 06:27:19Z" duration="0.062375" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
              <properties />
              <test-case id="4320" name="TestClientDataReceivedCallback(0)" fullname="Mirror.Tests.MiddlewareTransportTest.TestClientDataReceivedCallback(0)" methodname="TestClientDataReceivedCallback" classname="Mirror.Tests.MiddlewareTransportTest" runstate="Runnable" seed="902446606" result="Passed" start-time="2021-03-06 06:27:19Z" end-time="2021-03-06 06:27:19Z" duration="0.024049" asserts="0">
                <properties />
                <output><![CDATA[You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
]]></output>
              </test-case>
              <test-case id="4321" name="TestClientDataReceivedCallback(1)" fullname="Mirror.Tests.MiddlewareTransportTest.TestClientDataReceivedCallback(1)" methodname="TestClientDataReceivedCallback" classname="Mirror.Tests.MiddlewareTransportTest" runstate="Runnable" seed="1200225106" result="Passed" start-time="2021-03-06 06:27:19Z" end-time="2021-03-06 06:27:19Z" duration="0.028915" asserts="0">
                <properties />
                <output><![CDATA[You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
]]></output>
              </test-case>
            </test-suite>
            <test-case id="4296" name="TestClientDisconnect" fullname="Mirror.Tests.MiddlewareTransportTest.TestClientDisconnect" methodname="TestClientDisconnect" classname="Mirror.Tests.MiddlewareTransportTest" runstate="Runnable" seed="1576851887" result="Passed" start-time="2021-03-06 06:27:19Z" end-time="2021-03-06 06:27:19Z" duration="0.030756" asserts="0">
              <properties />
              <output><![CDATA[You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
]]></output>
            </test-case>
            <test-case id="4323" name="TestClientDisconnectedCallback" fullname="Mirror.Tests.MiddlewareTransportTest.TestClientDisconnectedCallback" methodname="TestClientDisconnectedCallback" classname="Mirror.Tests.MiddlewareTransportTest" runstate="Runnable" seed="2040455089" result="Passed" start-time="2021-03-06 06:27:19Z" end-time="2021-03-06 06:27:20Z" duration="0.030532" asserts="0">
              <properties />
              <output><![CDATA[You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
]]></output>
            </test-case>
            <test-case id="4324" name="TestClientErrorCallback" fullname="Mirror.Tests.MiddlewareTransportTest.TestClientErrorCallback" methodname="TestClientErrorCallback" classname="Mirror.Tests.MiddlewareTransportTest" runstate="Runnable" seed="1916449999" result="Passed" start-time="2021-03-06 06:27:20Z" end-time="2021-03-06 06:27:20Z" duration="0.029395" asserts="0">
              <properties />
              <output><![CDATA[You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
]]></output>
            </test-case>
            <test-suite type="ParameterizedMethod" id="4299" name="TestClientSend" fullname="Mirror.Tests.MiddlewareTransportTest.TestClientSend" classname="Mirror.Tests.MiddlewareTransportTest" runstate="Runnable" testcasecount="2" result="Passed" start-time="2021-03-06 06:27:20Z" end-time="2021-03-06 06:27:20Z" duration="0.069495" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
              <properties />
              <test-case id="4297" name="TestClientSend(0)" fullname="Mirror.Tests.MiddlewareTransportTest.TestClientSend(0)" methodname="TestClientSend" classname="Mirror.Tests.MiddlewareTransportTest" runstate="Runnable" seed="1729102457" result="Passed" start-time="2021-03-06 06:27:20Z" end-time="2021-03-06 06:27:20Z" duration="0.027949" asserts="0">
                <properties />
                <output><![CDATA[You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
]]></output>
              </test-case>
              <test-case id="4298" name="TestClientSend(1)" fullname="Mirror.Tests.MiddlewareTransportTest.TestClientSend(1)" methodname="TestClientSend" classname="Mirror.Tests.MiddlewareTransportTest" runstate="Runnable" seed="1805066941" result="Passed" start-time="2021-03-06 06:27:20Z" end-time="2021-03-06 06:27:20Z" duration="0.030505" asserts="0">
                <properties />
                <output><![CDATA[You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
]]></output>
              </test-case>
            </test-suite>
            <test-suite type="ParameterizedMethod" id="4288" name="TestGetMaxPacketSize" fullname="Mirror.Tests.MiddlewareTransportTest.TestGetMaxPacketSize" classname="Mirror.Tests.MiddlewareTransportTest" runstate="Runnable" testcasecount="3" result="Passed" start-time="2021-03-06 06:27:20Z" end-time="2021-03-06 06:27:20Z" duration="0.099361" total="3" passed="3" failed="0" inconclusive="0" skipped="0" asserts="0">
              <properties />
              <test-case id="4285" name="TestGetMaxPacketSize(0,4000)" fullname="Mirror.Tests.MiddlewareTransportTest.TestGetMaxPacketSize(0,4000)" methodname="TestGetMaxPacketSize" classname="Mirror.Tests.MiddlewareTransportTest" runstate="Runnable" seed="1557213023" result="Passed" start-time="2021-03-06 06:27:20Z" end-time="2021-03-06 06:27:20Z" duration="0.027988" asserts="0">
                <properties />
                <output><![CDATA[You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
]]></output>
              </test-case>
              <test-case id="4286" name="TestGetMaxPacketSize(0,2000)" fullname="Mirror.Tests.MiddlewareTransportTest.TestGetMaxPacketSize(0,2000)" methodname="TestGetMaxPacketSize" classname="Mirror.Tests.MiddlewareTransportTest" runstate="Runnable" seed="1945553627" result="Passed" start-time="2021-03-06 06:27:20Z" end-time="2021-03-06 06:27:20Z" duration="0.030823" asserts="0">
                <properties />
                <output><![CDATA[You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
]]></output>
              </test-case>
              <test-case id="4287" name="TestGetMaxPacketSize(1,4000)" fullname="Mirror.Tests.MiddlewareTransportTest.TestGetMaxPacketSize(1,4000)" methodname="TestGetMaxPacketSize" classname="Mirror.Tests.MiddlewareTransportTest" runstate="Runnable" seed="570506270" result="Passed" start-time="2021-03-06 06:27:20Z" end-time="2021-03-06 06:27:20Z" duration="0.029073" asserts="0">
                <properties />
                <output><![CDATA[You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
]]></output>
              </test-case>
            </test-suite>
            <test-suite type="ParameterizedMethod" id="4302" name="TestServerActive" fullname="Mirror.Tests.MiddlewareTransportTest.TestServerActive" classname="Mirror.Tests.MiddlewareTransportTest" runstate="Runnable" testcasecount="2" result="Passed" start-time="2021-03-06 06:27:20Z" end-time="2021-03-06 06:27:20Z" duration="0.066019" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
              <properties />
              <test-case id="4300" name="TestServerActive(True)" fullname="Mirror.Tests.MiddlewareTransportTest.TestServerActive(True)" methodname="TestServerActive" classname="Mirror.Tests.MiddlewareTransportTest" runstate="Runnable" seed="910439442" result="Passed" start-time="2021-03-06 06:27:20Z" end-time="2021-03-06 06:27:20Z" duration="0.023933" asserts="0">
                <properties />
                <output><![CDATA[You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
]]></output>
              </test-case>
              <test-case id="4301" name="TestServerActive(False)" fullname="Mirror.Tests.MiddlewareTransportTest.TestServerActive(False)" methodname="TestServerActive" classname="Mirror.Tests.MiddlewareTransportTest" runstate="Runnable" seed="65707686" result="Passed" start-time="2021-03-06 06:27:20Z" end-time="2021-03-06 06:27:20Z" duration="0.033485" asserts="0">
                <properties />
                <output><![CDATA[You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
]]></output>
              </test-case>
            </test-suite>
            <test-suite type="ParameterizedMethod" id="4328" name="TestServerConnectedCallback" fullname="Mirror.Tests.MiddlewareTransportTest.TestServerConnectedCallback" classname="Mirror.Tests.MiddlewareTransportTest" runstate="Runnable" testcasecount="3" result="Passed" start-time="2021-03-06 06:27:20Z" end-time="2021-03-06 06:27:20Z" duration="0.103250" total="3" passed="3" failed="0" inconclusive="0" skipped="0" asserts="0">
              <properties />
              <test-case id="4325" name="TestServerConnectedCallback(0)" fullname="Mirror.Tests.MiddlewareTransportTest.TestServerConnectedCallback(0)" methodname="TestServerConnectedCallback" classname="Mirror.Tests.MiddlewareTransportTest" runstate="Runnable" seed="1552379898" result="Passed" start-time="2021-03-06 06:27:20Z" end-time="2021-03-06 06:27:20Z" duration="0.023809" asserts="0">
                <properties />
                <output><![CDATA[You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
]]></output>
              </test-case>
              <test-case id="4326" name="TestServerConnectedCallback(1)" fullname="Mirror.Tests.MiddlewareTransportTest.TestServerConnectedCallback(1)" methodname="TestServerConnectedCallback" classname="Mirror.Tests.MiddlewareTransportTest" runstate="Runnable" seed="1682638265" result="Passed" start-time="2021-03-06 06:27:20Z" end-time="2021-03-06 06:27:20Z" duration="0.029381" asserts="0">
                <properties />
                <output><![CDATA[You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
]]></output>
              </test-case>
              <test-case id="4327" name="TestServerConnectedCallback(19)" fullname="Mirror.Tests.MiddlewareTransportTest.TestServerConnectedCallback(19)" methodname="TestServerConnectedCallback" classname="Mirror.Tests.MiddlewareTransportTest" runstate="Runnable" seed="1714337905" result="Passed" start-time="2021-03-06 06:27:20Z" end-time="2021-03-06 06:27:20Z" duration="0.034679" asserts="0">
                <properties />
                <output><![CDATA[You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
]]></output>
              </test-case>
            </test-suite>
            <test-suite type="ParameterizedMethod" id="4335" name="TestServerDataReceivedCallback" fullname="Mirror.Tests.MiddlewareTransportTest.TestServerDataReceivedCallback" classname="Mirror.Tests.MiddlewareTransportTest" runstate="Runnable" testcasecount="6" result="Passed" start-time="2021-03-06 06:27:20Z" end-time="2021-03-06 06:27:20Z" duration="0.202127" total="6" passed="6" failed="0" inconclusive="0" skipped="0" asserts="0">
              <properties />
              <test-case id="4329" name="TestServerDataReceivedCallback(0,0)" fullname="Mirror.Tests.MiddlewareTransportTest.TestServerDataReceivedCallback(0,0)" methodname="TestServerDataReceivedCallback" classname="Mirror.Tests.MiddlewareTransportTest" runstate="Runnable" seed="1753862215" result="Passed" start-time="2021-03-06 06:27:20Z" end-time="2021-03-06 06:27:20Z" duration="0.028776" asserts="0">
                <properties />
                <output><![CDATA[You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
]]></output>
              </test-case>
              <test-case id="4330" name="TestServerDataReceivedCallback(1,0)" fullname="Mirror.Tests.MiddlewareTransportTest.TestServerDataReceivedCallback(1,0)" methodname="TestServerDataReceivedCallback" classname="Mirror.Tests.MiddlewareTransportTest" runstate="Runnable" seed="518843826" result="Passed" start-time="2021-03-06 06:27:20Z" end-time="2021-03-06 06:27:20Z" duration="0.028723" asserts="0">
                <properties />
                <output><![CDATA[You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
]]></output>
              </test-case>
              <test-case id="4331" name="TestServerDataReceivedCallback(19,0)" fullname="Mirror.Tests.MiddlewareTransportTest.TestServerDataReceivedCallback(19,0)" methodname="TestServerDataReceivedCallback" classname="Mirror.Tests.MiddlewareTransportTest" runstate="Runnable" seed="1963668268" result="Passed" start-time="2021-03-06 06:27:20Z" end-time="2021-03-06 06:27:20Z" duration="0.029382" asserts="0">
                <properties />
                <output><![CDATA[You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
]]></output>
              </test-case>
              <test-case id="4332" name="TestServerDataReceivedCallback(0,1)" fullname="Mirror.Tests.MiddlewareTransportTest.TestServerDataReceivedCallback(0,1)" methodname="TestServerDataReceivedCallback" classname="Mirror.Tests.MiddlewareTransportTest" runstate="Runnable" seed="2062496779" result="Passed" start-time="2021-03-06 06:27:20Z" end-time="2021-03-06 06:27:20Z" duration="0.029660" asserts="0">
                <properties />
                <output><![CDATA[You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
]]></output>
              </test-case>
              <test-case id="4333" name="TestServerDataReceivedCallback(1,1)" fullname="Mirror.Tests.MiddlewareTransportTest.TestServerDataReceivedCallback(1,1)" methodname="TestServerDataReceivedCallback" classname="Mirror.Tests.MiddlewareTransportTest" runstate="Runnable" seed="722913840" result="Passed" start-time="2021-03-06 06:27:20Z" end-time="2021-03-06 06:27:20Z" duration="0.034634" asserts="0">
                <properties />
                <output><![CDATA[You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
]]></output>
              </test-case>
              <test-case id="4334" name="TestServerDataReceivedCallback(19,1)" fullname="Mirror.Tests.MiddlewareTransportTest.TestServerDataReceivedCallback(19,1)" methodname="TestServerDataReceivedCallback" classname="Mirror.Tests.MiddlewareTransportTest" runstate="Runnable" seed="602749285" result="Passed" start-time="2021-03-06 06:27:20Z" end-time="2021-03-06 06:27:20Z" duration="0.030043" asserts="0">
                <properties />
                <output><![CDATA[You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
]]></output>
              </test-case>
            </test-suite>
            <test-suite type="ParameterizedMethod" id="4312" name="TestServerDisconnect" fullname="Mirror.Tests.MiddlewareTransportTest.TestServerDisconnect" classname="Mirror.Tests.MiddlewareTransportTest" runstate="Runnable" testcasecount="2" result="Passed" start-time="2021-03-06 06:27:20Z" end-time="2021-03-06 06:27:20Z" duration="0.071586" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
              <properties />
              <test-case id="4310" name="TestServerDisconnect(0,True)" fullname="Mirror.Tests.MiddlewareTransportTest.TestServerDisconnect(0,True)" methodname="TestServerDisconnect" classname="Mirror.Tests.MiddlewareTransportTest" runstate="Runnable" seed="930181712" result="Passed" start-time="2021-03-06 06:27:20Z" end-time="2021-03-06 06:27:20Z" duration="0.024351" asserts="0">
                <properties />
                <output><![CDATA[You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
]]></output>
              </test-case>
              <test-case id="4311" name="TestServerDisconnect(19,False)" fullname="Mirror.Tests.MiddlewareTransportTest.TestServerDisconnect(19,False)" methodname="TestServerDisconnect" classname="Mirror.Tests.MiddlewareTransportTest" runstate="Runnable" seed="538465071" result="Passed" start-time="2021-03-06 06:27:20Z" end-time="2021-03-06 06:27:20Z" duration="0.032242" asserts="0">
                <properties />
                <output><![CDATA[You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
]]></output>
              </test-case>
            </test-suite>
            <test-suite type="ParameterizedMethod" id="4339" name="TestServerDisconnectedCallback" fullname="Mirror.Tests.MiddlewareTransportTest.TestServerDisconnectedCallback" classname="Mirror.Tests.MiddlewareTransportTest" runstate="Runnable" testcasecount="3" result="Passed" start-time="2021-03-06 06:27:20Z" end-time="2021-03-06 06:27:20Z" duration="0.099227" total="3" passed="3" failed="0" inconclusive="0" skipped="0" asserts="0">
              <properties />
              <test-case id="4336" name="TestServerDisconnectedCallback(0)" fullname="Mirror.Tests.MiddlewareTransportTest.TestServerDisconnectedCallback(0)" methodname="TestServerDisconnectedCallback" classname="Mirror.Tests.MiddlewareTransportTest" runstate="Runnable" seed="1996664628" result="Passed" start-time="2021-03-06 06:27:20Z" end-time="2021-03-06 06:27:20Z" duration="0.023748" asserts="0">
                <properties />
                <output><![CDATA[You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
]]></output>
              </test-case>
              <test-case id="4337" name="TestServerDisconnectedCallback(1)" fullname="Mirror.Tests.MiddlewareTransportTest.TestServerDisconnectedCallback(1)" methodname="TestServerDisconnectedCallback" classname="Mirror.Tests.MiddlewareTransportTest" runstate="Runnable" seed="1254429866" result="Passed" start-time="2021-03-06 06:27:20Z" end-time="2021-03-06 06:27:20Z" duration="0.033805" asserts="0">
                <properties />
                <output><![CDATA[You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
]]></output>
              </test-case>
              <test-case id="4338" name="TestServerDisconnectedCallback(19)" fullname="Mirror.Tests.MiddlewareTransportTest.TestServerDisconnectedCallback(19)" methodname="TestServerDisconnectedCallback" classname="Mirror.Tests.MiddlewareTransportTest" runstate="Runnable" seed="919899267" result="Passed" start-time="2021-03-06 06:27:20Z" end-time="2021-03-06 06:27:20Z" duration="0.030177" asserts="0">
                <properties />
                <output><![CDATA[You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
]]></output>
              </test-case>
            </test-suite>
            <test-suite type="ParameterizedMethod" id="4343" name="TestServerErrorCallback" fullname="Mirror.Tests.MiddlewareTransportTest.TestServerErrorCallback" classname="Mirror.Tests.MiddlewareTransportTest" runstate="Runnable" testcasecount="3" result="Passed" start-time="2021-03-06 06:27:20Z" end-time="2021-03-06 06:27:20Z" duration="0.101026" total="3" passed="3" failed="0" inconclusive="0" skipped="0" asserts="0">
              <properties />
              <test-case id="4340" name="TestServerErrorCallback(0)" fullname="Mirror.Tests.MiddlewareTransportTest.TestServerErrorCallback(0)" methodname="TestServerErrorCallback" classname="Mirror.Tests.MiddlewareTransportTest" runstate="Runnable" seed="352797146" result="Passed" start-time="2021-03-06 06:27:20Z" end-time="2021-03-06 06:27:20Z" duration="0.023777" asserts="0">
                <properties />
                <output><![CDATA[You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
]]></output>
              </test-case>
              <test-case id="4341" name="TestServerErrorCallback(1)" fullname="Mirror.Tests.MiddlewareTransportTest.TestServerErrorCallback(1)" methodname="TestServerErrorCallback" classname="Mirror.Tests.MiddlewareTransportTest" runstate="Runnable" seed="886302488" result="Passed" start-time="2021-03-06 06:27:20Z" end-time="2021-03-06 06:27:20Z" duration="0.034238" asserts="0">
                <properties />
                <output><![CDATA[You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
]]></output>
              </test-case>
              <test-case id="4342" name="TestServerErrorCallback(19)" fullname="Mirror.Tests.MiddlewareTransportTest.TestServerErrorCallback(19)" methodname="TestServerErrorCallback" classname="Mirror.Tests.MiddlewareTransportTest" runstate="Runnable" seed="645269916" result="Passed" start-time="2021-03-06 06:27:20Z" end-time="2021-03-06 06:27:20Z" duration="0.030081" asserts="0">
                <properties />
                <output><![CDATA[You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
]]></output>
              </test-case>
            </test-suite>
            <test-suite type="ParameterizedMethod" id="4315" name="TestServerGetClientAddress" fullname="Mirror.Tests.MiddlewareTransportTest.TestServerGetClientAddress" classname="Mirror.Tests.MiddlewareTransportTest" runstate="Runnable" testcasecount="2" result="Passed" start-time="2021-03-06 06:27:20Z" end-time="2021-03-06 06:27:20Z" duration="0.066754" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
              <properties />
              <test-case id="4313" name="TestServerGetClientAddress(0,&quot;tcp4://localhost:7777&quot;)" fullname="Mirror.Tests.MiddlewareTransportTest.TestServerGetClientAddress(0,&quot;tcp4://localhost:7777&quot;)" methodname="TestServerGetClientAddress" classname="Mirror.Tests.MiddlewareTransportTest" runstate="Runnable" seed="525342188" result="Passed" start-time="2021-03-06 06:27:20Z" end-time="2021-03-06 06:27:20Z" duration="0.024198" asserts="0">
                <properties />
                <output><![CDATA[You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
]]></output>
              </test-case>
              <test-case id="4314" name="TestServerGetClientAddress(19,&quot;tcp4://example.com:7777&quot;)" fullname="Mirror.Tests.MiddlewareTransportTest.TestServerGetClientAddress(19,&quot;tcp4://example.com:7777&quot;)" methodname="TestServerGetClientAddress" classname="Mirror.Tests.MiddlewareTransportTest" runstate="Runnable" seed="1215605122" result="Passed" start-time="2021-03-06 06:27:20Z" end-time="2021-03-06 06:27:20Z" duration="0.033386" asserts="0">
                <properties />
                <output><![CDATA[You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
]]></output>
              </test-case>
            </test-suite>
            <test-suite type="ParameterizedMethod" id="4309" name="TestServerSend" fullname="Mirror.Tests.MiddlewareTransportTest.TestServerSend" classname="Mirror.Tests.MiddlewareTransportTest" runstate="Runnable" testcasecount="4" result="Passed" start-time="2021-03-06 06:27:20Z" end-time="2021-03-06 06:27:21Z" duration="0.135615" total="4" passed="4" failed="0" inconclusive="0" skipped="0" asserts="0">
              <properties />
              <test-case id="4305" name="TestServerSend(0,0)" fullname="Mirror.Tests.MiddlewareTransportTest.TestServerSend(0,0)" methodname="TestServerSend" classname="Mirror.Tests.MiddlewareTransportTest" runstate="Runnable" seed="1664259964" result="Passed" start-time="2021-03-06 06:27:20Z" end-time="2021-03-06 06:27:21Z" duration="0.024066" asserts="0">
                <properties />
                <output><![CDATA[You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
]]></output>
              </test-case>
              <test-case id="4306" name="TestServerSend(1,0)" fullname="Mirror.Tests.MiddlewareTransportTest.TestServerSend(1,0)" methodname="TestServerSend" classname="Mirror.Tests.MiddlewareTransportTest" runstate="Runnable" seed="15431168" result="Passed" start-time="2021-03-06 06:27:21Z" end-time="2021-03-06 06:27:21Z" duration="0.028780" asserts="0">
                <properties />
                <output><![CDATA[You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
]]></output>
              </test-case>
              <test-case id="4307" name="TestServerSend(0,1)" fullname="Mirror.Tests.MiddlewareTransportTest.TestServerSend(0,1)" methodname="TestServerSend" classname="Mirror.Tests.MiddlewareTransportTest" runstate="Runnable" seed="1149110738" result="Passed" start-time="2021-03-06 06:27:21Z" end-time="2021-03-06 06:27:21Z" duration="0.033699" asserts="0">
                <properties />
                <output><![CDATA[You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
]]></output>
              </test-case>
              <test-case id="4308" name="TestServerSend(19,1)" fullname="Mirror.Tests.MiddlewareTransportTest.TestServerSend(19,1)" methodname="TestServerSend" classname="Mirror.Tests.MiddlewareTransportTest" runstate="Runnable" seed="1381045802" result="Passed" start-time="2021-03-06 06:27:21Z" end-time="2021-03-06 06:27:21Z" duration="0.034281" asserts="0">
                <properties />
                <output><![CDATA[You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
]]></output>
              </test-case>
            </test-suite>
            <test-case id="4303" name="TestServerStart" fullname="Mirror.Tests.MiddlewareTransportTest.TestServerStart" methodname="TestServerStart" classname="Mirror.Tests.MiddlewareTransportTest" runstate="Runnable" seed="1366987445" result="Passed" start-time="2021-03-06 06:27:21Z" end-time="2021-03-06 06:27:21Z" duration="0.025761" asserts="0">
              <properties />
              <output><![CDATA[You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
]]></output>
            </test-case>
            <test-case id="4304" name="TestServerStop" fullname="Mirror.Tests.MiddlewareTransportTest.TestServerStop" methodname="TestServerStop" classname="Mirror.Tests.MiddlewareTransportTest" runstate="Runnable" seed="2110219226" result="Passed" start-time="2021-03-06 06:27:21Z" end-time="2021-03-06 06:27:21Z" duration="0.029175" asserts="0">
              <properties />
              <output><![CDATA[You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
]]></output>
            </test-case>
            <test-suite type="ParameterizedMethod" id="4318" name="TestServerUri" fullname="Mirror.Tests.MiddlewareTransportTest.TestServerUri" classname="Mirror.Tests.MiddlewareTransportTest" runstate="Runnable" testcasecount="2" result="Passed" start-time="2021-03-06 06:27:21Z" end-time="2021-03-06 06:27:21Z" duration="0.067828" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
              <properties />
              <test-case id="4316" name="TestServerUri(&quot;tcp4://localhost:7777&quot;)" fullname="Mirror.Tests.MiddlewareTransportTest.TestServerUri(&quot;tcp4://localhost:7777&quot;)" methodname="TestServerUri" classname="Mirror.Tests.MiddlewareTransportTest" runstate="Runnable" seed="1900461322" result="Passed" start-time="2021-03-06 06:27:21Z" end-time="2021-03-06 06:27:21Z" duration="0.023826" asserts="0">
                <properties />
                <output><![CDATA[You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
]]></output>
              </test-case>
              <test-case id="4317" name="TestServerUri(&quot;tcp4://example.com:7777&quot;)" fullname="Mirror.Tests.MiddlewareTransportTest.TestServerUri(&quot;tcp4://example.com:7777&quot;)" methodname="TestServerUri" classname="Mirror.Tests.MiddlewareTransportTest" runstate="Runnable" seed="426302198" result="Passed" start-time="2021-03-06 06:27:21Z" end-time="2021-03-06 06:27:21Z" duration="0.034118" asserts="0">
                <properties />
                <output><![CDATA[You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
]]></output>
              </test-case>
            </test-suite>
            <test-case id="4289" name="TestShutdown" fullname="Mirror.Tests.MiddlewareTransportTest.TestShutdown" methodname="TestShutdown" classname="Mirror.Tests.MiddlewareTransportTest" runstate="Runnable" seed="592639329" result="Passed" start-time="2021-03-06 06:27:21Z" end-time="2021-03-06 06:27:21Z" duration="0.026812" asserts="0">
              <properties />
              <output><![CDATA[You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
]]></output>
            </test-case>
          </test-suite>
          <test-suite type="TestFixture" id="4344" name="MultiplexTest" fullname="Mirror.Tests.MultiplexTest" classname="Mirror.Tests.MultiplexTest" runstate="Runnable" testcasecount="11" result="Passed" start-time="2021-03-06 06:27:21Z" end-time="2021-03-06 06:27:21Z" duration="0.411275" total="11" passed="11" failed="0" inconclusive="0" skipped="0" asserts="0">
            <properties />
            <test-case id="4345" name="TestAvailable" fullname="Mirror.Tests.MultiplexTest.TestAvailable" methodname="TestAvailable" classname="Mirror.Tests.MultiplexTest" runstate="Runnable" seed="210608988" result="Passed" start-time="2021-03-06 06:27:21Z" end-time="2021-03-06 06:27:21Z" duration="0.027871" asserts="0">
              <properties />
              <output><![CDATA[You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
]]></output>
            </test-case>
            <test-case id="4353" name="TestClient1Connected" fullname="Mirror.Tests.MultiplexTest.TestClient1Connected" methodname="TestClient1Connected" classname="Mirror.Tests.MultiplexTest" runstate="Runnable" seed="2105668821" result="Passed" start-time="2021-03-06 06:27:21Z" end-time="2021-03-06 06:27:21Z" duration="0.033529" asserts="0">
              <properties />
              <output><![CDATA[You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
]]></output>
            </test-case>
            <test-case id="4354" name="TestClient2Connected" fullname="Mirror.Tests.MultiplexTest.TestClient2Connected" methodname="TestClient2Connected" classname="Mirror.Tests.MultiplexTest" runstate="Runnable" seed="1450387208" result="Passed" start-time="2021-03-06 06:27:21Z" end-time="2021-03-06 06:27:21Z" duration="0.029200" asserts="0">
              <properties />
              <output><![CDATA[You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
]]></output>
            </test-case>
            <test-case id="4352" name="TestClientSend" fullname="Mirror.Tests.MultiplexTest.TestClientSend" methodname="TestClientSend" classname="Mirror.Tests.MultiplexTest" runstate="Runnable" seed="385832508" result="Passed" start-time="2021-03-06 06:27:21Z" end-time="2021-03-06 06:27:21Z" duration="0.029388" asserts="0">
              <properties />
              <output><![CDATA[You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
]]></output>
            </test-case>
            <test-case id="4347" name="TestConnect" fullname="Mirror.Tests.MultiplexTest.TestConnect" methodname="TestConnect" classname="Mirror.Tests.MultiplexTest" runstate="Runnable" seed="2123028345" result="Passed" start-time="2021-03-06 06:27:21Z" end-time="2021-03-06 06:27:21Z" duration="0.028892" asserts="0">
              <properties />
              <output><![CDATA[You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
]]></output>
            </test-case>
            <test-case id="4350" name="TestConnected" fullname="Mirror.Tests.MultiplexTest.TestConnected" methodname="TestConnected" classname="Mirror.Tests.MultiplexTest" runstate="Runnable" seed="1550380952" result="Passed" start-time="2021-03-06 06:27:21Z" end-time="2021-03-06 06:27:21Z" duration="0.069903" asserts="0">
              <properties />
              <output><![CDATA[You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
]]></output>
            </test-case>
            <test-case id="4348" name="TestConnectFirstUri" fullname="Mirror.Tests.MultiplexTest.TestConnectFirstUri" methodname="TestConnectFirstUri" classname="Mirror.Tests.MultiplexTest" runstate="Runnable" seed="1152219329" result="Passed" start-time="2021-03-06 06:27:21Z" end-time="2021-03-06 06:27:21Z" duration="0.033092" asserts="0">
              <properties />
              <output><![CDATA[You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
]]></output>
            </test-case>
            <test-case id="4349" name="TestConnectSecondUri" fullname="Mirror.Tests.MultiplexTest.TestConnectSecondUri" methodname="TestConnectSecondUri" classname="Mirror.Tests.MultiplexTest" runstate="Runnable" seed="1092562403" result="Passed" start-time="2021-03-06 06:27:21Z" end-time="2021-03-06 06:27:21Z" duration="0.030323" asserts="0">
              <properties />
              <output><![CDATA[You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
]]></output>
            </test-case>
            <test-case id="4351" name="TestDisconnect" fullname="Mirror.Tests.MultiplexTest.TestDisconnect" methodname="TestDisconnect" classname="Mirror.Tests.MultiplexTest" runstate="Runnable" seed="206706777" result="Passed" start-time="2021-03-06 06:27:21Z" end-time="2021-03-06 06:27:21Z" duration="0.029227" asserts="0">
              <properties />
              <output><![CDATA[You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
]]></output>
            </test-case>
            <test-case id="4346" name="TestNotAvailable" fullname="Mirror.Tests.MultiplexTest.TestNotAvailable" methodname="TestNotAvailable" classname="Mirror.Tests.MultiplexTest" runstate="Runnable" seed="165968381" result="Passed" start-time="2021-03-06 06:27:21Z" end-time="2021-03-06 06:27:21Z" duration="0.033210" asserts="0">
              <properties />
              <output><![CDATA[You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
]]></output>
            </test-case>
            <test-case id="4355" name="TestServerConnected" fullname="Mirror.Tests.MultiplexTest.TestServerConnected" methodname="TestServerConnected" classname="Mirror.Tests.MultiplexTest" runstate="Runnable" seed="1512999465" result="Passed" start-time="2021-03-06 06:27:21Z" end-time="2021-03-06 06:27:21Z" duration="0.029609" asserts="0">
              <properties />
              <output><![CDATA[You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
]]></output>
            </test-case>
          </test-suite>
          <test-suite type="TestFixture" id="4406" name="NetworkBehaviourHookGuardTester" fullname="Mirror.Tests.NetworkBehaviourHookGuardTester" classname="Mirror.Tests.NetworkBehaviourHookGuardTester" runstate="Runnable" testcasecount="1" result="Passed" start-time="2021-03-06 06:27:21Z" end-time="2021-03-06 06:27:21Z" duration="0.015380" total="1" passed="1" failed="0" inconclusive="0" skipped="0" asserts="0">
            <properties />
            <output><![CDATA[You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
]]></output>
            <test-case id="4407" name="HookGuard" fullname="Mirror.Tests.NetworkBehaviourHookGuardTester.HookGuard" methodname="HookGuard" classname="Mirror.Tests.NetworkBehaviourHookGuardTester" runstate="Runnable" seed="1245792374" result="Passed" start-time="2021-03-06 06:27:21Z" end-time="2021-03-06 06:27:21Z" duration="0.002930" asserts="0">
              <properties />
            </test-case>
          </test-suite>
          <test-suite type="TestFixture" id="4408" name="NetworkBehaviourInitSyncObjectTester" fullname="Mirror.Tests.NetworkBehaviourInitSyncObjectTester" classname="Mirror.Tests.NetworkBehaviourInitSyncObjectTester" runstate="Runnable" testcasecount="1" result="Passed" start-time="2021-03-06 06:27:21Z" end-time="2021-03-06 06:27:21Z" duration="0.018383" total="1" passed="1" failed="0" inconclusive="0" skipped="0" asserts="0">
            <properties />
            <output><![CDATA[You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
]]></output>
            <test-case id="4409" name="InitSyncObject" fullname="Mirror.Tests.NetworkBehaviourInitSyncObjectTester.InitSyncObject" methodname="InitSyncObject" classname="Mirror.Tests.NetworkBehaviourInitSyncObjectTester" runstate="Runnable" seed="412865675" result="Passed" start-time="2021-03-06 06:27:21Z" end-time="2021-03-06 06:27:21Z" duration="0.004036" asserts="0">
              <properties />
            </test-case>
          </test-suite>
          <test-suite type="TestSuite" id="5886" name="NetworkBehaviourSerialize" fullname="Mirror.Tests.NetworkBehaviourSerialize" runstate="Runnable" testcasecount="16" result="Passed" start-time="2021-03-06 06:27:21Z" end-time="2021-03-06 06:27:22Z" duration="0.564983" total="16" passed="16" failed="0" inconclusive="0" skipped="0" asserts="0">
            <properties />
            <test-suite type="TestFixture" id="4778" name="NetworkBehaviourSerializeTest" fullname="Mirror.Tests.NetworkBehaviourSerialize.NetworkBehaviourSerializeTest" classname="Mirror.Tests.NetworkBehaviourSerialize.NetworkBehaviourSerializeTest" runstate="Runnable" testcasecount="16" result="Passed" start-time="2021-03-06 06:27:21Z" end-time="2021-03-06 06:27:22Z" duration="0.533490" total="16" passed="16" failed="0" inconclusive="0" skipped="0" asserts="0">
              <properties />
              <test-suite type="ParameterizedMethod" id="4781" name="BehaviourWithSyncVarTest" fullname="Mirror.Tests.NetworkBehaviourSerialize.NetworkBehaviourSerializeTest.BehaviourWithSyncVarTest" classname="Mirror.Tests.NetworkBehaviourSerialize.NetworkBehaviourSerializeTest" runstate="Runnable" testcasecount="2" result="Passed" start-time="2021-03-06 06:27:21Z" end-time="2021-03-06 06:27:21Z" duration="0.060907" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                <properties />
                <test-case id="4779" name="BehaviourWithSyncVarTest(True)" fullname="Mirror.Tests.NetworkBehaviourSerialize.NetworkBehaviourSerializeTest.BehaviourWithSyncVarTest(True)" methodname="BehaviourWithSyncVarTest" classname="Mirror.Tests.NetworkBehaviourSerialize.NetworkBehaviourSerializeTest" runstate="Runnable" seed="1850543663" result="Passed" start-time="2021-03-06 06:27:21Z" end-time="2021-03-06 06:27:21Z" duration="0.020118" asserts="0">
                  <properties />
                </test-case>
                <test-case id="4780" name="BehaviourWithSyncVarTest(False)" fullname="Mirror.Tests.NetworkBehaviourSerialize.NetworkBehaviourSerializeTest.BehaviourWithSyncVarTest(False)" methodname="BehaviourWithSyncVarTest" classname="Mirror.Tests.NetworkBehaviourSerialize.NetworkBehaviourSerializeTest" runstate="Runnable" seed="1435121656" result="Passed" start-time="2021-03-06 06:27:21Z" end-time="2021-03-06 06:27:21Z" duration="0.033464" asserts="0">
                  <properties />
                </test-case>
              </test-suite>
              <test-suite type="ParameterizedMethod" id="4796" name="BehaviourWithSyncVarWithOnSerializeTest" fullname="Mirror.Tests.NetworkBehaviourSerialize.NetworkBehaviourSerializeTest.BehaviourWithSyncVarWithOnSerializeTest" classname="Mirror.Tests.NetworkBehaviourSerialize.NetworkBehaviourSerializeTest" runstate="Runnable" testcasecount="2" result="Passed" start-time="2021-03-06 06:27:21Z" end-time="2021-03-06 06:27:21Z" duration="0.061613" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                <properties />
                <test-case id="4794" name="BehaviourWithSyncVarWithOnSerializeTest(True)" fullname="Mirror.Tests.NetworkBehaviourSerialize.NetworkBehaviourSerializeTest.BehaviourWithSyncVarWithOnSerializeTest(True)" methodname="BehaviourWithSyncVarWithOnSerializeTest" classname="Mirror.Tests.NetworkBehaviourSerialize.NetworkBehaviourSerializeTest" runstate="Runnable" seed="1534118898" result="Passed" start-time="2021-03-06 06:27:21Z" end-time="2021-03-06 06:27:21Z" duration="0.024557" asserts="0">
                  <properties />
                </test-case>
                <test-case id="4795" name="BehaviourWithSyncVarWithOnSerializeTest(False)" fullname="Mirror.Tests.NetworkBehaviourSerialize.NetworkBehaviourSerializeTest.BehaviourWithSyncVarWithOnSerializeTest(False)" methodname="BehaviourWithSyncVarWithOnSerializeTest" classname="Mirror.Tests.NetworkBehaviourSerialize.NetworkBehaviourSerializeTest" runstate="Runnable" seed="62143639" result="Passed" start-time="2021-03-06 06:27:21Z" end-time="2021-03-06 06:27:21Z" duration="0.028539" asserts="0">
                  <properties />
                </test-case>
              </test-suite>
              <test-suite type="ParameterizedMethod" id="4784" name="OverrideBehaviourFromSyncVarTest" fullname="Mirror.Tests.NetworkBehaviourSerialize.NetworkBehaviourSerializeTest.OverrideBehaviourFromSyncVarTest" classname="Mirror.Tests.NetworkBehaviourSerialize.NetworkBehaviourSerializeTest" runstate="Runnable" testcasecount="2" result="Passed" start-time="2021-03-06 06:27:21Z" end-time="2021-03-06 06:27:22Z" duration="0.066134" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                <properties />
                <test-case id="4782" name="OverrideBehaviourFromSyncVarTest(True)" fullname="Mirror.Tests.NetworkBehaviourSerialize.NetworkBehaviourSerializeTest.OverrideBehaviourFromSyncVarTest(True)" methodname="OverrideBehaviourFromSyncVarTest" classname="Mirror.Tests.NetworkBehaviourSerialize.NetworkBehaviourSerializeTest" runstate="Runnable" seed="839547727" result="Passed" start-time="2021-03-06 06:27:21Z" end-time="2021-03-06 06:27:21Z" duration="0.025093" asserts="0">
                  <properties />
                </test-case>
                <test-case id="4783" name="OverrideBehaviourFromSyncVarTest(False)" fullname="Mirror.Tests.NetworkBehaviourSerialize.NetworkBehaviourSerializeTest.OverrideBehaviourFromSyncVarTest(False)" methodname="OverrideBehaviourFromSyncVarTest" classname="Mirror.Tests.NetworkBehaviourSerialize.NetworkBehaviourSerializeTest" runstate="Runnable" seed="1967170327" result="Passed" start-time="2021-03-06 06:27:21Z" end-time="2021-03-06 06:27:22Z" duration="0.028877" asserts="0">
                  <properties />
                </test-case>
              </test-suite>
              <test-suite type="ParameterizedMethod" id="4799" name="OverrideBehaviourFromSyncVarWithOnSerializeTest" fullname="Mirror.Tests.NetworkBehaviourSerialize.NetworkBehaviourSerializeTest.OverrideBehaviourFromSyncVarWithOnSerializeTest" classname="Mirror.Tests.NetworkBehaviourSerialize.NetworkBehaviourSerializeTest" runstate="Runnable" testcasecount="2" result="Passed" start-time="2021-03-06 06:27:22Z" end-time="2021-03-06 06:27:22Z" duration="0.061336" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                <properties />
                <test-case id="4797" name="OverrideBehaviourFromSyncVarWithOnSerializeTest(True)" fullname="Mirror.Tests.NetworkBehaviourSerialize.NetworkBehaviourSerializeTest.OverrideBehaviourFromSyncVarWithOnSerializeTest(True)" methodname="OverrideBehaviourFromSyncVarWithOnSerializeTest" classname="Mirror.Tests.NetworkBehaviourSerialize.NetworkBehaviourSerializeTest" runstate="Runnable" seed="1696079914" result="Passed" start-time="2021-03-06 06:27:22Z" end-time="2021-03-06 06:27:22Z" duration="0.020092" asserts="0">
                  <properties />
                </test-case>
                <test-case id="4798" name="OverrideBehaviourFromSyncVarWithOnSerializeTest(False)" fullname="Mirror.Tests.NetworkBehaviourSerialize.NetworkBehaviourSerializeTest.OverrideBehaviourFromSyncVarWithOnSerializeTest(False)" methodname="OverrideBehaviourFromSyncVarWithOnSerializeTest" classname="Mirror.Tests.NetworkBehaviourSerialize.NetworkBehaviourSerializeTest" runstate="Runnable" seed="1207269592" result="Passed" start-time="2021-03-06 06:27:22Z" end-time="2021-03-06 06:27:22Z" duration="0.029599" asserts="0">
                  <properties />
                </test-case>
              </test-suite>
              <test-suite type="ParameterizedMethod" id="4787" name="OverrideBehaviourWithSyncVarFromSyncVarTest" fullname="Mirror.Tests.NetworkBehaviourSerialize.NetworkBehaviourSerializeTest.OverrideBehaviourWithSyncVarFromSyncVarTest" classname="Mirror.Tests.NetworkBehaviourSerialize.NetworkBehaviourSerializeTest" runstate="Runnable" testcasecount="2" result="Passed" start-time="2021-03-06 06:27:22Z" end-time="2021-03-06 06:27:22Z" duration="0.063456" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                <properties />
                <test-case id="4785" name="OverrideBehaviourWithSyncVarFromSyncVarTest(True)" fullname="Mirror.Tests.NetworkBehaviourSerialize.NetworkBehaviourSerializeTest.OverrideBehaviourWithSyncVarFromSyncVarTest(True)" methodname="OverrideBehaviourWithSyncVarFromSyncVarTest" classname="Mirror.Tests.NetworkBehaviourSerialize.NetworkBehaviourSerializeTest" runstate="Runnable" seed="1205814716" result="Passed" start-time="2021-03-06 06:27:22Z" end-time="2021-03-06 06:27:22Z" duration="0.024141" asserts="0">
                  <properties />
                </test-case>
                <test-case id="4786" name="OverrideBehaviourWithSyncVarFromSyncVarTest(False)" fullname="Mirror.Tests.NetworkBehaviourSerialize.NetworkBehaviourSerializeTest.OverrideBehaviourWithSyncVarFromSyncVarTest(False)" methodname="OverrideBehaviourWithSyncVarFromSyncVarTest" classname="Mirror.Tests.NetworkBehaviourSerialize.NetworkBehaviourSerializeTest" runstate="Runnable" seed="224498715" result="Passed" start-time="2021-03-06 06:27:22Z" end-time="2021-03-06 06:27:22Z" duration="0.028610" asserts="0">
                  <properties />
                </test-case>
              </test-suite>
              <test-suite type="ParameterizedMethod" id="4802" name="OverrideBehaviourWithSyncVarFromSyncVarWithOnSerializeTest" fullname="Mirror.Tests.NetworkBehaviourSerialize.NetworkBehaviourSerializeTest.OverrideBehaviourWithSyncVarFromSyncVarWithOnSerializeTest" classname="Mirror.Tests.NetworkBehaviourSerialize.NetworkBehaviourSerializeTest" runstate="Runnable" testcasecount="2" result="Passed" start-time="2021-03-06 06:27:22Z" end-time="2021-03-06 06:27:22Z" duration="0.064811" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                <properties />
                <test-case id="4800" name="OverrideBehaviourWithSyncVarFromSyncVarWithOnSerializeTest(True)" fullname="Mirror.Tests.NetworkBehaviourSerialize.NetworkBehaviourSerializeTest.OverrideBehaviourWithSyncVarFromSyncVarWithOnSerializeTest(True)" methodname="OverrideBehaviourWithSyncVarFromSyncVarWithOnSerializeTest" classname="Mirror.Tests.NetworkBehaviourSerialize.NetworkBehaviourSerializeTest" runstate="Runnable" seed="1786907397" result="Passed" start-time="2021-03-06 06:27:22Z" end-time="2021-03-06 06:27:22Z" duration="0.019635" asserts="0">
                  <properties />
                </test-case>
                <test-case id="4801" name="OverrideBehaviourWithSyncVarFromSyncVarWithOnSerializeTest(False)" fullname="Mirror.Tests.NetworkBehaviourSerialize.NetworkBehaviourSerializeTest.OverrideBehaviourWithSyncVarFromSyncVarWithOnSerializeTest(False)" methodname="OverrideBehaviourWithSyncVarFromSyncVarWithOnSerializeTest" classname="Mirror.Tests.NetworkBehaviourSerialize.NetworkBehaviourSerializeTest" runstate="Runnable" seed="1854436478" result="Passed" start-time="2021-03-06 06:27:22Z" end-time="2021-03-06 06:27:22Z" duration="0.034194" asserts="0">
                  <properties />
                </test-case>
              </test-suite>
              <test-suite type="ParameterizedMethod" id="4793" name="SubClassFromSyncVarTest" fullname="Mirror.Tests.NetworkBehaviourSerialize.NetworkBehaviourSerializeTest.SubClassFromSyncVarTest" classname="Mirror.Tests.NetworkBehaviourSerialize.NetworkBehaviourSerializeTest" runstate="Runnable" testcasecount="2" result="Passed" start-time="2021-03-06 06:27:22Z" end-time="2021-03-06 06:27:22Z" duration="0.063499" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                <properties />
                <test-case id="4791" name="SubClassFromSyncVarTest(True)" fullname="Mirror.Tests.NetworkBehaviourSerialize.NetworkBehaviourSerializeTest.SubClassFromSyncVarTest(True)" methodname="SubClassFromSyncVarTest" classname="Mirror.Tests.NetworkBehaviourSerialize.NetworkBehaviourSerializeTest" runstate="Runnable" seed="388003122" result="Passed" start-time="2021-03-06 06:27:22Z" end-time="2021-03-06 06:27:22Z" duration="0.019969" asserts="0">
                  <properties />
                </test-case>
                <test-case id="4792" name="SubClassFromSyncVarTest(False)" fullname="Mirror.Tests.NetworkBehaviourSerialize.NetworkBehaviourSerializeTest.SubClassFromSyncVarTest(False)" methodname="SubClassFromSyncVarTest" classname="Mirror.Tests.NetworkBehaviourSerialize.NetworkBehaviourSerializeTest" runstate="Runnable" seed="957589885" result="Passed" start-time="2021-03-06 06:27:22Z" end-time="2021-03-06 06:27:22Z" duration="0.033207" asserts="0">
                  <properties />
                </test-case>
              </test-suite>
              <test-suite type="ParameterizedMethod" id="4790" name="SubClassTest" fullname="Mirror.Tests.NetworkBehaviourSerialize.NetworkBehaviourSerializeTest.SubClassTest" classname="Mirror.Tests.NetworkBehaviourSerialize.NetworkBehaviourSerializeTest" runstate="Runnable" testcasecount="2" result="Passed" start-time="2021-03-06 06:27:22Z" end-time="2021-03-06 06:27:22Z" duration="0.062522" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                <properties />
                <test-case id="4788" name="SubClassTest(True)" fullname="Mirror.Tests.NetworkBehaviourSerialize.NetworkBehaviourSerializeTest.SubClassTest(True)" methodname="SubClassTest" classname="Mirror.Tests.NetworkBehaviourSerialize.NetworkBehaviourSerializeTest" runstate="Runnable" seed="892521337" result="Passed" start-time="2021-03-06 06:27:22Z" end-time="2021-03-06 06:27:22Z" duration="0.024019" asserts="0">
                  <properties />
                </test-case>
                <test-case id="4789" name="SubClassTest(False)" fullname="Mirror.Tests.NetworkBehaviourSerialize.NetworkBehaviourSerializeTest.SubClassTest(False)" methodname="SubClassTest" classname="Mirror.Tests.NetworkBehaviourSerialize.NetworkBehaviourSerializeTest" runstate="Runnable" seed="1395395400" result="Passed" start-time="2021-03-06 06:27:22Z" end-time="2021-03-06 06:27:22Z" duration="0.029646" asserts="0">
                  <properties />
                </test-case>
              </test-suite>
            </test-suite>
          </test-suite>
          <test-suite type="TestFixture" id="4356" name="NetworkBehaviourTests" fullname="Mirror.Tests.NetworkBehaviourTests" classname="Mirror.Tests.NetworkBehaviourTests" runstate="Runnable" testcasecount="49" result="Passed" start-time="2021-03-06 06:27:22Z" end-time="2021-03-06 06:27:24Z" duration="1.687986" total="49" passed="49" failed="0" inconclusive="0" skipped="0" asserts="0">
            <properties />
            <test-case id="4399" name="ClearAllDirtyBitsClearsSyncObjectsDirtyBits" fullname="Mirror.Tests.NetworkBehaviourTests.ClearAllDirtyBitsClearsSyncObjectsDirtyBits" methodname="ClearAllDirtyBitsClearsSyncObjectsDirtyBits" classname="Mirror.Tests.NetworkBehaviourTests" runstate="Runnable" seed="2004764945" result="Passed" start-time="2021-03-06 06:27:22Z" end-time="2021-03-06 06:27:22Z" duration="0.023391" asserts="0">
              <properties />
            </test-case>
            <test-case id="4398" name="ClearAllDirtyBitsClearsSyncVarDirtyBits" fullname="Mirror.Tests.NetworkBehaviourTests.ClearAllDirtyBitsClearsSyncVarDirtyBits" methodname="ClearAllDirtyBitsClearsSyncVarDirtyBits" classname="Mirror.Tests.NetworkBehaviourTests" runstate="Runnable" seed="269669649" result="Passed" start-time="2021-03-06 06:27:22Z" end-time="2021-03-06 06:27:22Z" duration="0.029919" asserts="0">
              <properties />
            </test-case>
            <test-case id="4363" name="ComponentIndex" fullname="Mirror.Tests.NetworkBehaviourTests.ComponentIndex" methodname="ComponentIndex" classname="Mirror.Tests.NetworkBehaviourTests" runstate="Runnable" seed="2133167375" result="Passed" start-time="2021-03-06 06:27:22Z" end-time="2021-03-06 06:27:22Z" duration="0.029968" asserts="0">
              <properties />
            </test-case>
            <test-case id="4400" name="DirtyObjectBits" fullname="Mirror.Tests.NetworkBehaviourTests.DirtyObjectBits" methodname="DirtyObjectBits" classname="Mirror.Tests.NetworkBehaviourTests" runstate="Runnable" seed="1917479319" result="Passed" start-time="2021-03-06 06:27:22Z" end-time="2021-03-06 06:27:22Z" duration="0.035926" asserts="0">
              <properties />
            </test-case>
            <test-case id="4368" name="GetDelegate" fullname="Mirror.Tests.NetworkBehaviourTests.GetDelegate" methodname="GetDelegate" classname="Mirror.Tests.NetworkBehaviourTests" runstate="Runnable" seed="740429011" result="Passed" start-time="2021-03-06 06:27:22Z" end-time="2021-03-06 06:27:22Z" duration="0.029466" asserts="0">
              <properties />
            </test-case>
            <test-case id="4389" name="GetSyncVarGameObjectOnClient" fullname="Mirror.Tests.NetworkBehaviourTests.GetSyncVarGameObjectOnClient" methodname="GetSyncVarGameObjectOnClient" classname="Mirror.Tests.NetworkBehaviourTests" runstate="Runnable" seed="52883088" result="Passed" start-time="2021-03-06 06:27:22Z" end-time="2021-03-06 06:27:22Z" duration="0.029980" asserts="0">
              <properties />
            </test-case>
            <test-case id="4390" name="GetSyncVarGameObjectOnClientNull" fullname="Mirror.Tests.NetworkBehaviourTests.GetSyncVarGameObjectOnClientNull" methodname="GetSyncVarGameObjectOnClientNull" classname="Mirror.Tests.NetworkBehaviourTests" runstate="Runnable" seed="2051154724" result="Passed" start-time="2021-03-06 06:27:22Z" end-time="2021-03-06 06:27:22Z" duration="0.035064" asserts="0">
              <properties />
            </test-case>
            <test-case id="4387" name="GetSyncVarGameObjectOnServer" fullname="Mirror.Tests.NetworkBehaviourTests.GetSyncVarGameObjectOnServer" methodname="GetSyncVarGameObjectOnServer" classname="Mirror.Tests.NetworkBehaviourTests" runstate="Runnable" seed="1662947546" result="Passed" start-time="2021-03-06 06:27:22Z" end-time="2021-03-06 06:27:22Z" duration="0.030238" asserts="0">
              <properties />
            </test-case>
            <test-case id="4388" name="GetSyncVarGameObjectOnServerNull" fullname="Mirror.Tests.NetworkBehaviourTests.GetSyncVarGameObjectOnServerNull" methodname="GetSyncVarGameObjectOnServerNull" classname="Mirror.Tests.NetworkBehaviourTests" runstate="Runnable" seed="1558998362" result="Passed" start-time="2021-03-06 06:27:22Z" end-time="2021-03-06 06:27:22Z" duration="0.030432" asserts="0">
              <properties />
            </test-case>
            <test-case id="4396" name="GetSyncVarNetworkIdentityOnClient" fullname="Mirror.Tests.NetworkBehaviourTests.GetSyncVarNetworkIdentityOnClient" methodname="GetSyncVarNetworkIdentityOnClient" classname="Mirror.Tests.NetworkBehaviourTests" runstate="Runnable" seed="1035231925" result="Passed" start-time="2021-03-06 06:27:22Z" end-time="2021-03-06 06:27:22Z" duration="0.034028" asserts="0">
              <properties />
            </test-case>
            <test-case id="4397" name="GetSyncVarNetworkIdentityOnClientNull" fullname="Mirror.Tests.NetworkBehaviourTests.GetSyncVarNetworkIdentityOnClientNull" methodname="GetSyncVarNetworkIdentityOnClientNull" classname="Mirror.Tests.NetworkBehaviourTests" runstate="Runnable" seed="1293617229" result="Passed" start-time="2021-03-06 06:27:22Z" end-time="2021-03-06 06:27:22Z" duration="0.031013" asserts="0">
              <properties />
            </test-case>
            <test-case id="4394" name="GetSyncVarNetworkIdentityOnServer" fullname="Mirror.Tests.NetworkBehaviourTests.GetSyncVarNetworkIdentityOnServer" methodname="GetSyncVarNetworkIdentityOnServer" classname="Mirror.Tests.NetworkBehaviourTests" runstate="Runnable" seed="1818869798" result="Passed" start-time="2021-03-06 06:27:22Z" end-time="2021-03-06 06:27:22Z" duration="0.029804" asserts="0">
              <properties />
            </test-case>
            <test-case id="4395" name="GetSyncVarNetworkIdentityOnServerNull" fullname="Mirror.Tests.NetworkBehaviourTests.GetSyncVarNetworkIdentityOnServerNull" methodname="GetSyncVarNetworkIdentityOnServerNull" classname="Mirror.Tests.NetworkBehaviourTests" runstate="Runnable" seed="1813889449" result="Passed" start-time="2021-03-06 06:27:22Z" end-time="2021-03-06 06:27:22Z" duration="0.030349" asserts="0">
              <properties />
            </test-case>
            <test-case id="4362" name="HasIdentitysConnectionToClient" fullname="Mirror.Tests.NetworkBehaviourTests.HasIdentitysConnectionToClient" methodname="HasIdentitysConnectionToClient" classname="Mirror.Tests.NetworkBehaviourTests" runstate="Runnable" seed="568936989" result="Passed" start-time="2021-03-06 06:27:22Z" end-time="2021-03-06 06:27:22Z" duration="0.034902" asserts="0">
              <properties />
            </test-case>
            <test-case id="4361" name="HasIdentitysConnectionToServer" fullname="Mirror.Tests.NetworkBehaviourTests.HasIdentitysConnectionToServer" methodname="HasIdentitysConnectionToServer" classname="Mirror.Tests.NetworkBehaviourTests" runstate="Runnable" seed="876218691" result="Passed" start-time="2021-03-06 06:27:22Z" end-time="2021-03-06 06:27:22Z" duration="0.029902" asserts="0">
              <properties />
            </test-case>
            <test-case id="4360" name="HasIdentitysNetId" fullname="Mirror.Tests.NetworkBehaviourTests.HasIdentitysNetId" methodname="HasIdentitysNetId" classname="Mirror.Tests.NetworkBehaviourTests" runstate="Runnable" seed="1980734213" result="Passed" start-time="2021-03-06 06:27:22Z" end-time="2021-03-06 06:27:22Z" duration="0.030434" asserts="0">
              <properties />
            </test-case>
            <test-case id="4359" name="HasNoAuthorityByDefault" fullname="Mirror.Tests.NetworkBehaviourTests.HasNoAuthorityByDefault" methodname="HasNoAuthorityByDefault" classname="Mirror.Tests.NetworkBehaviourTests" runstate="Runnable" seed="683860545" result="Passed" start-time="2021-03-06 06:27:22Z" end-time="2021-03-06 06:27:22Z" duration="0.030156" asserts="0">
              <properties />
            </test-case>
            <test-case id="4358" name="IsClientOnly" fullname="Mirror.Tests.NetworkBehaviourTests.IsClientOnly" methodname="IsClientOnly" classname="Mirror.Tests.NetworkBehaviourTests" runstate="Runnable" seed="946986207" result="Passed" start-time="2021-03-06 06:27:22Z" end-time="2021-03-06 06:27:22Z" duration="0.035295" asserts="0">
              <properties />
            </test-case>
            <test-case id="4357" name="IsServerOnly" fullname="Mirror.Tests.NetworkBehaviourTests.IsServerOnly" methodname="IsServerOnly" classname="Mirror.Tests.NetworkBehaviourTests" runstate="Runnable" seed="1388850160" result="Passed" start-time="2021-03-06 06:27:22Z" end-time="2021-03-06 06:27:23Z" duration="0.030159" asserts="0">
              <properties />
            </test-case>
            <test-case id="4404" name="OnStartClient" fullname="Mirror.Tests.NetworkBehaviourTests.OnStartClient" methodname="OnStartClient" classname="Mirror.Tests.NetworkBehaviourTests" runstate="Runnable" seed="909969151" result="Passed" start-time="2021-03-06 06:27:23Z" end-time="2021-03-06 06:27:23Z" duration="0.034938" asserts="0">
              <properties />
            </test-case>
            <test-case id="4405" name="OnStartLocalPlayer" fullname="Mirror.Tests.NetworkBehaviourTests.OnStartLocalPlayer" methodname="OnStartLocalPlayer" classname="Mirror.Tests.NetworkBehaviourTests" runstate="Runnable" seed="1447677568" result="Passed" start-time="2021-03-06 06:27:23Z" end-time="2021-03-06 06:27:23Z" duration="0.030727" asserts="0">
              <properties />
            </test-case>
            <test-case id="4403" name="OnStopClient" fullname="Mirror.Tests.NetworkBehaviourTests.OnStopClient" methodname="OnStopClient" classname="Mirror.Tests.NetworkBehaviourTests" runstate="Runnable" seed="1776700352" result="Passed" start-time="2021-03-06 06:27:23Z" end-time="2021-03-06 06:27:23Z" duration="0.030189" asserts="0">
              <properties />
            </test-case>
            <test-case id="4367" name="RegisterDelegateDoesntOverwrite" fullname="Mirror.Tests.NetworkBehaviourTests.RegisterDelegateDoesntOverwrite" methodname="RegisterDelegateDoesntOverwrite" classname="Mirror.Tests.NetworkBehaviourTests" runstate="Runnable" seed="765441412" result="Passed" start-time="2021-03-06 06:27:23Z" end-time="2021-03-06 06:27:23Z" duration="0.030376" asserts="0">
              <properties />
              <output><![CDATA[Function Mirror.Tests.NetworkBehaviourDelegateComponent.Delegate and Mirror.Tests.NetworkBehaviourDelegateComponent.Delegate2 have the same hash.  Please rename one of them
]]></output>
            </test-case>
            <test-case id="4364" name="SendCommandInternal" fullname="Mirror.Tests.NetworkBehaviourTests.SendCommandInternal" methodname="SendCommandInternal" classname="Mirror.Tests.NetworkBehaviourTests" runstate="Runnable" seed="1285735387" result="Passed" start-time="2021-03-06 06:27:23Z" end-time="2021-03-06 06:27:23Z" duration="0.042278" asserts="0">
              <properties />
              <output><![CDATA[Server started listening
Command Function CommandGenerated called without an active client.
Trying to send command for object without authority. Mirror.Tests.NetworkBehaviourSendCommandInternalComponent.CommandGenerated
Send command attempted with no client running [client=].
Shutting down client.
]]></output>
            </test-case>
            <test-case id="4365" name="SendRPCInternal" fullname="Mirror.Tests.NetworkBehaviourTests.SendRPCInternal" methodname="SendRPCInternal" classname="Mirror.Tests.NetworkBehaviourTests" runstate="Runnable" seed="852011593" result="Passed" start-time="2021-03-06 06:27:23Z" end-time="2021-03-06 06:27:23Z" duration="0.050927" asserts="0">
              <properties />
              <output><![CDATA[RPC Function RPCGenerated called on Client.
Server started listening
ClientRpc RPCGenerated called on un-spawned object: New Game Object
Shutting down client.
]]></output>
            </test-case>
            <test-case id="4366" name="SendTargetRPCInternal" fullname="Mirror.Tests.NetworkBehaviourTests.SendTargetRPCInternal" methodname="SendTargetRPCInternal" classname="Mirror.Tests.NetworkBehaviourTests" runstate="Runnable" seed="1718847447" result="Passed" start-time="2021-03-06 06:27:23Z" end-time="2021-03-06 06:27:23Z" duration="0.041615" asserts="0">
              <properties />
              <output><![CDATA[TargetRPC TargetRPCGenerated called when server not active
Server started listening
TargetRpc TargetRPCGenerated called on New Game Object but that object has not been spawned or has been unspawned
TargetRPC TargetRPCGenerated requires a NetworkConnectionToClient but was given NetworkConnectionToServer
Shutting down client.
]]></output>
            </test-case>
            <test-case id="4401" name="SerializeAndDeserializeObjectsAll" fullname="Mirror.Tests.NetworkBehaviourTests.SerializeAndDeserializeObjectsAll" methodname="SerializeAndDeserializeObjectsAll" classname="Mirror.Tests.NetworkBehaviourTests" runstate="Runnable" seed="1494500943" result="Passed" start-time="2021-03-06 06:27:23Z" end-time="2021-03-06 06:27:23Z" duration="0.034285" asserts="0">
              <properties />
            </test-case>
            <test-case id="4402" name="SerializeAndDeserializeObjectsDelta" fullname="Mirror.Tests.NetworkBehaviourTests.SerializeAndDeserializeObjectsDelta" methodname="SerializeAndDeserializeObjectsDelta" classname="Mirror.Tests.NetworkBehaviourTests" runstate="Runnable" seed="1591751820" result="Passed" start-time="2021-03-06 06:27:23Z" end-time="2021-03-06 06:27:23Z" duration="0.029869" asserts="0">
              <properties />
            </test-case>
            <test-case id="4384" name="SetSyncVarGameObjectNull" fullname="Mirror.Tests.NetworkBehaviourTests.SetSyncVarGameObjectNull" methodname="SetSyncVarGameObjectNull" classname="Mirror.Tests.NetworkBehaviourTests" runstate="Runnable" seed="1952381421" result="Passed" start-time="2021-03-06 06:27:23Z" end-time="2021-03-06 06:27:23Z" duration="0.030332" asserts="0">
              <properties />
            </test-case>
            <test-case id="4385" name="SetSyncVarGameObjectWithoutNetworkIdentity" fullname="Mirror.Tests.NetworkBehaviourTests.SetSyncVarGameObjectWithoutNetworkIdentity" methodname="SetSyncVarGameObjectWithoutNetworkIdentity" classname="Mirror.Tests.NetworkBehaviourTests" runstate="Runnable" seed="1264578489" result="Passed" start-time="2021-03-06 06:27:23Z" end-time="2021-03-06 06:27:23Z" duration="0.031063" asserts="0">
              <properties />
            </test-case>
            <test-case id="4383" name="SetSyncVarGameObjectWithValidObject" fullname="Mirror.Tests.NetworkBehaviourTests.SetSyncVarGameObjectWithValidObject" methodname="SetSyncVarGameObjectWithValidObject" classname="Mirror.Tests.NetworkBehaviourTests" runstate="Runnable" seed="1718842313" result="Passed" start-time="2021-03-06 06:27:23Z" end-time="2021-03-06 06:27:23Z" duration="0.034277" asserts="0">
              <properties />
            </test-case>
            <test-case id="4386" name="SetSyncVarGameObjectZeroNetId" fullname="Mirror.Tests.NetworkBehaviourTests.SetSyncVarGameObjectZeroNetId" methodname="SetSyncVarGameObjectZeroNetId" classname="Mirror.Tests.NetworkBehaviourTests" runstate="Runnable" seed="1535353479" result="Passed" start-time="2021-03-06 06:27:23Z" end-time="2021-03-06 06:27:23Z" duration="0.030400" asserts="0">
              <properties />
              <output><![CDATA[SetSyncVarGameObject GameObject New Game Object (UnityEngine.GameObject) has a zero netId. Maybe it is not spawned yet?
]]></output>
            </test-case>
            <test-case id="4392" name="SetSyncVarNetworkIdentityNull" fullname="Mirror.Tests.NetworkBehaviourTests.SetSyncVarNetworkIdentityNull" methodname="SetSyncVarNetworkIdentityNull" classname="Mirror.Tests.NetworkBehaviourTests" runstate="Runnable" seed="1088111327" result="Passed" start-time="2021-03-06 06:27:23Z" end-time="2021-03-06 06:27:23Z" duration="0.034500" asserts="0">
              <properties />
            </test-case>
            <test-case id="4391" name="SetSyncVarNetworkIdentityWithValidObject" fullname="Mirror.Tests.NetworkBehaviourTests.SetSyncVarNetworkIdentityWithValidObject" methodname="SetSyncVarNetworkIdentityWithValidObject" classname="Mirror.Tests.NetworkBehaviourTests" runstate="Runnable" seed="904805371" result="Passed" start-time="2021-03-06 06:27:23Z" end-time="2021-03-06 06:27:23Z" duration="0.030724" asserts="0">
              <properties />
            </test-case>
            <test-case id="4393" name="SetSyncVarNetworkIdentityZeroNetId" fullname="Mirror.Tests.NetworkBehaviourTests.SetSyncVarNetworkIdentityZeroNetId" methodname="SetSyncVarNetworkIdentityZeroNetId" classname="Mirror.Tests.NetworkBehaviourTests" runstate="Runnable" seed="744075236" result="Passed" start-time="2021-03-06 06:27:23Z" end-time="2021-03-06 06:27:23Z" duration="0.034343" asserts="0">
              <properties />
              <output><![CDATA[SetSyncVarNetworkIdentity NetworkIdentity New Game Object (Mirror.NetworkIdentity) has a zero netId. Maybe it is not spawned yet?
]]></output>
            </test-case>
            <test-case id="4370" name="SyncVarGameObjectEqualNull" fullname="Mirror.Tests.NetworkBehaviourTests.SyncVarGameObjectEqualNull" methodname="SyncVarGameObjectEqualNull" classname="Mirror.Tests.NetworkBehaviourTests" runstate="Runnable" seed="1514865807" result="Passed" start-time="2021-03-06 06:27:23Z" end-time="2021-03-06 06:27:23Z" duration="0.029759" asserts="0">
              <properties />
            </test-case>
            <test-case id="4375" name="SyncVarGameObjectEqualUnspawnedGO" fullname="Mirror.Tests.NetworkBehaviourTests.SyncVarGameObjectEqualUnspawnedGO" methodname="SyncVarGameObjectEqualUnspawnedGO" classname="Mirror.Tests.NetworkBehaviourTests" runstate="Runnable" seed="998135764" result="Passed" start-time="2021-03-06 06:27:23Z" end-time="2021-03-06 06:27:23Z" duration="0.030029" asserts="0">
              <properties />
              <output><![CDATA[SetSyncVarGameObject GameObject New Game Object (UnityEngine.GameObject) has a zero netId. Maybe it is not spawned yet?
]]></output>
            </test-case>
            <test-case id="4376" name="SyncVarGameObjectEqualUnspawnedGOZeroNetIdIsTrue" fullname="Mirror.Tests.NetworkBehaviourTests.SyncVarGameObjectEqualUnspawnedGOZeroNetIdIsTrue" methodname="SyncVarGameObjectEqualUnspawnedGOZeroNetIdIsTrue" classname="Mirror.Tests.NetworkBehaviourTests" runstate="Runnable" seed="781386908" result="Passed" start-time="2021-03-06 06:27:23Z" end-time="2021-03-06 06:27:23Z" duration="0.034388" asserts="0">
              <properties />
              <output><![CDATA[SetSyncVarGameObject GameObject New Game Object (UnityEngine.GameObject) has a zero netId. Maybe it is not spawned yet?
]]></output>
            </test-case>
            <test-case id="4373" name="SyncVarGameObjectEqualValidGOWithDifferentNetId" fullname="Mirror.Tests.NetworkBehaviourTests.SyncVarGameObjectEqualValidGOWithDifferentNetId" methodname="SyncVarGameObjectEqualValidGOWithDifferentNetId" classname="Mirror.Tests.NetworkBehaviourTests" runstate="Runnable" seed="163430060" result="Passed" start-time="2021-03-06 06:27:23Z" end-time="2021-03-06 06:27:23Z" duration="0.030382" asserts="0">
              <properties />
            </test-case>
            <test-case id="4374" name="SyncVarGameObjectEqualValidGOWithSameNetId" fullname="Mirror.Tests.NetworkBehaviourTests.SyncVarGameObjectEqualValidGOWithSameNetId" methodname="SyncVarGameObjectEqualValidGOWithSameNetId" classname="Mirror.Tests.NetworkBehaviourTests" runstate="Runnable" seed="855003135" result="Passed" start-time="2021-03-06 06:27:23Z" end-time="2021-03-06 06:27:23Z" duration="0.030667" asserts="0">
              <properties />
            </test-case>
            <test-case id="4372" name="SyncVarGameObjectEqualWithoutIdentityComponent" fullname="Mirror.Tests.NetworkBehaviourTests.SyncVarGameObjectEqualWithoutIdentityComponent" methodname="SyncVarGameObjectEqualWithoutIdentityComponent" classname="Mirror.Tests.NetworkBehaviourTests" runstate="Runnable" seed="1579260282" result="Passed" start-time="2021-03-06 06:27:23Z" end-time="2021-03-06 06:27:23Z" duration="0.034491" asserts="0">
              <properties />
              <output><![CDATA[SetSyncVarGameObject GameObject New Game Object (UnityEngine.GameObject) has a zero netId. Maybe it is not spawned yet?
]]></output>
            </test-case>
            <test-case id="4371" name="SyncVarGameObjectEqualZeroNetIdAndGOWithoutIdentityComponentIsTrue" fullname="Mirror.Tests.NetworkBehaviourTests.SyncVarGameObjectEqualZeroNetIdAndGOWithoutIdentityComponentIsTrue" methodname="SyncVarGameObjectEqualZeroNetIdAndGOWithoutIdentityComponentIsTrue" classname="Mirror.Tests.NetworkBehaviourTests" runstate="Runnable" seed="895136062" result="Passed" start-time="2021-03-06 06:27:23Z" end-time="2021-03-06 06:27:23Z" duration="0.029738" asserts="0">
              <properties />
              <output><![CDATA[SetSyncVarGameObject GameObject New Game Object (UnityEngine.GameObject) has a zero netId. Maybe it is not spawned yet?
]]></output>
            </test-case>
            <test-case id="4369" name="SyncVarGameObjectEqualZeroNetIdNullIsTrue" fullname="Mirror.Tests.NetworkBehaviourTests.SyncVarGameObjectEqualZeroNetIdNullIsTrue" methodname="SyncVarGameObjectEqualZeroNetIdNullIsTrue" classname="Mirror.Tests.NetworkBehaviourTests" runstate="Runnable" seed="1409056529" result="Passed" start-time="2021-03-06 06:27:23Z" end-time="2021-03-06 06:27:23Z" duration="0.034347" asserts="0">
              <properties />
            </test-case>
            <test-case id="4378" name="SyncVarNetworkIdentityEqualNull" fullname="Mirror.Tests.NetworkBehaviourTests.SyncVarNetworkIdentityEqualNull" methodname="SyncVarNetworkIdentityEqualNull" classname="Mirror.Tests.NetworkBehaviourTests" runstate="Runnable" seed="457131393" result="Passed" start-time="2021-03-06 06:27:23Z" end-time="2021-03-06 06:27:23Z" duration="0.029910" asserts="0">
              <properties />
            </test-case>
            <test-case id="4381" name="SyncVarNetworkIdentityEqualUnspawnedIdentity" fullname="Mirror.Tests.NetworkBehaviourTests.SyncVarNetworkIdentityEqualUnspawnedIdentity" methodname="SyncVarNetworkIdentityEqualUnspawnedIdentity" classname="Mirror.Tests.NetworkBehaviourTests" runstate="Runnable" seed="300843720" result="Passed" start-time="2021-03-06 06:27:23Z" end-time="2021-03-06 06:27:23Z" duration="0.030840" asserts="0">
              <properties />
              <output><![CDATA[SetSyncVarNetworkIdentity NetworkIdentity New Game Object (Mirror.NetworkIdentity) has a zero netId. Maybe it is not spawned yet?
]]></output>
            </test-case>
            <test-case id="4382" name="SyncVarNetworkIdentityEqualUnspawnedIdentityZeroNetIdIsTrue" fullname="Mirror.Tests.NetworkBehaviourTests.SyncVarNetworkIdentityEqualUnspawnedIdentityZeroNetIdIsTrue" methodname="SyncVarNetworkIdentityEqualUnspawnedIdentityZeroNetIdIsTrue" classname="Mirror.Tests.NetworkBehaviourTests" runstate="Runnable" seed="2005585667" result="Passed" start-time="2021-03-06 06:27:23Z" end-time="2021-03-06 06:27:23Z" duration="0.029720" asserts="0">
              <properties />
              <output><![CDATA[SetSyncVarNetworkIdentity NetworkIdentity New Game Object (Mirror.NetworkIdentity) has a zero netId. Maybe it is not spawned yet?
]]></output>
            </test-case>
            <test-case id="4379" name="SyncVarNetworkIdentityEqualValidIdentityWithDifferentNetId" fullname="Mirror.Tests.NetworkBehaviourTests.SyncVarNetworkIdentityEqualValidIdentityWithDifferentNetId" methodname="SyncVarNetworkIdentityEqualValidIdentityWithDifferentNetId" classname="Mirror.Tests.NetworkBehaviourTests" runstate="Runnable" seed="986766295" result="Passed" start-time="2021-03-06 06:27:23Z" end-time="2021-03-06 06:27:24Z" duration="0.034549" asserts="0">
              <properties />
            </test-case>
            <test-case id="4380" name="SyncVarNetworkIdentityEqualValidIdentityWithSameNetId" fullname="Mirror.Tests.NetworkBehaviourTests.SyncVarNetworkIdentityEqualValidIdentityWithSameNetId" methodname="SyncVarNetworkIdentityEqualValidIdentityWithSameNetId" classname="Mirror.Tests.NetworkBehaviourTests" runstate="Runnable" seed="146528770" result="Passed" start-time="2021-03-06 06:27:24Z" end-time="2021-03-06 06:27:24Z" duration="0.030120" asserts="0">
              <properties />
            </test-case>
            <test-case id="4377" name="SyncVarNetworkIdentityEqualZeroNetIdNullIsTrue" fullname="Mirror.Tests.NetworkBehaviourTests.SyncVarNetworkIdentityEqualZeroNetIdNullIsTrue" methodname="SyncVarNetworkIdentityEqualZeroNetIdNullIsTrue" classname="Mirror.Tests.NetworkBehaviourTests" runstate="Runnable" seed="161309478" result="Passed" start-time="2021-03-06 06:27:24Z" end-time="2021-03-06 06:27:24Z" duration="0.029920" asserts="0">
              <properties />
            </test-case>
          </test-suite>
          <test-suite type="TestFixture" id="4410" name="NetworkClientTests" fullname="Mirror.Tests.NetworkClientTests" classname="Mirror.Tests.NetworkClientTests" runstate="Runnable" testcasecount="5" result="Passed" start-time="2021-03-06 06:27:24Z" end-time="2021-03-06 06:27:24Z" duration="0.176210" total="5" passed="5" failed="0" inconclusive="0" skipped="0" asserts="0">
            <properties />
            <test-case id="4413" name="ConnectUri" fullname="Mirror.Tests.NetworkClientTests.ConnectUri" methodname="ConnectUri" classname="Mirror.Tests.NetworkClientTests" runstate="Runnable" seed="453987172" result="Passed" start-time="2021-03-06 06:27:24Z" end-time="2021-03-06 06:27:24Z" duration="0.031883" asserts="0">
              <properties />
              <output><![CDATA[Server started listening
MemoryTransport Client Message: Connected
MemoryTransport Server Message: Connected
MemoryTransport Server Message: Data: 7F-81-88-AE-55-CC-52-3A-33-40
Shutting down client.
]]></output>
            </test-case>
            <test-case id="4414" name="DisconnectInHostMode" fullname="Mirror.Tests.NetworkClientTests.DisconnectInHostMode" methodname="DisconnectInHostMode" classname="Mirror.Tests.NetworkClientTests" runstate="Runnable" seed="1056380829" result="Passed" start-time="2021-03-06 06:27:24Z" end-time="2021-03-06 06:27:24Z" duration="0.030369" asserts="0">
              <properties />
              <output><![CDATA[Server started listening
Shutting down client.
]]></output>
            </test-case>
            <test-case id="4412" name="isConnected" fullname="Mirror.Tests.NetworkClientTests.isConnected" methodname="isConnected" classname="Mirror.Tests.NetworkClientTests" runstate="Runnable" seed="112275916" result="Passed" start-time="2021-03-06 06:27:24Z" end-time="2021-03-06 06:27:24Z" duration="0.030620" asserts="0">
              <properties />
              <output><![CDATA[Server started listening
Shutting down client.
]]></output>
            </test-case>
            <test-case id="4415" name="Send" fullname="Mirror.Tests.NetworkClientTests.Send" methodname="Send" classname="Mirror.Tests.NetworkClientTests" runstate="Runnable" seed="1319516338" result="Passed" start-time="2021-03-06 06:27:24Z" end-time="2021-03-06 06:27:24Z" duration="0.038009" asserts="0">
              <properties />
              <output><![CDATA[Server started listening
MemoryTransport Client Message: Connected
MemoryTransport Server Message: Connected
MemoryTransport Server Message: Data: 1D-33
Shutting down client.
]]></output>
            </test-case>
            <test-case id="4411" name="serverIp" fullname="Mirror.Tests.NetworkClientTests.serverIp" methodname="serverIp" classname="Mirror.Tests.NetworkClientTests" runstate="Runnable" seed="1739513810" result="Passed" start-time="2021-03-06 06:27:24Z" end-time="2021-03-06 06:27:24Z" duration="0.030484" asserts="0">
              <properties />
              <output><![CDATA[Server started listening
Shutting down client.
]]></output>
            </test-case>
          </test-suite>
          <test-suite type="TestFixture" id="4416" name="NetworkConnectionToClientTests" fullname="Mirror.Tests.NetworkConnectionToClientTests" classname="Mirror.Tests.NetworkConnectionToClientTests" runstate="Runnable" testcasecount="4" result="Passed" start-time="2021-03-06 06:27:24Z" end-time="2021-03-06 06:27:24Z" duration="0.172447" total="4" passed="4" failed="0" inconclusive="0" skipped="0" asserts="0">
            <properties />
            <test-case id="4419" name="Send_BatchesUntilInterval" fullname="Mirror.Tests.NetworkConnectionToClientTests.Send_BatchesUntilInterval" methodname="Send_BatchesUntilInterval" classname="Mirror.Tests.NetworkConnectionToClientTests" runstate="Runnable" seed="1360687561" result="Passed" start-time="2021-03-06 06:27:24Z" end-time="2021-03-06 06:27:24Z" duration="0.044051" asserts="0">
              <properties />
              <output><![CDATA[MemoryTransport Server Message: Connected
OnServerConnected called with no handler
MemoryTransport Client Message: Connected
OnClientConnected called with no handler
MemoryTransport Client Message: Data: 01-02
]]></output>
            </test-case>
            <test-case id="4418" name="Send_BatchesUntilUpdate" fullname="Mirror.Tests.NetworkConnectionToClientTests.Send_BatchesUntilUpdate" methodname="Send_BatchesUntilUpdate" classname="Mirror.Tests.NetworkConnectionToClientTests" runstate="Runnable" seed="1725642454" result="Passed" start-time="2021-03-06 06:27:24Z" end-time="2021-03-06 06:27:24Z" duration="0.034204" asserts="0">
              <properties />
              <output><![CDATA[MemoryTransport Server Message: Connected
OnServerConnected called with no handler
MemoryTransport Client Message: Connected
OnClientConnected called with no handler
MemoryTransport Client Message: Data: 01-02
]]></output>
            </test-case>
            <test-case id="4417" name="Send_WithoutBatching_SendsImmediately" fullname="Mirror.Tests.NetworkConnectionToClientTests.Send_WithoutBatching_SendsImmediately" methodname="Send_WithoutBatching_SendsImmediately" classname="Mirror.Tests.NetworkConnectionToClientTests" runstate="Runnable" seed="1554077878" result="Passed" start-time="2021-03-06 06:27:24Z" end-time="2021-03-06 06:27:24Z" duration="0.038436" asserts="0">
              <properties />
              <output><![CDATA[MemoryTransport Server Message: Connected
OnServerConnected called with no handler
MemoryTransport Client Message: Connected
OnClientConnected called with no handler
MemoryTransport Client Message: Data: 01-02
]]></output>
            </test-case>
            <test-case id="4420" name="SendBatchingResetsPreviousWriter" fullname="Mirror.Tests.NetworkConnectionToClientTests.SendBatchingResetsPreviousWriter" methodname="SendBatchingResetsPreviousWriter" classname="Mirror.Tests.NetworkConnectionToClientTests" runstate="Runnable" seed="1203348829" result="Passed" start-time="2021-03-06 06:27:24Z" end-time="2021-03-06 06:27:24Z" duration="0.042080" asserts="0">
              <properties />
              <output><![CDATA[MemoryTransport Server Message: Connected
OnServerConnected called with no handler
MemoryTransport Client Message: Connected
OnClientConnected called with no handler
MemoryTransport Client Message: Data: 01-02
MemoryTransport Client Message: Data: FF
]]></output>
            </test-case>
          </test-suite>
          <test-suite type="TestFixture" id="4421" name="NetworkIdentityTests" fullname="Mirror.Tests.NetworkIdentityTests" classname="Mirror.Tests.NetworkIdentityTests" runstate="Runnable" testcasecount="35" result="Passed" start-time="2021-03-06 06:27:24Z" end-time="2021-03-06 06:27:25Z" duration="1.214324" total="35" passed="35" failed="0" inconclusive="0" skipped="0" asserts="0">
            <properties />
            <test-case id="4449" name="AddObserver" fullname="Mirror.Tests.NetworkIdentityTests.AddObserver" methodname="AddObserver" classname="Mirror.Tests.NetworkIdentityTests" runstate="Runnable" seed="1235413096" result="Passed" start-time="2021-03-06 06:27:24Z" end-time="2021-03-06 06:27:24Z" duration="0.022939" asserts="0">
              <properties />
              <output><![CDATA[AddObserver for New Game Object (UnityEngine.GameObject) observer list is null
]]></output>
            </test-case>
            <test-case id="4438" name="AssignAndRemoveClientAuthority" fullname="Mirror.Tests.NetworkIdentityTests.AssignAndRemoveClientAuthority" methodname="AssignAndRemoveClientAuthority" classname="Mirror.Tests.NetworkIdentityTests" runstate="Runnable" seed="1630044155" result="Passed" start-time="2021-03-06 06:27:24Z" end-time="2021-03-06 06:27:24Z" duration="0.046766" asserts="0">
              <properties />
              <output><![CDATA[AssignClientAuthority can only be called on the server for spawned objects.
Server started listening
AssignClientAuthority for New Game Object (UnityEngine.GameObject) already has an owner. Use RemoveClientAuthority() first.
AssignClientAuthority for New Game Object (UnityEngine.GameObject) owner cannot be null. Use RemoveClientAuthority() instead.
RemoveClientAuthority can only be called on the server for spawned objects.
RemoveClientAuthority cannot remove authority for a player object
]]></output>
            </test-case>
            <test-case id="4431" name="AssignSceneID" fullname="Mirror.Tests.NetworkIdentityTests.AssignSceneID" methodname="AssignSceneID" classname="Mirror.Tests.NetworkIdentityTests" runstate="Runnable" seed="1641477922" result="Passed" start-time="2021-03-06 06:27:24Z" end-time="2021-03-06 06:27:24Z" duration="0.030656" asserts="0">
              <properties />
            </test-case>
            <test-case id="4452" name="ClearAllComponentsDirtyBits" fullname="Mirror.Tests.NetworkIdentityTests.ClearAllComponentsDirtyBits" methodname="ClearAllComponentsDirtyBits" classname="Mirror.Tests.NetworkIdentityTests" runstate="Runnable" seed="964194929" result="Passed" start-time="2021-03-06 06:27:24Z" end-time="2021-03-06 06:27:24Z" duration="0.029515" asserts="0">
              <properties />
            </test-case>
            <test-case id="4451" name="ClearDirtyComponentsDirtyBits" fullname="Mirror.Tests.NetworkIdentityTests.ClearDirtyComponentsDirtyBits" methodname="ClearDirtyComponentsDirtyBits" classname="Mirror.Tests.NetworkIdentityTests" runstate="Runnable" seed="383941042" result="Passed" start-time="2021-03-06 06:27:24Z" end-time="2021-03-06 06:27:24Z" duration="0.030382" asserts="0">
              <properties />
            </test-case>
            <test-case id="4450" name="ClearObservers" fullname="Mirror.Tests.NetworkIdentityTests.ClearObservers" methodname="ClearObservers" classname="Mirror.Tests.NetworkIdentityTests" runstate="Runnable" seed="1403425207" result="Passed" start-time="2021-03-06 06:27:24Z" end-time="2021-03-06 06:27:24Z" duration="0.030507" asserts="0">
              <properties />
            </test-case>
            <test-case id="4443" name="CreatingNetworkBehavioursCacheShouldLogErrorForTooComponents" fullname="Mirror.Tests.NetworkIdentityTests.CreatingNetworkBehavioursCacheShouldLogErrorForTooComponents" methodname="CreatingNetworkBehavioursCacheShouldLogErrorForTooComponents" classname="Mirror.Tests.NetworkIdentityTests" runstate="Runnable" seed="95856223" result="Passed" start-time="2021-03-06 06:27:24Z" end-time="2021-03-06 06:27:24Z" duration="0.046931" asserts="0">
              <properties />
              <output><![CDATA[Only 255 NetworkBehaviour components are allowed for NetworkIdentity: New Game Object because we send the index as byte.
]]></output>
            </test-case>
            <test-case id="4425" name="GetSetAssetId" fullname="Mirror.Tests.NetworkIdentityTests.GetSetAssetId" methodname="GetSetAssetId" classname="Mirror.Tests.NetworkIdentityTests" runstate="Runnable" seed="1246255346" result="Passed" start-time="2021-03-06 06:27:24Z" end-time="2021-03-06 06:27:24Z" duration="0.037990" asserts="0">
              <properties />
            </test-case>
            <test-case id="4454" name="HandleCommand" fullname="Mirror.Tests.NetworkIdentityTests.HandleCommand" methodname="HandleCommand" classname="Mirror.Tests.NetworkIdentityTests" runstate="Runnable" seed="605332737" result="Passed" start-time="2021-03-06 06:27:24Z" end-time="2021-03-06 06:27:24Z" duration="0.026135" asserts="0">
              <properties />
              <output><![CDATA[Component [1] not found for [netId=0]
Found no receiver for incoming Command [-1116480643] on New Game Object, the server and client should have the same NetworkBehaviour instances [netId=0].
]]></output>
            </test-case>
            <test-case id="4455" name="HandleRpc" fullname="Mirror.Tests.NetworkIdentityTests.HandleRpc" methodname="HandleRpc" classname="Mirror.Tests.NetworkIdentityTests" runstate="Runnable" seed="2026675748" result="Passed" start-time="2021-03-06 06:27:24Z" end-time="2021-03-06 06:27:24Z" duration="0.030871" asserts="0">
              <properties />
              <output><![CDATA[Component [1] not found for [netId=0]
Found no receiver for incoming ClientRpc [-1367188039] on New Game Object, the server and client should have the same NetworkBehaviour instances [netId=0].
]]></output>
            </test-case>
            <test-case id="4424" name="HostMode_IsFlags_Test" fullname="Mirror.Tests.NetworkIdentityTests.HostMode_IsFlags_Test" methodname="HostMode_IsFlags_Test" classname="Mirror.Tests.NetworkIdentityTests" runstate="Runnable" seed="266738437" result="Passed" start-time="2021-03-06 06:27:24Z" end-time="2021-03-06 06:27:24Z" duration="0.033823" asserts="0">
              <properties />
              <output><![CDATA[Server started listening
No ready connection found for setting player controller during InternalAddPlayer
Shutting down client.
]]></output>
            </test-case>
            <test-case id="4439" name="NotifyAuthorityCallsOnStartStopAuthority" fullname="Mirror.Tests.NetworkIdentityTests.NotifyAuthorityCallsOnStartStopAuthority" methodname="NotifyAuthorityCallsOnStartStopAuthority" classname="Mirror.Tests.NetworkIdentityTests" runstate="Runnable" seed="402531440" result="Passed" start-time="2021-03-06 06:27:24Z" end-time="2021-03-06 06:27:24Z" duration="0.034766" asserts="0">
              <properties />
            </test-case>
            <test-case id="4444" name="OnDeserializeSafelyShouldDetectAndHandleDeSerializationMismatch" fullname="Mirror.Tests.NetworkIdentityTests.OnDeserializeSafelyShouldDetectAndHandleDeSerializationMismatch" methodname="OnDeserializeSafelyShouldDetectAndHandleDeSerializationMismatch" classname="Mirror.Tests.NetworkIdentityTests" runstate="Runnable" seed="158892233" result="Passed" start-time="2021-03-06 06:27:24Z" end-time="2021-03-06 06:27:24Z" duration="0.034006" asserts="0">
              <properties />
              <output><![CDATA[OnDeserialize was expected to read 8 instead of 4 bytes for object:New Game Object component=Mirror.Tests.NetworkIdentityTests+SerializeMismatchNetworkBehaviour sceneId=10FEFA36. Make sure that OnSerialize and OnDeserialize write/read the same amount of data in all cases.
]]></output>
            </test-case>
            <test-case id="4442" name="OnSerializeAllSafelyShouldNotLogErrorsForTooManyComponents" fullname="Mirror.Tests.NetworkIdentityTests.OnSerializeAllSafelyShouldNotLogErrorsForTooManyComponents" methodname="OnSerializeAllSafelyShouldNotLogErrorsForTooManyComponents" classname="Mirror.Tests.NetworkIdentityTests" runstate="Runnable" seed="440560078" result="Passed" start-time="2021-03-06 06:27:24Z" end-time="2021-03-06 06:27:25Z" duration="0.029518" asserts="0">
              <properties />
            </test-case>
            <test-case id="4441" name="OnSerializeAndDeserializeAllSafely" fullname="Mirror.Tests.NetworkIdentityTests.OnSerializeAndDeserializeAllSafely" methodname="OnSerializeAndDeserializeAllSafely" classname="Mirror.Tests.NetworkIdentityTests" runstate="Runnable" seed="1033360707" result="Passed" start-time="2021-03-06 06:27:25Z" end-time="2021-03-06 06:27:25Z" duration="0.038828" asserts="0">
              <properties />
              <output><![CDATA[OnSerialize failed for: object=New Game Object component=Mirror.Tests.NetworkIdentityTests+SerializeExceptionNetworkBehaviour sceneId=120DF9D

System.Exception: some exception
  at Mirror.Tests.NetworkIdentityTests+SerializeExceptionNetworkBehaviour.OnSerialize (Mirror.NetworkWriter writer, System.Boolean initialState) [0x00001] in /Users/qwerty/x/dev/project_Mirror/Repository/Assets/Mirror/Tests/Editor/NetworkIdentityTests.cs:156 
  at Mirror.NetworkIdentity.OnSerializeSafely (Mirror.NetworkBehaviour comp, Mirror.NetworkWriter writer, System.Boolean initialState) [0x0001a] in /Users/qwerty/x/dev/project_Mirror/Repository/Assets/Mirror/Runtime/NetworkIdentity.cs:943 
OnDeserialize failed Exception=System.Exception (see below) object=New Game Object component=Mirror.Tests.NetworkIdentityTests+SerializeExceptionNetworkBehaviour sceneId=120DF9D length=0. Possible Reasons:
  * Do Mirror.Tests.NetworkIdentityTests+SerializeExceptionNetworkBehaviour's OnSerialize and OnDeserialize calls write the same amount of data(0 bytes)? 
  * Was there an exception in Mirror.Tests.NetworkIdentityTests+SerializeExceptionNetworkBehaviour's OnSerialize/OnDeserialize code?
  * Are the server and client the exact same project?
  * Maybe this OnDeserialize call was meant for another GameObject? The sceneIds can easily get out of sync if the Hierarchy was modified only in the client OR the server. Try rebuilding both.

Exception System.Exception: some exception
  at Mirror.Tests.NetworkIdentityTests+SerializeExceptionNetworkBehaviour.OnDeserialize (Mirror.NetworkReader reader, System.Boolean initialState) [0x00001] in /Users/qwerty/x/dev/project_Mirror/Repository/Assets/Mirror/Tests/Editor/NetworkIdentityTests.cs:160 
  at Mirror.NetworkIdentity.OnDeserializeSafely (Mirror.NetworkBehaviour comp, Mirror.NetworkReader reader, System.Boolean initialState) [0x00019] in /Users/qwerty/x/dev/project_Mirror/Repository/Assets/Mirror/Runtime/NetworkIdentity.cs:1039 
OnDeserialize failed Exception=System.Exception (see below) object=New Game Object component=Mirror.Tests.NetworkIdentityTests+SerializeExceptionNetworkBehaviour sceneId=120DF9D length=0. Possible Reasons:
  * Do Mirror.Tests.NetworkIdentityTests+SerializeExceptionNetworkBehaviour's OnSerialize and OnDeserialize calls write the same amount of data(0 bytes)? 
  * Was there an exception in Mirror.Tests.NetworkIdentityTests+SerializeExceptionNetworkBehaviour's OnSerialize/OnDeserialize code?
  * Are the server and client the exact same project?
  * Maybe this OnDeserialize call was meant for another GameObject? The sceneIds can easily get out of sync if the Hierarchy was modified only in the client OR the server. Try rebuilding both.

Exception System.Exception: some exception
  at Mirror.Tests.NetworkIdentityTests+SerializeExceptionNetworkBehaviour.OnDeserialize (Mirror.NetworkReader reader, System.Boolean initialState) [0x00001] in /Users/qwerty/x/dev/project_Mirror/Repository/Assets/Mirror/Tests/Editor/NetworkIdentityTests.cs:160 
  at Mirror.NetworkIdentity.OnDeserializeSafely (Mirror.NetworkBehaviour comp, Mirror.NetworkReader reader, System.Boolean initialState) [0x00019] in /Users/qwerty/x/dev/project_Mirror/Repository/Assets/Mirror/Runtime/NetworkIdentity.cs:1039 
]]></output>
            </test-case>
            <test-case id="4436" name="OnStartAuthorityCallsComponentsAndCatchesExceptions" fullname="Mirror.Tests.NetworkIdentityTests.OnStartAuthorityCallsComponentsAndCatchesExceptions" methodname="OnStartAuthorityCallsComponentsAndCatchesExceptions" classname="Mirror.Tests.NetworkIdentityTests" runstate="Runnable" seed="2044302458" result="Passed" start-time="2021-03-06 06:27:25Z" end-time="2021-03-06 06:27:25Z" duration="0.024019" asserts="0">
              <properties />
              <output><![CDATA[Exception in OnStartAuthority:some exception   at Mirror.Tests.NetworkIdentityTests+StartAuthorityExceptionNetworkBehaviour.OnStartAuthority () [0x0000f] in /Users/qwerty/x/dev/project_Mirror/Repository/Assets/Mirror/Tests/Editor/NetworkIdentityTests.cs:50 
  at Mirror.NetworkIdentity.OnStartAuthority () [0x00013] in /Users/qwerty/x/dev/project_Mirror/Repository/Assets/Mirror/Runtime/NetworkIdentity.cs:854 
]]></output>
            </test-case>
            <test-case id="4435" name="OnStartClientCallsComponentsAndCatchesExceptions" fullname="Mirror.Tests.NetworkIdentityTests.OnStartClientCallsComponentsAndCatchesExceptions" methodname="OnStartClientCallsComponentsAndCatchesExceptions" classname="Mirror.Tests.NetworkIdentityTests" runstate="Runnable" seed="2106842589" result="Passed" start-time="2021-03-06 06:27:25Z" end-time="2021-03-06 06:27:25Z" duration="0.034011" asserts="0">
              <properties />
              <output><![CDATA[Exception in OnStartClient:some exception   at Mirror.Tests.NetworkIdentityTests+StartClientExceptionNetworkBehaviour.OnStartClient () [0x0000f] in /Users/qwerty/x/dev/project_Mirror/Repository/Assets/Mirror/Tests/Editor/NetworkIdentityTests.cs:40 
  at Mirror.NetworkIdentity.OnStartClient () [0x0002e] in /Users/qwerty/x/dev/project_Mirror/Repository/Assets/Mirror/Runtime/NetworkIdentity.cs:799 
]]></output>
            </test-case>
            <test-case id="4445" name="OnStartLocalPlayer" fullname="Mirror.Tests.NetworkIdentityTests.OnStartLocalPlayer" methodname="OnStartLocalPlayer" classname="Mirror.Tests.NetworkIdentityTests" runstate="Runnable" seed="33375221" result="Passed" start-time="2021-03-06 06:27:25Z" end-time="2021-03-06 06:27:25Z" duration="0.033677" asserts="0">
              <properties />
              <output><![CDATA[Exception in OnStartLocalPlayer:some exception   at Mirror.Tests.NetworkIdentityTests+StartLocalPlayerExceptionNetworkBehaviour.OnStartLocalPlayer () [0x0000f] in /Users/qwerty/x/dev/project_Mirror/Repository/Assets/Mirror/Tests/Editor/NetworkIdentityTests.cs:82 
  at Mirror.NetworkIdentity.OnStartLocalPlayer () [0x0002a] in /Users/qwerty/x/dev/project_Mirror/Repository/Assets/Mirror/Runtime/NetworkIdentity.cs:824 
]]></output>
            </test-case>
            <test-case id="4434" name="OnStartServerCallsComponentsAndCatchesExceptions" fullname="Mirror.Tests.NetworkIdentityTests.OnStartServerCallsComponentsAndCatchesExceptions" methodname="OnStartServerCallsComponentsAndCatchesExceptions" classname="Mirror.Tests.NetworkIdentityTests" runstate="Runnable" seed="80205864" result="Passed" start-time="2021-03-06 06:27:25Z" end-time="2021-03-06 06:27:25Z" duration="0.029602" asserts="0">
              <properties />
              <output><![CDATA[Exception in OnStartServer:some exception   at Mirror.Tests.NetworkIdentityTests+StartServerExceptionNetworkBehaviour.OnStartServer () [0x0000f] in /Users/qwerty/x/dev/project_Mirror/Repository/Assets/Mirror/Tests/Editor/NetworkIdentityTests.cs:30 
  at Mirror.NetworkIdentity.OnStartServer () [0x0007c] in /Users/qwerty/x/dev/project_Mirror/Repository/Assets/Mirror/Runtime/NetworkIdentity.cs:750 
]]></output>
            </test-case>
            <test-case id="4440" name="OnStartServerInHostModeSetsIsClientTrue" fullname="Mirror.Tests.NetworkIdentityTests.OnStartServerInHostModeSetsIsClientTrue" methodname="OnStartServerInHostModeSetsIsClientTrue" classname="Mirror.Tests.NetworkIdentityTests" runstate="Runnable" seed="679390129" result="Passed" start-time="2021-03-06 06:27:25Z" end-time="2021-03-06 06:27:25Z" duration="0.038145" asserts="0">
              <properties />
            </test-case>
            <test-case id="4422" name="OnStartServerTest" fullname="Mirror.Tests.NetworkIdentityTests.OnStartServerTest" methodname="OnStartServerTest" classname="Mirror.Tests.NetworkIdentityTests" runstate="Runnable" seed="674165006" result="Passed" start-time="2021-03-06 06:27:25Z" end-time="2021-03-06 06:27:25Z" duration="0.026151" asserts="0">
              <properties />
            </test-case>
            <test-case id="4437" name="OnStopAuthorityCallsComponentsAndCatchesExceptions" fullname="Mirror.Tests.NetworkIdentityTests.OnStopAuthorityCallsComponentsAndCatchesExceptions" methodname="OnStopAuthorityCallsComponentsAndCatchesExceptions" classname="Mirror.Tests.NetworkIdentityTests" runstate="Runnable" seed="455990872" result="Passed" start-time="2021-03-06 06:27:25Z" end-time="2021-03-06 06:27:25Z" duration="0.030438" asserts="0">
              <properties />
              <output><![CDATA[Exception in OnStopAuthority:some exception   at Mirror.Tests.NetworkIdentityTests+StopAuthorityExceptionNetworkBehaviour.OnStopAuthority () [0x0000f] in /Users/qwerty/x/dev/project_Mirror/Repository/Assets/Mirror/Tests/Editor/NetworkIdentityTests.cs:66 
  at Mirror.NetworkIdentity.OnStopAuthority () [0x00013] in /Users/qwerty/x/dev/project_Mirror/Repository/Assets/Mirror/Runtime/NetworkIdentity.cs:874 
]]></output>
            </test-case>
            <test-case id="4446" name="OnStopClient" fullname="Mirror.Tests.NetworkIdentityTests.OnStopClient" methodname="OnStopClient" classname="Mirror.Tests.NetworkIdentityTests" runstate="Runnable" seed="1907328305" result="Passed" start-time="2021-03-06 06:27:25Z" end-time="2021-03-06 06:27:25Z" duration="0.033984" asserts="0">
              <properties />
              <output><![CDATA[Exception in OnStopClient:some exception   at Mirror.Tests.NetworkIdentityTests+NetworkDestroyExceptionNetworkBehaviour.OnStopClient () [0x0000f] in /Users/qwerty/x/dev/project_Mirror/Repository/Assets/Mirror/Tests/Editor/NetworkIdentityTests.cs:98 
  at Mirror.NetworkIdentity.OnStopClient () [0x00013] in /Users/qwerty/x/dev/project_Mirror/Repository/Assets/Mirror/Runtime/NetworkIdentity.cs:915 
]]></output>
            </test-case>
            <test-case id="4447" name="OnStopServer" fullname="Mirror.Tests.NetworkIdentityTests.OnStopServer" methodname="OnStopServer" classname="Mirror.Tests.NetworkIdentityTests" runstate="Runnable" seed="509922717" result="Passed" start-time="2021-03-06 06:27:25Z" end-time="2021-03-06 06:27:25Z" duration="0.029906" asserts="0">
              <properties />
            </test-case>
            <test-case id="4448" name="OnStopServerEx" fullname="Mirror.Tests.NetworkIdentityTests.OnStopServerEx" methodname="OnStopServerEx" classname="Mirror.Tests.NetworkIdentityTests" runstate="Runnable" seed="192421458" result="Passed" start-time="2021-03-06 06:27:25Z" end-time="2021-03-06 06:27:25Z" duration="0.030633" asserts="0">
              <properties />
              <output><![CDATA[Exception in OnStopServer:some exception   at Mirror.Tests.NetworkIdentityTests+StopServerExceptionNetworkBehaviour.OnStopServer () [0x0000f] in /Users/qwerty/x/dev/project_Mirror/Repository/Assets/Mirror/Tests/Editor/NetworkIdentityTests.cs:120 
  at Mirror.NetworkIdentity.OnStopServer () [0x00013] in /Users/qwerty/x/dev/project_Mirror/Repository/Assets/Mirror/Runtime/NetworkIdentity.cs:770 
]]></output>
            </test-case>
            <test-case id="4433" name="OnValidateSetupIDsSetsEmptyAssetIDForSceneObject" fullname="Mirror.Tests.NetworkIdentityTests.OnValidateSetupIDsSetsEmptyAssetIDForSceneObject" methodname="OnValidateSetupIDsSetsEmptyAssetIDForSceneObject" classname="Mirror.Tests.NetworkIdentityTests" runstate="Runnable" seed="158444842" result="Passed" start-time="2021-03-06 06:27:25Z" end-time="2021-03-06 06:27:25Z" duration="0.042330" asserts="0">
              <properties />
            </test-case>
            <test-case id="4430" name="RemoveObserverInternal" fullname="Mirror.Tests.NetworkIdentityTests.RemoveObserverInternal" methodname="RemoveObserverInternal" classname="Mirror.Tests.NetworkIdentityTests" runstate="Runnable" seed="1100420870" result="Passed" start-time="2021-03-06 06:27:25Z" end-time="2021-03-06 06:27:25Z" duration="0.022697" asserts="0">
              <properties />
            </test-case>
            <test-case id="4453" name="Reset" fullname="Mirror.Tests.NetworkIdentityTests.Reset" methodname="Reset" classname="Mirror.Tests.NetworkIdentityTests" runstate="Runnable" seed="359154690" result="Passed" start-time="2021-03-06 06:27:25Z" end-time="2021-03-06 06:27:25Z" duration="0.038589" asserts="0">
              <properties />
            </test-case>
            <test-case id="4423" name="ServerMode_IsFlags_Test" fullname="Mirror.Tests.NetworkIdentityTests.ServerMode_IsFlags_Test" methodname="ServerMode_IsFlags_Test" classname="Mirror.Tests.NetworkIdentityTests" runstate="Runnable" seed="1974679807" result="Passed" start-time="2021-03-06 06:27:25Z" end-time="2021-03-06 06:27:25Z" duration="0.027123" asserts="0">
              <properties />
              <output><![CDATA[Server started listening
]]></output>
            </test-case>
            <test-case id="4456" name="ServerUpdate" fullname="Mirror.Tests.NetworkIdentityTests.ServerUpdate" methodname="ServerUpdate" classname="Mirror.Tests.NetworkIdentityTests" runstate="Runnable" seed="100006572" result="Passed" start-time="2021-03-06 06:27:25Z" end-time="2021-03-06 06:27:25Z" duration="0.030585" asserts="0">
              <properties />
            </test-case>
            <test-case id="4428" name="SetAssetId_DoesNotGiveErrorIfBothOldAndNewAreEmpty" fullname="Mirror.Tests.NetworkIdentityTests.SetAssetId_DoesNotGiveErrorIfBothOldAndNewAreEmpty" methodname="SetAssetId_DoesNotGiveErrorIfBothOldAndNewAreEmpty" classname="Mirror.Tests.NetworkIdentityTests" runstate="Runnable" seed="974523884" result="Passed" start-time="2021-03-06 06:27:25Z" end-time="2021-03-06 06:27:25Z" duration="0.030649" asserts="0">
              <properties />
            </test-case>
            <test-case id="4427" name="SetAssetId_GivesErrorForEmptyGuid" fullname="Mirror.Tests.NetworkIdentityTests.SetAssetId_GivesErrorForEmptyGuid" methodname="SetAssetId_GivesErrorForEmptyGuid" classname="Mirror.Tests.NetworkIdentityTests" runstate="Runnable" seed="1251043998" result="Passed" start-time="2021-03-06 06:27:25Z" end-time="2021-03-06 06:27:25Z" duration="0.038659" asserts="0">
              <properties />
              <output><![CDATA[Can not set AssetId to empty guid on NetworkIdentity 'New Game Object', old assetId 'fcf5ae7e4f0b4c14b48d32aa71074a68'
]]></output>
            </test-case>
            <test-case id="4426" name="SetAssetId_GivesErrorIfOneExists" fullname="Mirror.Tests.NetworkIdentityTests.SetAssetId_GivesErrorIfOneExists" methodname="SetAssetId_GivesErrorIfOneExists" classname="Mirror.Tests.NetworkIdentityTests" runstate="Runnable" seed="1564791577" result="Passed" start-time="2021-03-06 06:27:25Z" end-time="2021-03-06 06:27:25Z" duration="0.030026" asserts="0">
              <properties />
              <output><![CDATA[Can not Set AssetId on NetworkIdentity 'New Game Object' because it already had an assetId, current assetId '14111dd5b6d74f4aac44456caa75a767', attempted new assetId '123becfafb65495b9097b2ea561d8835'
]]></output>
            </test-case>
            <test-case id="4429" name="SetClientOwner" fullname="Mirror.Tests.NetworkIdentityTests.SetClientOwner" methodname="SetClientOwner" classname="Mirror.Tests.NetworkIdentityTests" runstate="Runnable" seed="1582379919" result="Passed" start-time="2021-03-06 06:27:25Z" end-time="2021-03-06 06:27:25Z" duration="0.025895" asserts="0">
              <properties />
              <output><![CDATA[Object New Game Object (Mirror.NetworkIdentity) netId=0 already has an owner. Use RemoveClientAuthority() first
]]></output>
            </test-case>
            <test-case id="4432" name="SetSceneIdSceneHashPartInternal" fullname="Mirror.Tests.NetworkIdentityTests.SetSceneIdSceneHashPartInternal" methodname="SetSceneIdSceneHashPartInternal" classname="Mirror.Tests.NetworkIdentityTests" runstate="Runnable" seed="1893058497" result="Passed" start-time="2021-03-06 06:27:25Z" end-time="2021-03-06 06:27:25Z" duration="0.030578" asserts="0">
              <properties />
            </test-case>
          </test-suite>
          <test-suite type="TestFixture" id="4457" name="NetworkLoopTests" fullname="Mirror.Tests.NetworkLoopTests" classname="Mirror.Tests.NetworkLoopTests" runstate="Runnable" testcasecount="6" result="Passed" start-time="2021-03-06 06:27:25Z" end-time="2021-03-06 06:27:25Z" duration="0.112906" total="6" passed="6" failed="0" inconclusive="0" skipped="0" asserts="0">
            <properties />
            <test-case id="4458" name="AddToPlayerLoop_EarlyUpdate_Beginning" fullname="Mirror.Tests.NetworkLoopTests.AddToPlayerLoop_EarlyUpdate_Beginning" methodname="AddToPlayerLoop_EarlyUpdate_Beginning" classname="Mirror.Tests.NetworkLoopTests" runstate="Runnable" seed="1317768002" result="Passed" start-time="2021-03-06 06:27:25Z" end-time="2021-03-06 06:27:25Z" duration="0.015103" asserts="0">
              <properties />
            </test-case>
            <test-case id="4459" name="AddToPlayerLoop_EarlyUpdate_End" fullname="Mirror.Tests.NetworkLoopTests.AddToPlayerLoop_EarlyUpdate_End" methodname="AddToPlayerLoop_EarlyUpdate_End" classname="Mirror.Tests.NetworkLoopTests" runstate="Runnable" seed="1178043068" result="Passed" start-time="2021-03-06 06:27:25Z" end-time="2021-03-06 06:27:25Z" duration="0.018370" asserts="0">
              <properties />
            </test-case>
            <test-case id="4462" name="AddToPlayerLoop_PreLateUpdate_Beginning" fullname="Mirror.Tests.NetworkLoopTests.AddToPlayerLoop_PreLateUpdate_Beginning" methodname="AddToPlayerLoop_PreLateUpdate_Beginning" classname="Mirror.Tests.NetworkLoopTests" runstate="Runnable" seed="666573744" result="Passed" start-time="2021-03-06 06:27:25Z" end-time="2021-03-06 06:27:25Z" duration="0.014915" asserts="0">
              <properties />
            </test-case>
            <test-case id="4463" name="AddToPlayerLoop_PreLateUpdate_End" fullname="Mirror.Tests.NetworkLoopTests.AddToPlayerLoop_PreLateUpdate_End" methodname="AddToPlayerLoop_PreLateUpdate_End" classname="Mirror.Tests.NetworkLoopTests" runstate="Runnable" seed="1155074927" result="Passed" start-time="2021-03-06 06:27:25Z" end-time="2021-03-06 06:27:25Z" duration="0.023785" asserts="0">
              <properties />
            </test-case>
            <test-case id="4460" name="AddToPlayerLoop_Update_Beginning" fullname="Mirror.Tests.NetworkLoopTests.AddToPlayerLoop_Update_Beginning" methodname="AddToPlayerLoop_Update_Beginning" classname="Mirror.Tests.NetworkLoopTests" runstate="Runnable" seed="1095478010" result="Passed" start-time="2021-03-06 06:27:25Z" end-time="2021-03-06 06:27:25Z" duration="0.013463" asserts="0">
              <properties />
            </test-case>
            <test-case id="4461" name="AddToPlayerLoop_Update_End" fullname="Mirror.Tests.NetworkLoopTests.AddToPlayerLoop_Update_End" methodname="AddToPlayerLoop_Update_End" classname="Mirror.Tests.NetworkLoopTests" runstate="Runnable" seed="1555646331" result="Passed" start-time="2021-03-06 06:27:25Z" end-time="2021-03-06 06:27:25Z" duration="0.015048" asserts="0">
              <properties />
            </test-case>
          </test-suite>
          <test-suite type="TestFixture" id="4464" name="NetworkManagerStopHostOnServerDisconnectTest" fullname="Mirror.Tests.NetworkManagerStopHostOnServerDisconnectTest" classname="Mirror.Tests.NetworkManagerStopHostOnServerDisconnectTest" runstate="Runnable" testcasecount="1" result="Passed" start-time="2021-03-06 06:27:25Z" end-time="2021-03-06 06:27:25Z" duration="0.050572" total="1" passed="1" failed="0" inconclusive="0" skipped="0" asserts="0">
            <properties />
            <test-case id="4465" name="StopHostCallsOnServerDisconnectForHostClient" fullname="Mirror.Tests.NetworkManagerStopHostOnServerDisconnectTest.StopHostCallsOnServerDisconnectForHostClient" methodname="StopHostCallsOnServerDisconnectForHostClient" classname="Mirror.Tests.NetworkManagerStopHostOnServerDisconnectTest" runstate="Runnable" seed="628775838" result="Passed" start-time="2021-03-06 06:27:25Z" end-time="2021-03-06 06:27:25Z" duration="0.039951" asserts="0">
              <properties />
              <output><![CDATA[NetworkManager created singleton (DontDestroyOnLoad)
Server started listening
NetworkClient.RegisterHandler replacing handler for Mirror.ObjectDestroyMessage, id=54308. If replacement is intentional, use ReplaceHandler instead to avoid this warning.
NetworkClient.RegisterHandler replacing handler for Mirror.ObjectHideMessage, id=3662. If replacement is intentional, use ReplaceHandler instead to avoid this warning.
NetworkClient.RegisterHandler replacing handler for Mirror.NetworkPongMessage, id=10297. If replacement is intentional, use ReplaceHandler instead to avoid this warning.
NetworkClient.RegisterHandler replacing handler for Mirror.SpawnMessage, id=16484. If replacement is intentional, use ReplaceHandler instead to avoid this warning.
NetworkClient.RegisterHandler replacing handler for Mirror.ObjectSpawnStartedMessage, id=59786. If replacement is intentional, use ReplaceHandler instead to avoid this warning.
NetworkClient.RegisterHandler replacing handler for Mirror.ObjectSpawnFinishedMessage, id=34417. If replacement is intentional, use ReplaceHandler instead to avoid this warning.
NetworkClient.RegisterHandler replacing handler for Mirror.UpdateVarsMessage, id=16986. If replacement is intentional, use ReplaceHandler instead to avoid this warning.
NetworkClient.RegisterHandler replacing handler for Mirror.RpcMessage, id=33978. If replacement is intentional, use ReplaceHandler instead to avoid this warning.
Shutting down client.
]]></output>
            </test-case>
          </test-suite>
          <test-suite type="TestFixture" id="4466" name="NetworkManagerTest" fullname="Mirror.Tests.NetworkManagerTest" classname="Mirror.Tests.NetworkManagerTest" runstate="Runnable" testcasecount="10" result="Passed" start-time="2021-03-06 06:27:25Z" end-time="2021-03-06 06:27:26Z" duration="0.403822" total="10" passed="10" failed="0" inconclusive="0" skipped="0" asserts="0">
            <properties />
            <test-case id="4475" name="GetStartPositionTest" fullname="Mirror.Tests.NetworkManagerTest.GetStartPositionTest" methodname="GetStartPositionTest" classname="Mirror.Tests.NetworkManagerTest" runstate="Runnable" seed="520643471" result="Passed" start-time="2021-03-06 06:27:25Z" end-time="2021-03-06 06:27:25Z" duration="0.023637" asserts="0">
              <properties />
            </test-case>
            <test-case id="4473" name="RegisterStartPositionTest" fullname="Mirror.Tests.NetworkManagerTest.RegisterStartPositionTest" methodname="RegisterStartPositionTest" classname="Mirror.Tests.NetworkManagerTest" runstate="Runnable" seed="1912985101" result="Passed" start-time="2021-03-06 06:27:25Z" end-time="2021-03-06 06:27:25Z" duration="0.030015" asserts="0">
              <properties />
            </test-case>
            <test-case id="4472" name="ShutdownTest" fullname="Mirror.Tests.NetworkManagerTest.ShutdownTest" methodname="ShutdownTest" classname="Mirror.Tests.NetworkManagerTest" runstate="Runnable" seed="869182847" result="Passed" start-time="2021-03-06 06:27:25Z" end-time="2021-03-06 06:27:26Z" duration="0.034705" asserts="0">
              <properties />
              <output><![CDATA[NetworkManager created singleton (DontDestroyOnLoad)
Shutting down client.
]]></output>
            </test-case>
            <test-case id="4470" name="StartClientTest" fullname="Mirror.Tests.NetworkManagerTest.StartClientTest" methodname="StartClientTest" classname="Mirror.Tests.NetworkManagerTest" runstate="Runnable" seed="2121844026" result="Passed" start-time="2021-03-06 06:27:26Z" end-time="2021-03-06 06:27:26Z" duration="0.030490" asserts="0">
              <properties />
              <output><![CDATA[NetworkManager created singleton (DontDestroyOnLoad)
Shutting down client.
]]></output>
            </test-case>
            <test-case id="4476" name="StartClientUriTest" fullname="Mirror.Tests.NetworkManagerTest.StartClientUriTest" methodname="StartClientUriTest" classname="Mirror.Tests.NetworkManagerTest" runstate="Runnable" seed="2081742994" result="Passed" start-time="2021-03-06 06:27:26Z" end-time="2021-03-06 06:27:26Z" duration="0.034944" asserts="0">
              <properties />
              <output><![CDATA[NetworkManager created singleton (DontDestroyOnLoad)
]]></output>
            </test-case>
            <test-case id="4468" name="StartServerTest" fullname="Mirror.Tests.NetworkManagerTest.StartServerTest" methodname="StartServerTest" classname="Mirror.Tests.NetworkManagerTest" runstate="Runnable" seed="1296710419" result="Passed" start-time="2021-03-06 06:27:26Z" end-time="2021-03-06 06:27:26Z" duration="0.033970" asserts="0">
              <properties />
              <output><![CDATA[NetworkManager created singleton (DontDestroyOnLoad)
Server started listening
]]></output>
            </test-case>
            <test-case id="4471" name="StopClientTest" fullname="Mirror.Tests.NetworkManagerTest.StopClientTest" methodname="StopClientTest" classname="Mirror.Tests.NetworkManagerTest" runstate="Runnable" seed="259952174" result="Passed" start-time="2021-03-06 06:27:26Z" end-time="2021-03-06 06:27:26Z" duration="0.099054" asserts="0">
              <properties />
              <output><![CDATA[Client already started.
Shutting down client.
]]></output>
            </test-case>
            <test-case id="4469" name="StopServerTest" fullname="Mirror.Tests.NetworkManagerTest.StopServerTest" methodname="StopServerTest" classname="Mirror.Tests.NetworkManagerTest" runstate="Runnable" seed="1906926905" result="Passed" start-time="2021-03-06 06:27:26Z" end-time="2021-03-06 06:27:26Z" duration="0.030401" asserts="0">
              <properties />
              <output><![CDATA[Server already started.
]]></output>
            </test-case>
            <test-case id="4474" name="UnRegisterStartPositionTest" fullname="Mirror.Tests.NetworkManagerTest.UnRegisterStartPositionTest" methodname="UnRegisterStartPositionTest" classname="Mirror.Tests.NetworkManagerTest" runstate="Runnable" seed="1873247428" result="Passed" start-time="2021-03-06 06:27:26Z" end-time="2021-03-06 06:27:26Z" duration="0.034760" asserts="0">
              <properties />
            </test-case>
            <test-case id="4467" name="VariableTest" fullname="Mirror.Tests.NetworkManagerTest.VariableTest" methodname="VariableTest" classname="Mirror.Tests.NetworkManagerTest" runstate="Runnable" seed="908477977" result="Passed" start-time="2021-03-06 06:27:26Z" end-time="2021-03-06 06:27:26Z" duration="0.029972" asserts="0">
              <properties />
            </test-case>
          </test-suite>
          <test-suite type="TestFixture" id="4477" name="NetworkMatchCheckerTest" fullname="Mirror.Tests.NetworkMatchCheckerTest" classname="Mirror.Tests.NetworkMatchCheckerTest" runstate="Runnable" testcasecount="7" result="Passed" start-time="2021-03-06 06:27:26Z" end-time="2021-03-06 06:27:26Z" duration="0.230662" total="7" passed="7" failed="0" inconclusive="0" skipped="0" asserts="0">
            <properties />
            <test-case id="4483" name="ChangingMatchIdShouldRebuildObservers" fullname="Mirror.Tests.NetworkMatchCheckerTest.ChangingMatchIdShouldRebuildObservers" methodname="ChangingMatchIdShouldRebuildObservers" classname="Mirror.Tests.NetworkMatchCheckerTest" runstate="Runnable" seed="166369357" result="Passed" start-time="2021-03-06 06:27:26Z" end-time="2021-03-06 06:27:26Z" duration="0.023343" asserts="0">
              <properties />
            </test-case>
            <test-case id="4484" name="ClearingMatchIdShouldRebuildObservers" fullname="Mirror.Tests.NetworkMatchCheckerTest.ClearingMatchIdShouldRebuildObservers" methodname="ClearingMatchIdShouldRebuildObservers" classname="Mirror.Tests.NetworkMatchCheckerTest" runstate="Runnable" seed="2128648763" result="Passed" start-time="2021-03-06 06:27:26Z" end-time="2021-03-06 06:27:26Z" duration="0.030580" asserts="0">
              <properties />
            </test-case>
            <test-case id="4479" name="OnCheckObserverShouldBeFalseForDifferentMatchId" fullname="Mirror.Tests.NetworkMatchCheckerTest.OnCheckObserverShouldBeFalseForDifferentMatchId" methodname="OnCheckObserverShouldBeFalseForDifferentMatchId" classname="Mirror.Tests.NetworkMatchCheckerTest" runstate="Runnable" seed="654108713" result="Passed" start-time="2021-03-06 06:27:26Z" end-time="2021-03-06 06:27:26Z" duration="0.034224" asserts="0">
              <properties />
            </test-case>
            <test-case id="4481" name="OnCheckObserverShouldBeFalseForEmptyGuid" fullname="Mirror.Tests.NetworkMatchCheckerTest.OnCheckObserverShouldBeFalseForEmptyGuid" methodname="OnCheckObserverShouldBeFalseForEmptyGuid" classname="Mirror.Tests.NetworkMatchCheckerTest" runstate="Runnable" seed="2087305438" result="Passed" start-time="2021-03-06 06:27:26Z" end-time="2021-03-06 06:27:26Z" duration="0.034020" asserts="0">
              <properties />
            </test-case>
            <test-case id="4480" name="OnCheckObserverShouldBeFalseIfObjectDoesNotHaveNetworkMatchChecker" fullname="Mirror.Tests.NetworkMatchCheckerTest.OnCheckObserverShouldBeFalseIfObjectDoesNotHaveNetworkMatchChecker" methodname="OnCheckObserverShouldBeFalseIfObjectDoesNotHaveNetworkMatchChecker" classname="Mirror.Tests.NetworkMatchCheckerTest" runstate="Runnable" seed="1824472978" result="Passed" start-time="2021-03-06 06:27:26Z" end-time="2021-03-06 06:27:26Z" duration="0.030642" asserts="0">
              <properties />
            </test-case>
            <test-case id="4478" name="OnCheckObserverShouldBeTrueForSameMatchId" fullname="Mirror.Tests.NetworkMatchCheckerTest.OnCheckObserverShouldBeTrueForSameMatchId" methodname="OnCheckObserverShouldBeTrueForSameMatchId" classname="Mirror.Tests.NetworkMatchCheckerTest" runstate="Runnable" seed="1939600541" result="Passed" start-time="2021-03-06 06:27:26Z" end-time="2021-03-06 06:27:26Z" duration="0.029295" asserts="0">
              <properties />
            </test-case>
            <test-case id="4482" name="SettingMatchIdShouldRebuildObservers" fullname="Mirror.Tests.NetworkMatchCheckerTest.SettingMatchIdShouldRebuildObservers" methodname="SettingMatchIdShouldRebuildObservers" classname="Mirror.Tests.NetworkMatchCheckerTest" runstate="Runnable" seed="1776819651" result="Passed" start-time="2021-03-06 06:27:26Z" end-time="2021-03-06 06:27:26Z" duration="0.030707" asserts="0">
              <properties />
            </test-case>
          </test-suite>
          <test-suite type="TestFixture" id="4485" name="NetworkReaderPoolTest" fullname="Mirror.Tests.NetworkReaderPoolTest" classname="Mirror.Tests.NetworkReaderPoolTest" runstate="Runnable" testcasecount="1" result="Passed" start-time="2021-03-06 06:27:26Z" end-time="2021-03-06 06:27:26Z" duration="0.006377" total="1" passed="1" failed="0" inconclusive="0" skipped="0" asserts="0">
            <properties />
            <test-case id="4486" name="TestPoolRecycling" fullname="Mirror.Tests.NetworkReaderPoolTest.TestPoolRecycling" methodname="TestPoolRecycling" classname="Mirror.Tests.NetworkReaderPoolTest" runstate="Runnable" seed="760058919" result="Passed" start-time="2021-03-06 06:27:26Z" end-time="2021-03-06 06:27:26Z" duration="0.000814" asserts="0">
              <properties />
            </test-case>
          </test-suite>
          <test-suite type="TestFixture" id="4487" name="NetworkReaderTest" fullname="Mirror.Tests.NetworkReaderTest" classname="Mirror.Tests.NetworkReaderTest" runstate="Runnable" testcasecount="1" result="Passed" start-time="2021-03-06 06:27:26Z" end-time="2021-03-06 06:27:26Z" duration="0.011659" total="1" passed="1" failed="0" inconclusive="0" skipped="0" asserts="0">
            <properties />
            <test-case id="4488" name="ReadBytesCountTooBigTest" fullname="Mirror.Tests.NetworkReaderTest.ReadBytesCountTooBigTest" methodname="ReadBytesCountTooBigTest" classname="Mirror.Tests.NetworkReaderTest" runstate="Runnable" seed="594826095" result="Passed" start-time="2021-03-06 06:27:26Z" end-time="2021-03-06 06:27:26Z" duration="0.001117" asserts="0">
              <properties />
            </test-case>
          </test-suite>
          <test-suite type="TestFixture" id="4489" name="NetworkReaderWriterTest" fullname="Mirror.Tests.NetworkReaderWriterTest" classname="Mirror.Tests.NetworkReaderWriterTest" runstate="Runnable" testcasecount="3" result="Passed" start-time="2021-03-06 06:27:26Z" end-time="2021-03-06 06:27:26Z" duration="0.022822" total="3" passed="3" failed="0" inconclusive="0" skipped="0" asserts="0">
            <properties />
            <test-case id="4492" name="TestAccessingCustomWriterAndReader" fullname="Mirror.Tests.NetworkReaderWriterTest.TestAccessingCustomWriterAndReader" methodname="TestAccessingCustomWriterAndReader" classname="Mirror.Tests.NetworkReaderWriterTest" runstate="Runnable" seed="1780193057" result="Passed" start-time="2021-03-06 06:27:26Z" end-time="2021-03-06 06:27:26Z" duration="0.000870" asserts="0">
              <properties />
            </test-case>
            <test-case id="4491" name="TestIntReaderNotNull" fullname="Mirror.Tests.NetworkReaderWriterTest.TestIntReaderNotNull" methodname="TestIntReaderNotNull" classname="Mirror.Tests.NetworkReaderWriterTest" runstate="Runnable" seed="209284334" result="Passed" start-time="2021-03-06 06:27:26Z" end-time="2021-03-06 06:27:26Z" duration="0.000714" asserts="0">
              <properties />
            </test-case>
            <test-case id="4490" name="TestIntWriterNotNull" fullname="Mirror.Tests.NetworkReaderWriterTest.TestIntWriterNotNull" methodname="TestIntWriterNotNull" classname="Mirror.Tests.NetworkReaderWriterTest" runstate="Runnable" seed="1191873230" result="Passed" start-time="2021-03-06 06:27:26Z" end-time="2021-03-06 06:27:26Z" duration="0.000819" asserts="0">
              <properties />
            </test-case>
          </test-suite>
          <test-suite type="TestFixture" id="4493" name="NetworkServerTest" fullname="Mirror.Tests.NetworkServerTest" classname="Mirror.Tests.NetworkServerTest" runstate="Runnable" testcasecount="40" result="Passed" start-time="2021-03-06 06:27:26Z" end-time="2021-03-06 06:27:28Z" duration="1.374584" total="40" passed="40" failed="0" inconclusive="0" skipped="0" asserts="0">
            <properties />
            <test-case id="4514" name="ActivateHostSceneCallsOnStartClient" fullname="Mirror.Tests.NetworkServerTest.ActivateHostSceneCallsOnStartClient" methodname="ActivateHostSceneCallsOnStartClient" classname="Mirror.Tests.NetworkServerTest" runstate="Runnable" seed="1744881090" result="Passed" start-time="2021-03-06 06:27:26Z" end-time="2021-03-06 06:27:26Z" duration="0.022688" asserts="0">
              <properties />
            </test-case>
            <test-case id="4504" name="AddConnectionTest" fullname="Mirror.Tests.NetworkServerTest.AddConnectionTest" methodname="AddConnectionTest" classname="Mirror.Tests.NetworkServerTest" runstate="Runnable" seed="1263082623" result="Passed" start-time="2021-03-06 06:27:26Z" end-time="2021-03-06 06:27:26Z" duration="0.034602" asserts="0">
              <properties />
              <output><![CDATA[Server started listening
OnServerDisconnect: Client disconnected.
OnServerDisconnect: Client disconnected.
]]></output>
            </test-case>
            <test-case id="4513" name="CommandMessageCallsCommandTest" fullname="Mirror.Tests.NetworkServerTest.CommandMessageCallsCommandTest" methodname="CommandMessageCallsCommandTest" classname="Mirror.Tests.NetworkServerTest" runstate="Runnable" seed="1689322794" result="Passed" start-time="2021-03-06 06:27:26Z" end-time="2021-03-06 06:27:26Z" duration="0.034365" asserts="0">
              <properties />
              <output><![CDATA[Server started listening
Command for object without authority [netId=42]
Spawned object not found when handling Command message [netId=43]
]]></output>
            </test-case>
            <test-case id="4500" name="ConnectDuplicateConnectionIdsTest" fullname="Mirror.Tests.NetworkServerTest.ConnectDuplicateConnectionIdsTest" methodname="ConnectDuplicateConnectionIdsTest" classname="Mirror.Tests.NetworkServerTest" runstate="Runnable" seed="608941659" result="Passed" start-time="2021-03-06 06:27:26Z" end-time="2021-03-06 06:27:26Z" duration="0.034721" asserts="0">
              <properties />
              <output><![CDATA[Server started listening
OnServerDisconnect: Client disconnected.
]]></output>
            </test-case>
            <test-case id="4498" name="ConnectionsDictTest" fullname="Mirror.Tests.NetworkServerTest.ConnectionsDictTest" methodname="ConnectionsDictTest" classname="Mirror.Tests.NetworkServerTest" runstate="Runnable" seed="154675478" result="Passed" start-time="2021-03-06 06:27:26Z" end-time="2021-03-06 06:27:26Z" duration="0.030382" asserts="0">
              <properties />
              <output><![CDATA[Server started listening
OnServerDisconnect: Client disconnected.
OnServerDisconnect: Client disconnected.
]]></output>
            </test-case>
            <test-case id="4496" name="ConnectMessageHandlerTest" fullname="Mirror.Tests.NetworkServerTest.ConnectMessageHandlerTest" methodname="ConnectMessageHandlerTest" classname="Mirror.Tests.NetworkServerTest" runstate="Runnable" seed="138921322" result="Passed" start-time="2021-03-06 06:27:26Z" end-time="2021-03-06 06:27:26Z" duration="0.034975" asserts="0">
              <properties />
              <output><![CDATA[Server started listening
OnServerDisconnect: Client disconnected.
]]></output>
            </test-case>
            <test-case id="4506" name="DisconnectAllConnectionsTest" fullname="Mirror.Tests.NetworkServerTest.DisconnectAllConnectionsTest" methodname="DisconnectAllConnectionsTest" classname="Mirror.Tests.NetworkServerTest" runstate="Runnable" seed="2109866975" result="Passed" start-time="2021-03-06 06:27:26Z" end-time="2021-03-06 06:27:26Z" duration="0.034033" asserts="0">
              <properties />
              <output><![CDATA[Server started listening
OnServerDisconnect: Client disconnected.
]]></output>
            </test-case>
            <test-case id="4507" name="DisconnectAllTest" fullname="Mirror.Tests.NetworkServerTest.DisconnectAllTest" methodname="DisconnectAllTest" classname="Mirror.Tests.NetworkServerTest" runstate="Runnable" seed="1608861108" result="Passed" start-time="2021-03-06 06:27:26Z" end-time="2021-03-06 06:27:26Z" duration="0.029857" asserts="0">
              <properties />
              <output><![CDATA[Server started listening
OnServerDisconnect: Client disconnected.
]]></output>
            </test-case>
            <test-case id="4497" name="DisconnectMessageHandlerTest" fullname="Mirror.Tests.NetworkServerTest.DisconnectMessageHandlerTest" methodname="DisconnectMessageHandlerTest" classname="Mirror.Tests.NetworkServerTest" runstate="Runnable" seed="1574269951" result="Passed" start-time="2021-03-06 06:27:26Z" end-time="2021-03-06 06:27:26Z" duration="0.035221" asserts="0">
              <properties />
              <output><![CDATA[Server started listening
]]></output>
            </test-case>
            <test-case id="4519" name="GetNetworkIdentityErrorIfNotFound" fullname="Mirror.Tests.NetworkServerTest.GetNetworkIdentityErrorIfNotFound" methodname="GetNetworkIdentityErrorIfNotFound" classname="Mirror.Tests.NetworkServerTest" runstate="Runnable" seed="1302856150" result="Passed" start-time="2021-03-06 06:27:26Z" end-time="2021-03-06 06:27:26Z" duration="0.030264" asserts="0">
              <properties />
              <output><![CDATA[GameObject Another Name doesn't have NetworkIdentity.
]]></output>
            </test-case>
            <test-case id="4518" name="GetNetworkIdentityShouldFindNetworkIdentity" fullname="Mirror.Tests.NetworkServerTest.GetNetworkIdentityShouldFindNetworkIdentity" methodname="GetNetworkIdentityShouldFindNetworkIdentity" classname="Mirror.Tests.NetworkServerTest" runstate="Runnable" seed="1101331758" result="Passed" start-time="2021-03-06 06:27:26Z" end-time="2021-03-06 06:27:27Z" duration="0.030849" asserts="0">
              <properties />
            </test-case>
            <test-case id="4521" name="HideForConnection" fullname="Mirror.Tests.NetworkServerTest.HideForConnection" methodname="HideForConnection" classname="Mirror.Tests.NetworkServerTest" runstate="Runnable" seed="1744819535" result="Passed" start-time="2021-03-06 06:27:27Z" end-time="2021-03-06 06:27:27Z" duration="0.034467" asserts="0">
              <properties />
              <output><![CDATA[Server started listening
]]></output>
            </test-case>
            <test-case id="4494" name="IsActiveTest" fullname="Mirror.Tests.NetworkServerTest.IsActiveTest" methodname="IsActiveTest" classname="Mirror.Tests.NetworkServerTest" runstate="Runnable" seed="2089879235" result="Passed" start-time="2021-03-06 06:27:27Z" end-time="2021-03-06 06:27:27Z" duration="0.030595" asserts="0">
              <properties />
              <output><![CDATA[Server started listening
]]></output>
            </test-case>
            <test-case id="4503" name="LocalClientActiveTest" fullname="Mirror.Tests.NetworkServerTest.LocalClientActiveTest" methodname="LocalClientActiveTest" classname="Mirror.Tests.NetworkServerTest" runstate="Runnable" seed="986605694" result="Passed" start-time="2021-03-06 06:27:27Z" end-time="2021-03-06 06:27:27Z" duration="0.030932" asserts="0">
              <properties />
              <output><![CDATA[Server started listening
]]></output>
            </test-case>
            <test-case id="4495" name="MaxConnectionsTest" fullname="Mirror.Tests.NetworkServerTest.MaxConnectionsTest" methodname="MaxConnectionsTest" classname="Mirror.Tests.NetworkServerTest" runstate="Runnable" seed="321696282" result="Passed" start-time="2021-03-06 06:27:27Z" end-time="2021-03-06 06:27:27Z" duration="0.034095" asserts="0">
              <properties />
              <output><![CDATA[Server started listening
]]></output>
            </test-case>
            <test-case id="4530" name="NoConnectionsTest_WithConnections" fullname="Mirror.Tests.NetworkServerTest.NoConnectionsTest_WithConnections" methodname="NoConnectionsTest_WithConnections" classname="Mirror.Tests.NetworkServerTest" runstate="Runnable" seed="330878859" result="Passed" start-time="2021-03-06 06:27:27Z" end-time="2021-03-06 06:27:27Z" duration="0.030924" asserts="0">
              <properties />
            </test-case>
            <test-case id="4532" name="NoConnectionsTest_WithHostAndConnection" fullname="Mirror.Tests.NetworkServerTest.NoConnectionsTest_WithHostAndConnection" methodname="NoConnectionsTest_WithHostAndConnection" classname="Mirror.Tests.NetworkServerTest" runstate="Runnable" seed="588452486" result="Passed" start-time="2021-03-06 06:27:27Z" end-time="2021-03-06 06:27:27Z" duration="0.030158" asserts="0">
              <properties />
            </test-case>
            <test-case id="4531" name="NoConnectionsTest_WithHostOnly" fullname="Mirror.Tests.NetworkServerTest.NoConnectionsTest_WithHostOnly" methodname="NoConnectionsTest_WithHostOnly" classname="Mirror.Tests.NetworkServerTest" runstate="Runnable" seed="751796874" result="Passed" start-time="2021-03-06 06:27:27Z" end-time="2021-03-06 06:27:27Z" duration="0.029763" asserts="0">
              <properties />
            </test-case>
            <test-case id="4529" name="NoConnectionsTest_WithNoConnection" fullname="Mirror.Tests.NetworkServerTest.NoConnectionsTest_WithNoConnection" methodname="NoConnectionsTest_WithNoConnection" classname="Mirror.Tests.NetworkServerTest" runstate="Runnable" seed="1478992067" result="Passed" start-time="2021-03-06 06:27:27Z" end-time="2021-03-06 06:27:27Z" duration="0.034201" asserts="0">
              <properties />
            </test-case>
            <test-case id="4499" name="OnConnectedOnlyAllowsNonZeroConnectionIdsTest" fullname="Mirror.Tests.NetworkServerTest.OnConnectedOnlyAllowsNonZeroConnectionIdsTest" methodname="OnConnectedOnlyAllowsNonZeroConnectionIdsTest" classname="Mirror.Tests.NetworkServerTest" runstate="Runnable" seed="1672111802" result="Passed" start-time="2021-03-06 06:27:27Z" end-time="2021-03-06 06:27:27Z" duration="0.034879" asserts="0">
              <properties />
              <output><![CDATA[Server started listening
Server.HandleConnect: invalid connectionId: 0 . Needs to be != 0, because 0 is reserved for local player.
Server.HandleConnect: invalid connectionId: 0 . Needs to be != 0, because 0 is reserved for local player.
]]></output>
            </test-case>
            <test-case id="4509" name="OnDataReceivedInvalidConnectionIdTest" fullname="Mirror.Tests.NetworkServerTest.OnDataReceivedInvalidConnectionIdTest" methodname="OnDataReceivedInvalidConnectionIdTest" classname="Mirror.Tests.NetworkServerTest" runstate="Runnable" seed="1557197797" result="Passed" start-time="2021-03-06 06:27:27Z" end-time="2021-03-06 06:27:27Z" duration="0.032491" asserts="0">
              <properties />
              <output><![CDATA[Server started listening
HandleData Unknown connectionId:42
]]></output>
            </test-case>
            <test-case id="4508" name="OnDataReceivedTest" fullname="Mirror.Tests.NetworkServerTest.OnDataReceivedTest" methodname="OnDataReceivedTest" classname="Mirror.Tests.NetworkServerTest" runstate="Runnable" seed="1516560363" result="Passed" start-time="2021-03-06 06:27:27Z" end-time="2021-03-06 06:27:27Z" duration="0.030425" asserts="0">
              <properties />
              <output><![CDATA[Server started listening
]]></output>
            </test-case>
            <test-case id="4512" name="ReadyMessageSetsClientReadyTest" fullname="Mirror.Tests.NetworkServerTest.ReadyMessageSetsClientReadyTest" methodname="ReadyMessageSetsClientReadyTest" classname="Mirror.Tests.NetworkServerTest" runstate="Runnable" seed="331713090" result="Passed" start-time="2021-03-06 06:27:27Z" end-time="2021-03-06 06:27:27Z" duration="0.034627" asserts="0">
              <properties />
              <output><![CDATA[Server started listening
]]></output>
            </test-case>
            <test-case id="4516" name="RegisterUnregisterClearHandlerTest" fullname="Mirror.Tests.NetworkServerTest.RegisterUnregisterClearHandlerTest" methodname="RegisterUnregisterClearHandlerTest" classname="Mirror.Tests.NetworkServerTest" runstate="Runnable" seed="1637801276" result="Passed" start-time="2021-03-06 06:27:27Z" end-time="2021-03-06 06:27:27Z" duration="0.030762" asserts="0">
              <properties />
              <output><![CDATA[Server started listening
]]></output>
            </test-case>
            <test-case id="4505" name="RemoveConnectionTest" fullname="Mirror.Tests.NetworkServerTest.RemoveConnectionTest" methodname="RemoveConnectionTest" classname="Mirror.Tests.NetworkServerTest" runstate="Runnable" seed="2086968221" result="Passed" start-time="2021-03-06 06:27:27Z" end-time="2021-03-06 06:27:27Z" duration="0.038607" asserts="0">
              <properties />
              <output><![CDATA[Server started listening
]]></output>
            </test-case>
            <test-case id="4502" name="RemoveLocalConnectionTest" fullname="Mirror.Tests.NetworkServerTest.RemoveLocalConnectionTest" methodname="RemoveLocalConnectionTest" classname="Mirror.Tests.NetworkServerTest" runstate="Runnable" seed="886450398" result="Passed" start-time="2021-03-06 06:27:27Z" end-time="2021-03-06 06:27:27Z" duration="0.026807" asserts="0">
              <properties />
              <output><![CDATA[Server started listening
]]></output>
            </test-case>
            <test-suite type="ParameterizedMethod" id="4528" name="SendCalledWhileNotActive_ShouldGiveWarning" fullname="Mirror.Tests.NetworkServerTest.SendCalledWhileNotActive_ShouldGiveWarning" classname="Mirror.Tests.NetworkServerTest" runstate="Runnable" testcasecount="2" result="Passed" start-time="2021-03-06 06:27:27Z" end-time="2021-03-06 06:27:27Z" duration="0.063972" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
              <properties />
              <test-case id="4526" name="SendCalledWhileNotActive_ShouldGiveWarning(&quot;SendToAll&quot;)" fullname="Mirror.Tests.NetworkServerTest.SendCalledWhileNotActive_ShouldGiveWarning(&quot;SendToAll&quot;)" methodname="SendCalledWhileNotActive_ShouldGiveWarning" classname="Mirror.Tests.NetworkServerTest" runstate="Runnable" seed="1464312507" result="Passed" start-time="2021-03-06 06:27:27Z" end-time="2021-03-06 06:27:27Z" duration="0.023834" asserts="0">
                <properties />
                <output><![CDATA[Can not send using NetworkServer.SendToAll<T>(T msg) because NetworkServer is not active
]]></output>
              </test-case>
              <test-case id="4527" name="SendCalledWhileNotActive_ShouldGiveWarning(&quot;SendToReady&quot;)" fullname="Mirror.Tests.NetworkServerTest.SendCalledWhileNotActive_ShouldGiveWarning(&quot;SendToReady&quot;)" methodname="SendCalledWhileNotActive_ShouldGiveWarning" classname="Mirror.Tests.NetworkServerTest" runstate="Runnable" seed="66233717" result="Passed" start-time="2021-03-06 06:27:27Z" end-time="2021-03-06 06:27:27Z" duration="0.030086" asserts="0">
                <properties />
                <output><![CDATA[Can not send using NetworkServer.SendToReady<T>(T msg) because NetworkServer is not active
]]></output>
              </test-case>
            </test-suite>
            <test-case id="4515" name="SendToAllTest" fullname="Mirror.Tests.NetworkServerTest.SendToAllTest" methodname="SendToAllTest" classname="Mirror.Tests.NetworkServerTest" runstate="Runnable" seed="862438545" result="Passed" start-time="2021-03-06 06:27:27Z" end-time="2021-03-06 06:27:27Z" duration="0.032075" asserts="0">
              <properties />
              <output><![CDATA[Server started listening
]]></output>
            </test-case>
            <test-case id="4517" name="SendToClientOfPlayer" fullname="Mirror.Tests.NetworkServerTest.SendToClientOfPlayer" methodname="SendToClientOfPlayer" classname="Mirror.Tests.NetworkServerTest" runstate="Runnable" seed="786042681" result="Passed" start-time="2021-03-06 06:27:27Z" end-time="2021-03-06 06:27:27Z" duration="0.034985" asserts="0">
              <properties />
              <output><![CDATA[Server started listening
]]></output>
            </test-case>
            <test-case id="4511" name="SetAllClientsNotReadyTest" fullname="Mirror.Tests.NetworkServerTest.SetAllClientsNotReadyTest" methodname="SetAllClientsNotReadyTest" classname="Mirror.Tests.NetworkServerTest" runstate="Runnable" seed="293533086" result="Passed" start-time="2021-03-06 06:27:27Z" end-time="2021-03-06 06:27:27Z" duration="0.026199" asserts="0">
              <properties />
            </test-case>
            <test-case id="4510" name="SetClientReadyAndNotReadyTest" fullname="Mirror.Tests.NetworkServerTest.SetClientReadyAndNotReadyTest" methodname="SetClientReadyAndNotReadyTest" classname="Mirror.Tests.NetworkServerTest" runstate="Runnable" seed="1704809641" result="Passed" start-time="2021-03-06 06:27:27Z" end-time="2021-03-06 06:27:27Z" duration="0.034067" asserts="0">
              <properties />
            </test-case>
            <test-case id="4501" name="SetLocalConnectionTest" fullname="Mirror.Tests.NetworkServerTest.SetLocalConnectionTest" methodname="SetLocalConnectionTest" classname="Mirror.Tests.NetworkServerTest" runstate="Runnable" seed="958583585" result="Passed" start-time="2021-03-06 06:27:27Z" end-time="2021-03-06 06:27:27Z" duration="0.030652" asserts="0">
              <properties />
              <output><![CDATA[Server started listening
Local Connection already exists
]]></output>
            </test-case>
            <test-case id="4520" name="ShowForConnection" fullname="Mirror.Tests.NetworkServerTest.ShowForConnection" methodname="ShowForConnection" classname="Mirror.Tests.NetworkServerTest" runstate="Runnable" seed="178328517" result="Passed" start-time="2021-03-06 06:27:27Z" end-time="2021-03-06 06:27:27Z" duration="0.034591" asserts="0">
              <properties />
              <output><![CDATA[Server started listening
]]></output>
            </test-case>
            <test-case id="4525" name="ShutdownCleanupTest" fullname="Mirror.Tests.NetworkServerTest.ShutdownCleanupTest" methodname="ShutdownCleanupTest" classname="Mirror.Tests.NetworkServerTest" runstate="Runnable" seed="469953704" result="Passed" start-time="2021-03-06 06:27:27Z" end-time="2021-03-06 06:27:27Z" duration="0.030294" asserts="0">
              <properties />
              <output><![CDATA[Server started listening
]]></output>
            </test-case>
            <test-case id="4523" name="SpawnObjects" fullname="Mirror.Tests.NetworkServerTest.SpawnObjects" methodname="SpawnObjects" classname="Mirror.Tests.NetworkServerTest" runstate="Runnable" seed="7553346" result="Passed" start-time="2021-03-06 06:27:27Z" end-time="2021-03-06 06:27:27Z" duration="0.030666" asserts="0">
              <properties />
              <output><![CDATA[Server started listening
]]></output>
            </test-case>
            <test-case id="4524" name="UnSpawn" fullname="Mirror.Tests.NetworkServerTest.UnSpawn" methodname="UnSpawn" classname="Mirror.Tests.NetworkServerTest" runstate="Runnable" seed="2091959680" result="Passed" start-time="2021-03-06 06:27:27Z" end-time="2021-03-06 06:27:27Z" duration="0.035200" asserts="0">
              <properties />
            </test-case>
            <test-case id="4534" name="UpdateDetectsDestroyedEntryInSpawned" fullname="Mirror.Tests.NetworkServerTest.UpdateDetectsDestroyedEntryInSpawned" methodname="UpdateDetectsDestroyedEntryInSpawned" classname="Mirror.Tests.NetworkServerTest" runstate="Runnable" seed="1559657101" result="Passed" start-time="2021-03-06 06:27:27Z" end-time="2021-03-06 06:27:27Z" duration="0.034374" asserts="0">
              <properties />
              <output><![CDATA[Server started listening
Found 'null' entry in spawned list for netId=42. Please call NetworkServer.Destroy to destroy networked objects. Don't use GameObject.Destroy.
]]></output>
            </test-case>
            <test-case id="4533" name="UpdateDetectsNullEntryInSpawned" fullname="Mirror.Tests.NetworkServerTest.UpdateDetectsNullEntryInSpawned" methodname="UpdateDetectsNullEntryInSpawned" classname="Mirror.Tests.NetworkServerTest" runstate="Runnable" seed="923106176" result="Passed" start-time="2021-03-06 06:27:27Z" end-time="2021-03-06 06:27:27Z" duration="0.033435" asserts="0">
              <properties />
              <output><![CDATA[Server started listening
Found 'null' entry in spawned list for netId=42. Please call NetworkServer.Destroy to destroy networked objects. Don't use GameObject.Destroy.
]]></output>
            </test-case>
            <test-case id="4522" name="ValidateSceneObject" fullname="Mirror.Tests.NetworkServerTest.ValidateSceneObject" methodname="ValidateSceneObject" classname="Mirror.Tests.NetworkServerTest" runstate="Runnable" seed="426228466" result="Passed" start-time="2021-03-06 06:27:27Z" end-time="2021-03-06 06:27:28Z" duration="0.029999" asserts="0">
              <properties />
            </test-case>
          </test-suite>
          <test-suite type="TestFixture" id="4535" name="NetworkTransformChildTest" fullname="Mirror.Tests.NetworkTransformChildTest" classname="Mirror.Tests.NetworkTransformChildTest" runstate="Runnable" testcasecount="1" result="Passed" start-time="2021-03-06 06:27:28Z" end-time="2021-03-06 06:27:28Z" duration="0.009303" total="1" passed="1" failed="0" inconclusive="0" skipped="0" asserts="0">
            <properties />
            <test-case id="4536" name="TargetComponentTest" fullname="Mirror.Tests.NetworkTransformChildTest.TargetComponentTest" methodname="TargetComponentTest" classname="Mirror.Tests.NetworkTransformChildTest" runstate="Runnable" seed="901233337" result="Passed" start-time="2021-03-06 06:27:28Z" end-time="2021-03-06 06:27:28Z" duration="0.001779" asserts="0">
              <properties />
            </test-case>
          </test-suite>
          <test-suite type="TestFixture" id="4537" name="NetworkTransformTest" fullname="Mirror.Tests.NetworkTransformTest" classname="Mirror.Tests.NetworkTransformTest" runstate="Runnable" testcasecount="1" result="Passed" start-time="2021-03-06 06:27:28Z" end-time="2021-03-06 06:27:28Z" duration="0.013065" total="1" passed="1" failed="0" inconclusive="0" skipped="0" asserts="0">
            <properties />
            <test-case id="4538" name="SerializeIntoWriterTest" fullname="Mirror.Tests.NetworkTransformTest.SerializeIntoWriterTest" methodname="SerializeIntoWriterTest" classname="Mirror.Tests.NetworkTransformTest" runstate="Runnable" seed="418962724" result="Passed" start-time="2021-03-06 06:27:28Z" end-time="2021-03-06 06:27:28Z" duration="0.001507" asserts="0">
              <properties />
            </test-case>
          </test-suite>
          <test-suite type="TestFixture" id="4539" name="NetworkWriterCollectionTest" fullname="Mirror.Tests.NetworkWriterCollectionTest" classname="Mirror.Tests.NetworkWriterCollectionTest" runstate="Runnable" testcasecount="6" result="Passed" start-time="2021-03-06 06:27:28Z" end-time="2021-03-06 06:27:28Z" duration="0.023477" total="6" passed="6" failed="0" inconclusive="0" skipped="0" asserts="0">
            <properties />
            <test-case id="4541" name="HasReadFunctionForInt" fullname="Mirror.Tests.NetworkWriterCollectionTest.HasReadFunctionForInt" methodname="HasReadFunctionForInt" classname="Mirror.Tests.NetworkWriterCollectionTest" runstate="Runnable" seed="1615982007" result="Passed" start-time="2021-03-06 06:27:28Z" end-time="2021-03-06 06:27:28Z" duration="0.001051" asserts="0">
              <properties />
            </test-case>
            <test-case id="4545" name="HasReadNetworkBehaviourDerivedFunction" fullname="Mirror.Tests.NetworkWriterCollectionTest.HasReadNetworkBehaviourDerivedFunction" methodname="HasReadNetworkBehaviourDerivedFunction" classname="Mirror.Tests.NetworkWriterCollectionTest" runstate="Runnable" seed="1474254124" result="Passed" start-time="2021-03-06 06:27:28Z" end-time="2021-03-06 06:27:28Z" duration="0.000870" asserts="0">
              <properties />
            </test-case>
            <test-case id="4543" name="HasReadNetworkBehaviourFunction" fullname="Mirror.Tests.NetworkWriterCollectionTest.HasReadNetworkBehaviourFunction" methodname="HasReadNetworkBehaviourFunction" classname="Mirror.Tests.NetworkWriterCollectionTest" runstate="Runnable" seed="1167770598" result="Passed" start-time="2021-03-06 06:27:28Z" end-time="2021-03-06 06:27:28Z" duration="0.000783" asserts="0">
              <properties />
            </test-case>
            <test-case id="4540" name="HasWriteFunctionForInt" fullname="Mirror.Tests.NetworkWriterCollectionTest.HasWriteFunctionForInt" methodname="HasWriteFunctionForInt" classname="Mirror.Tests.NetworkWriterCollectionTest" runstate="Runnable" seed="1297657778" result="Passed" start-time="2021-03-06 06:27:28Z" end-time="2021-03-06 06:27:28Z" duration="0.000733" asserts="0">
              <properties />
            </test-case>
            <test-case id="4544" name="HasWriteNetworkBehaviourDerivedFunction" fullname="Mirror.Tests.NetworkWriterCollectionTest.HasWriteNetworkBehaviourDerivedFunction" methodname="HasWriteNetworkBehaviourDerivedFunction" classname="Mirror.Tests.NetworkWriterCollectionTest" runstate="Runnable" seed="1951966926" result="Passed" start-time="2021-03-06 06:27:28Z" end-time="2021-03-06 06:27:28Z" duration="0.000869" asserts="0">
              <properties />
            </test-case>
            <test-case id="4542" name="HasWriteNetworkBehaviourFunction" fullname="Mirror.Tests.NetworkWriterCollectionTest.HasWriteNetworkBehaviourFunction" methodname="HasWriteNetworkBehaviourFunction" classname="Mirror.Tests.NetworkWriterCollectionTest" runstate="Runnable" seed="120032508" result="Passed" start-time="2021-03-06 06:27:28Z" end-time="2021-03-06 06:27:28Z" duration="0.001025" asserts="0">
              <properties />
            </test-case>
          </test-suite>
          <test-suite type="TestFixture" id="4546" name="NetworkWriterPoolTest" fullname="Mirror.Tests.NetworkWriterPoolTest" classname="Mirror.Tests.NetworkWriterPoolTest" runstate="Runnable" testcasecount="1" result="Passed" start-time="2021-03-06 06:27:28Z" end-time="2021-03-06 06:27:28Z" duration="0.009035" total="1" passed="1" failed="0" inconclusive="0" skipped="0" asserts="0">
            <properties />
            <test-case id="4547" name="TestPoolRecycling" fullname="Mirror.Tests.NetworkWriterPoolTest.TestPoolRecycling" methodname="TestPoolRecycling" classname="Mirror.Tests.NetworkWriterPoolTest" runstate="Runnable" seed="925280643" result="Passed" start-time="2021-03-06 06:27:28Z" end-time="2021-03-06 06:27:28Z" duration="0.000825" asserts="0">
              <properties />
            </test-case>
          </test-suite>
          <test-suite type="TestFixture" id="4548" name="NetworkWriterTest" fullname="Mirror.Tests.NetworkWriterTest" classname="Mirror.Tests.NetworkWriterTest" runstate="Runnable" testcasecount="61" result="Passed" start-time="2021-03-06 06:27:28Z" end-time="2021-03-06 06:27:28Z" duration="0.337157" total="61" passed="61" failed="0" inconclusive="0" skipped="0" asserts="0">
            <properties />
            <test-case id="4599" name="TestArrayDoesNotThrowWithCorrectLength" fullname="Mirror.Tests.NetworkWriterTest.TestArrayDoesNotThrowWithCorrectLength" methodname="TestArrayDoesNotThrowWithCorrectLength" classname="Mirror.Tests.NetworkWriterTest" runstate="Runnable" seed="915420568" result="Passed" start-time="2021-03-06 06:27:28Z" end-time="2021-03-06 06:27:28Z" duration="0.002209" asserts="0">
              <properties>
                <property name="Description" value="ReadArray should throw if it is trying to read more than length of segment, this is to stop allocation attacks" />
              </properties>
            </test-case>
            <test-suite type="ParameterizedMethod" id="4608" name="TestArrayThrowsIfLengthIsTooBig" fullname="Mirror.Tests.NetworkWriterTest.TestArrayThrowsIfLengthIsTooBig" classname="Mirror.Tests.NetworkWriterTest" runstate="Runnable" testcasecount="4" result="Passed" start-time="2021-03-06 06:27:28Z" end-time="2021-03-06 06:27:28Z" duration="0.021966" total="4" passed="4" failed="0" inconclusive="0" skipped="0" asserts="0">
              <properties>
                <property name="Description" value="ReadArray should throw if it is trying to read more than length of segment, this is to stop allocation attacks" />
              </properties>
              <test-case id="4604" name="TestArrayThrowsIfLengthIsTooBig(17)" fullname="Mirror.Tests.NetworkWriterTest.TestArrayThrowsIfLengthIsTooBig(17)" methodname="TestArrayThrowsIfLengthIsTooBig" classname="Mirror.Tests.NetworkWriterTest" runstate="Runnable" seed="1407628936" result="Passed" start-time="2021-03-06 06:27:28Z" end-time="2021-03-06 06:27:28Z" duration="0.002396" asserts="0">
                <properties>
                  <property name="Description" value="min read count is 1 byte, 16 array bytes are writen so 17 should throw error" />
                </properties>
              </test-case>
              <test-case id="4605" name="TestArrayThrowsIfLengthIsTooBig(20000)" fullname="Mirror.Tests.NetworkWriterTest.TestArrayThrowsIfLengthIsTooBig(20000)" methodname="TestArrayThrowsIfLengthIsTooBig" classname="Mirror.Tests.NetworkWriterTest" runstate="Runnable" seed="1421906420" result="Passed" start-time="2021-03-06 06:27:28Z" end-time="2021-03-06 06:27:28Z" duration="0.001527" asserts="0">
                <properties />
              </test-case>
              <test-case id="4606" name="TestArrayThrowsIfLengthIsTooBig(int.MaxValue)" fullname="Mirror.Tests.NetworkWriterTest.TestArrayThrowsIfLengthIsTooBig(int.MaxValue)" methodname="TestArrayThrowsIfLengthIsTooBig" classname="Mirror.Tests.NetworkWriterTest" runstate="Runnable" seed="2027412426" result="Passed" start-time="2021-03-06 06:27:28Z" end-time="2021-03-06 06:27:28Z" duration="0.001203" asserts="0">
                <properties />
              </test-case>
              <test-case id="4607" name="TestArrayThrowsIfLengthIsTooBig(2147483646)" fullname="Mirror.Tests.NetworkWriterTest.TestArrayThrowsIfLengthIsTooBig(2147483646)" methodname="TestArrayThrowsIfLengthIsTooBig" classname="Mirror.Tests.NetworkWriterTest" runstate="Runnable" seed="429226746" result="Passed" start-time="2021-03-06 06:27:28Z" end-time="2021-03-06 06:27:28Z" duration="0.001152" asserts="0">
                <properties />
              </test-case>
            </test-suite>
            <test-suite type="ParameterizedMethod" id="4603" name="TestArrayThrowsIfLengthIsWrong" fullname="Mirror.Tests.NetworkWriterTest.TestArrayThrowsIfLengthIsWrong" classname="Mirror.Tests.NetworkWriterTest" runstate="Runnable" testcasecount="3" result="Passed" start-time="2021-03-06 06:27:28Z" end-time="2021-03-06 06:27:28Z" duration="0.021330" total="3" passed="3" failed="0" inconclusive="0" skipped="0" asserts="0">
              <properties>
                <property name="Description" value="ReadArray should throw if it is trying to read more than length of segment, this is to stop allocation attacks" />
              </properties>
              <test-case id="4600" name="TestArrayThrowsIfLengthIsWrong(16)" fullname="Mirror.Tests.NetworkWriterTest.TestArrayThrowsIfLengthIsWrong(16)" methodname="TestArrayThrowsIfLengthIsWrong" classname="Mirror.Tests.NetworkWriterTest" runstate="Runnable" seed="508593331" result="Passed" start-time="2021-03-06 06:27:28Z" end-time="2021-03-06 06:27:28Z" duration="0.002788" asserts="0">
                <properties>
                  <property name="Description" value="max allowed value to allocate array" />
                </properties>
              </test-case>
              <test-case id="4601" name="TestArrayThrowsIfLengthIsWrong(8)" fullname="Mirror.Tests.NetworkWriterTest.TestArrayThrowsIfLengthIsWrong(8)" methodname="TestArrayThrowsIfLengthIsWrong" classname="Mirror.Tests.NetworkWriterTest" runstate="Runnable" seed="2104632542" result="Passed" start-time="2021-03-06 06:27:28Z" end-time="2021-03-06 06:27:28Z" duration="0.001331" asserts="0">
                <properties />
              </test-case>
              <test-case id="4602" name="TestArrayThrowsIfLengthIsWrong(5)" fullname="Mirror.Tests.NetworkWriterTest.TestArrayThrowsIfLengthIsWrong(5)" methodname="TestArrayThrowsIfLengthIsWrong" classname="Mirror.Tests.NetworkWriterTest" runstate="Runnable" seed="1398231891" result="Passed" start-time="2021-03-06 06:27:28Z" end-time="2021-03-06 06:27:28Z" duration="0.001215" asserts="0">
                <properties>
                  <property name="Description" value="min allowed to allocate" />
                </properties>
              </test-case>
            </test-suite>
            <test-case id="4587" name="TestByteEndianness" fullname="Mirror.Tests.NetworkWriterTest.TestByteEndianness" methodname="TestByteEndianness" classname="Mirror.Tests.NetworkWriterTest" runstate="Runnable" seed="2049472960" result="Passed" start-time="2021-03-06 06:27:28Z" end-time="2021-03-06 06:27:28Z" duration="0.002078" asserts="0">
              <properties />
            </test-case>
            <test-case id="4578" name="TestChar" fullname="Mirror.Tests.NetworkWriterTest.TestChar" methodname="TestChar" classname="Mirror.Tests.NetworkWriterTest" runstate="Runnable" seed="1556820257" result="Passed" start-time="2021-03-06 06:27:28Z" end-time="2021-03-06 06:27:28Z" duration="0.001575" asserts="0">
              <properties />
            </test-case>
            <test-case id="4567" name="TestColor" fullname="Mirror.Tests.NetworkWriterTest.TestColor" methodname="TestColor" classname="Mirror.Tests.NetworkWriterTest" runstate="Runnable" seed="1760581813" result="Passed" start-time="2021-03-06 06:27:28Z" end-time="2021-03-06 06:27:28Z" duration="0.003021" asserts="0">
              <properties />
            </test-case>
            <test-case id="4568" name="TestColor32" fullname="Mirror.Tests.NetworkWriterTest.TestColor32" methodname="TestColor32" classname="Mirror.Tests.NetworkWriterTest" runstate="Runnable" seed="899642047" result="Passed" start-time="2021-03-06 06:27:28Z" end-time="2021-03-06 06:27:28Z" duration="0.002290" asserts="0">
              <properties />
            </test-case>
            <test-case id="4586" name="TestDecimalBinaryCompatibility" fullname="Mirror.Tests.NetworkWriterTest.TestDecimalBinaryCompatibility" methodname="TestDecimalBinaryCompatibility" classname="Mirror.Tests.NetworkWriterTest" runstate="Runnable" seed="1007370136" result="Passed" start-time="2021-03-06 06:27:28Z" end-time="2021-03-06 06:27:28Z" duration="0.002016" asserts="0">
              <properties />
            </test-case>
            <test-case id="4583" name="TestDecimals" fullname="Mirror.Tests.NetworkWriterTest.TestDecimals" methodname="TestDecimals" classname="Mirror.Tests.NetworkWriterTest" runstate="Runnable" seed="2141415364" result="Passed" start-time="2021-03-06 06:27:28Z" end-time="2021-03-06 06:27:28Z" duration="0.002897" asserts="0">
              <properties />
            </test-case>
            <test-case id="4585" name="TestDoubleBinaryCompatibility" fullname="Mirror.Tests.NetworkWriterTest.TestDoubleBinaryCompatibility" methodname="TestDoubleBinaryCompatibility" classname="Mirror.Tests.NetworkWriterTest" runstate="Runnable" seed="1466239342" result="Passed" start-time="2021-03-06 06:27:28Z" end-time="2021-03-06 06:27:28Z" duration="0.002135" asserts="0">
              <properties />
            </test-case>
            <test-case id="4582" name="TestDoubles" fullname="Mirror.Tests.NetworkWriterTest.TestDoubles" methodname="TestDoubles" classname="Mirror.Tests.NetworkWriterTest" runstate="Runnable" seed="622683737" result="Passed" start-time="2021-03-06 06:27:28Z" end-time="2021-03-06 06:27:28Z" duration="0.001944" asserts="0">
              <properties />
            </test-case>
            <test-case id="4584" name="TestFloatBinaryCompatibility" fullname="Mirror.Tests.NetworkWriterTest.TestFloatBinaryCompatibility" methodname="TestFloatBinaryCompatibility" classname="Mirror.Tests.NetworkWriterTest" runstate="Runnable" seed="705819906" result="Passed" start-time="2021-03-06 06:27:28Z" end-time="2021-03-06 06:27:28Z" duration="0.001346" asserts="0">
              <properties />
            </test-case>
            <test-case id="4581" name="TestFloats" fullname="Mirror.Tests.NetworkWriterTest.TestFloats" methodname="TestFloats" classname="Mirror.Tests.NetworkWriterTest" runstate="Runnable" seed="1465062517" result="Passed" start-time="2021-03-06 06:27:28Z" end-time="2021-03-06 06:27:28Z" duration="0.001567" asserts="0">
              <properties />
            </test-case>
            <test-case id="4580" name="TestGuid" fullname="Mirror.Tests.NetworkWriterTest.TestGuid" methodname="TestGuid" classname="Mirror.Tests.NetworkWriterTest" runstate="Runnable" seed="1890257156" result="Passed" start-time="2021-03-06 06:27:28Z" end-time="2021-03-06 06:27:28Z" duration="0.001800" asserts="0">
              <properties />
            </test-case>
            <test-case id="4593" name="TestIntEndianness" fullname="Mirror.Tests.NetworkWriterTest.TestIntEndianness" methodname="TestIntEndianness" classname="Mirror.Tests.NetworkWriterTest" runstate="Runnable" seed="383824087" result="Passed" start-time="2021-03-06 06:27:28Z" end-time="2021-03-06 06:27:28Z" duration="0.001385" asserts="0">
              <properties />
            </test-case>
            <test-case id="4597" name="TestList" fullname="Mirror.Tests.NetworkWriterTest.TestList" methodname="TestList" classname="Mirror.Tests.NetworkWriterTest" runstate="Runnable" seed="199014175" result="Passed" start-time="2021-03-06 06:27:28Z" end-time="2021-03-06 06:27:28Z" duration="0.001862" asserts="0">
              <properties />
            </test-case>
            <test-case id="4594" name="TestLongEndianness" fullname="Mirror.Tests.NetworkWriterTest.TestLongEndianness" methodname="TestLongEndianness" classname="Mirror.Tests.NetworkWriterTest" runstate="Runnable" seed="1204885969" result="Passed" start-time="2021-03-06 06:27:28Z" end-time="2021-03-06 06:27:28Z" duration="0.001404" asserts="0">
              <properties />
            </test-case>
            <test-case id="4573" name="TestMatrix4x4" fullname="Mirror.Tests.NetworkWriterTest.TestMatrix4x4" methodname="TestMatrix4x4" classname="Mirror.Tests.NetworkWriterTest" runstate="Runnable" seed="1596009611" result="Passed" start-time="2021-03-06 06:27:28Z" end-time="2021-03-06 06:27:28Z" duration="0.003993" asserts="0">
              <properties />
            </test-case>
            <test-case id="4609" name="TestNetworkBehaviour" fullname="Mirror.Tests.NetworkWriterTest.TestNetworkBehaviour" methodname="TestNetworkBehaviour" classname="Mirror.Tests.NetworkWriterTest" runstate="Runnable" seed="367705709" result="Passed" start-time="2021-03-06 06:27:28Z" end-time="2021-03-06 06:27:28Z" duration="0.003202" asserts="0">
              <properties />
            </test-case>
            <test-case id="4610" name="TestNetworkBehaviourNull" fullname="Mirror.Tests.NetworkWriterTest.TestNetworkBehaviourNull" methodname="TestNetworkBehaviourNull" classname="Mirror.Tests.NetworkWriterTest" runstate="Runnable" seed="2109341424" result="Passed" start-time="2021-03-06 06:27:28Z" end-time="2021-03-06 06:27:28Z" duration="0.001627" asserts="0">
              <properties />
            </test-case>
            <test-case id="4611" name="TestNetworkBehaviourWeaverGenerated" fullname="Mirror.Tests.NetworkWriterTest.TestNetworkBehaviourWeaverGenerated" methodname="TestNetworkBehaviourWeaverGenerated" classname="Mirror.Tests.NetworkWriterTest" runstate="Runnable" seed="1147542422" result="Passed" start-time="2021-03-06 06:27:28Z" end-time="2021-03-06 06:27:28Z" duration="0.002070" asserts="0">
              <properties>
                <property name="Description" value="Uses Generic read function to check weaver correctly creates it" />
              </properties>
            </test-case>
            <test-case id="4598" name="TestNullList" fullname="Mirror.Tests.NetworkWriterTest.TestNullList" methodname="TestNullList" classname="Mirror.Tests.NetworkWriterTest" runstate="Runnable" seed="1864934387" result="Passed" start-time="2021-03-06 06:27:28Z" end-time="2021-03-06 06:27:28Z" duration="0.001273" asserts="0">
              <properties />
            </test-case>
            <test-case id="4571" name="TestPlane" fullname="Mirror.Tests.NetworkWriterTest.TestPlane" methodname="TestPlane" classname="Mirror.Tests.NetworkWriterTest" runstate="Runnable" seed="1665865214" result="Passed" start-time="2021-03-06 06:27:28Z" end-time="2021-03-06 06:27:28Z" duration="0.002491" asserts="0">
              <properties />
            </test-case>
            <test-case id="4569" name="TestQuaternion" fullname="Mirror.Tests.NetworkWriterTest.TestQuaternion" methodname="TestQuaternion" classname="Mirror.Tests.NetworkWriterTest" runstate="Runnable" seed="2146153780" result="Passed" start-time="2021-03-06 06:27:28Z" end-time="2021-03-06 06:27:28Z" duration="0.001927" asserts="0">
              <properties />
            </test-case>
            <test-case id="4572" name="TestRay" fullname="Mirror.Tests.NetworkWriterTest.TestRay" methodname="TestRay" classname="Mirror.Tests.NetworkWriterTest" runstate="Runnable" seed="1551365302" result="Passed" start-time="2021-03-06 06:27:28Z" end-time="2021-03-06 06:27:28Z" duration="0.002954" asserts="0">
              <properties />
            </test-case>
            <test-case id="4559" name="TestReading0LengthBytes" fullname="Mirror.Tests.NetworkWriterTest.TestReading0LengthBytes" methodname="TestReading0LengthBytes" classname="Mirror.Tests.NetworkWriterTest" runstate="Runnable" seed="1053277627" result="Passed" start-time="2021-03-06 06:27:28Z" end-time="2021-03-06 06:27:28Z" duration="0.001315" asserts="0">
              <properties />
            </test-case>
            <test-case id="4558" name="TestReading0LengthBytesAndSize" fullname="Mirror.Tests.NetworkWriterTest.TestReading0LengthBytesAndSize" methodname="TestReading0LengthBytesAndSize" classname="Mirror.Tests.NetworkWriterTest" runstate="Runnable" seed="1527205357" result="Passed" start-time="2021-03-06 06:27:28Z" end-time="2021-03-06 06:27:28Z" duration="0.001490" asserts="0">
              <properties />
            </test-case>
            <test-case id="4574" name="TestReadingInvalidString" fullname="Mirror.Tests.NetworkWriterTest.TestReadingInvalidString" methodname="TestReadingInvalidString" classname="Mirror.Tests.NetworkWriterTest" runstate="Runnable" seed="1135025260" result="Passed" start-time="2021-03-06 06:27:28Z" end-time="2021-03-06 06:27:28Z" duration="0.003288" asserts="0">
              <properties />
            </test-case>
            <test-case id="4561" name="TestReadingTooMuch" fullname="Mirror.Tests.NetworkWriterTest.TestReadingTooMuch" methodname="TestReadingTooMuch" classname="Mirror.Tests.NetworkWriterTest" runstate="Runnable" seed="768445024" result="Passed" start-time="2021-03-06 06:27:28Z" end-time="2021-03-06 06:27:28Z" duration="0.085362" asserts="0">
              <properties />
            </test-case>
            <test-case id="4575" name="TestReadingTruncatedString" fullname="Mirror.Tests.NetworkWriterTest.TestReadingTruncatedString" methodname="TestReadingTruncatedString" classname="Mirror.Tests.NetworkWriterTest" runstate="Runnable" seed="486289953" result="Passed" start-time="2021-03-06 06:27:28Z" end-time="2021-03-06 06:27:28Z" duration="0.001922" asserts="0">
              <properties />
            </test-case>
            <test-case id="4570" name="TestRect" fullname="Mirror.Tests.NetworkWriterTest.TestRect" methodname="TestRect" classname="Mirror.Tests.NetworkWriterTest" runstate="Runnable" seed="1555028950" result="Passed" start-time="2021-03-06 06:27:28Z" end-time="2021-03-06 06:27:28Z" duration="0.002587" asserts="0">
              <properties />
            </test-case>
            <test-case id="4557" name="TestResetSetsPotionAndLength" fullname="Mirror.Tests.NetworkWriterTest.TestResetSetsPotionAndLength" methodname="TestResetSetsPotionAndLength" classname="Mirror.Tests.NetworkWriterTest" runstate="Runnable" seed="328817541" result="Passed" start-time="2021-03-06 06:27:28Z" end-time="2021-03-06 06:27:28Z" duration="0.001369" asserts="0">
              <properties />
            </test-case>
            <test-case id="4591" name="TestSbyteEndianness" fullname="Mirror.Tests.NetworkWriterTest.TestSbyteEndianness" methodname="TestSbyteEndianness" classname="Mirror.Tests.NetworkWriterTest" runstate="Runnable" seed="238003026" result="Passed" start-time="2021-03-06 06:27:28Z" end-time="2021-03-06 06:27:28Z" duration="0.001355" asserts="0">
              <properties />
            </test-case>
            <test-case id="4556" name="TestSetLengthInitialization" fullname="Mirror.Tests.NetworkWriterTest.TestSetLengthInitialization" methodname="TestSetLengthInitialization" classname="Mirror.Tests.NetworkWriterTest" runstate="Runnable" seed="451486049" result="Passed" start-time="2021-03-06 06:27:28Z" end-time="2021-03-06 06:27:28Z" duration="0.001190" asserts="0">
              <properties />
            </test-case>
            <test-case id="4555" name="TestSetLengthZeroes" fullname="Mirror.Tests.NetworkWriterTest.TestSetLengthZeroes" methodname="TestSetLengthZeroes" classname="Mirror.Tests.NetworkWriterTest" runstate="Runnable" seed="1396932145" result="Passed" start-time="2021-03-06 06:27:28Z" end-time="2021-03-06 06:27:28Z" duration="0.001363" asserts="0">
              <properties />
            </test-case>
            <test-case id="4592" name="TestShortEndianness" fullname="Mirror.Tests.NetworkWriterTest.TestShortEndianness" methodname="TestShortEndianness" classname="Mirror.Tests.NetworkWriterTest" runstate="Runnable" seed="1621504157" result="Passed" start-time="2021-03-06 06:27:28Z" end-time="2021-03-06 06:27:28Z" duration="0.001648" asserts="0">
              <properties />
            </test-case>
            <test-case id="4576" name="TestToArray" fullname="Mirror.Tests.NetworkWriterTest.TestToArray" methodname="TestToArray" classname="Mirror.Tests.NetworkWriterTest" runstate="Runnable" seed="202327487" result="Passed" start-time="2021-03-06 06:27:28Z" end-time="2021-03-06 06:27:28Z" duration="0.001338" asserts="0">
              <properties />
            </test-case>
            <test-case id="4577" name="TestToArraySegment" fullname="Mirror.Tests.NetworkWriterTest.TestToArraySegment" methodname="TestToArraySegment" classname="Mirror.Tests.NetworkWriterTest" runstate="Runnable" seed="199499175" result="Passed" start-time="2021-03-06 06:27:28Z" end-time="2021-03-06 06:27:28Z" duration="0.001306" asserts="0">
              <properties />
            </test-case>
            <test-case id="4589" name="TestUIntEndianness" fullname="Mirror.Tests.NetworkWriterTest.TestUIntEndianness" methodname="TestUIntEndianness" classname="Mirror.Tests.NetworkWriterTest" runstate="Runnable" seed="77646741" result="Passed" start-time="2021-03-06 06:27:28Z" end-time="2021-03-06 06:27:28Z" duration="0.002464" asserts="0">
              <properties />
            </test-case>
            <test-case id="4590" name="TestULongEndianness" fullname="Mirror.Tests.NetworkWriterTest.TestULongEndianness" methodname="TestULongEndianness" classname="Mirror.Tests.NetworkWriterTest" runstate="Runnable" seed="1196650018" result="Passed" start-time="2021-03-06 06:27:28Z" end-time="2021-03-06 06:27:28Z" duration="0.001806" asserts="0">
              <properties />
            </test-case>
            <test-case id="4579" name="TestUnicodeString" fullname="Mirror.Tests.NetworkWriterTest.TestUnicodeString" methodname="TestUnicodeString" classname="Mirror.Tests.NetworkWriterTest" runstate="Runnable" seed="740461696" result="Passed" start-time="2021-03-06 06:27:28Z" end-time="2021-03-06 06:27:28Z" duration="0.001822" asserts="0">
              <properties />
            </test-case>
            <test-case id="4588" name="TestUShortEndianness" fullname="Mirror.Tests.NetworkWriterTest.TestUShortEndianness" methodname="TestUShortEndianness" classname="Mirror.Tests.NetworkWriterTest" runstate="Runnable" seed="1389650837" result="Passed" start-time="2021-03-06 06:27:28Z" end-time="2021-03-06 06:27:28Z" duration="0.001445" asserts="0">
              <properties />
            </test-case>
            <test-case id="4562" name="TestVector2" fullname="Mirror.Tests.NetworkWriterTest.TestVector2" methodname="TestVector2" classname="Mirror.Tests.NetworkWriterTest" runstate="Runnable" seed="1969184692" result="Passed" start-time="2021-03-06 06:27:28Z" end-time="2021-03-06 06:27:28Z" duration="0.002260" asserts="0">
              <properties />
            </test-case>
            <test-case id="4565" name="TestVector2Int" fullname="Mirror.Tests.NetworkWriterTest.TestVector2Int" methodname="TestVector2Int" classname="Mirror.Tests.NetworkWriterTest" runstate="Runnable" seed="62818651" result="Passed" start-time="2021-03-06 06:27:28Z" end-time="2021-03-06 06:27:28Z" duration="0.002035" asserts="0">
              <properties />
            </test-case>
            <test-case id="4563" name="TestVector3" fullname="Mirror.Tests.NetworkWriterTest.TestVector3" methodname="TestVector3" classname="Mirror.Tests.NetworkWriterTest" runstate="Runnable" seed="1143832318" result="Passed" start-time="2021-03-06 06:27:28Z" end-time="2021-03-06 06:27:28Z" duration="0.001726" asserts="0">
              <properties />
            </test-case>
            <test-case id="4566" name="TestVector3Int" fullname="Mirror.Tests.NetworkWriterTest.TestVector3Int" methodname="TestVector3Int" classname="Mirror.Tests.NetworkWriterTest" runstate="Runnable" seed="171393266" result="Passed" start-time="2021-03-06 06:27:28Z" end-time="2021-03-06 06:27:28Z" duration="0.003040" asserts="0">
              <properties />
            </test-case>
            <test-case id="4564" name="TestVector4" fullname="Mirror.Tests.NetworkWriterTest.TestVector4" methodname="TestVector4" classname="Mirror.Tests.NetworkWriterTest" runstate="Runnable" seed="1613546516" result="Passed" start-time="2021-03-06 06:27:28Z" end-time="2021-03-06 06:27:28Z" duration="0.002452" asserts="0">
              <properties />
            </test-case>
            <test-case id="4595" name="TestWritingAndReading" fullname="Mirror.Tests.NetworkWriterTest.TestWritingAndReading" methodname="TestWritingAndReading" classname="Mirror.Tests.NetworkWriterTest" runstate="Runnable" seed="1882439931" result="Passed" start-time="2021-03-06 06:27:28Z" end-time="2021-03-06 06:27:28Z" duration="0.004138" asserts="0">
              <properties />
            </test-case>
            <test-case id="4553" name="TestWritingBytesAndReadingSegment" fullname="Mirror.Tests.NetworkWriterTest.TestWritingBytesAndReadingSegment" methodname="TestWritingBytesAndReadingSegment" classname="Mirror.Tests.NetworkWriterTest" runstate="Runnable" seed="83056192" result="Passed" start-time="2021-03-06 06:27:28Z" end-time="2021-03-06 06:27:28Z" duration="0.001473" asserts="0">
              <properties />
            </test-case>
            <test-case id="4552" name="TestWritingBytesSegment" fullname="Mirror.Tests.NetworkWriterTest.TestWritingBytesSegment" methodname="TestWritingBytesSegment" classname="Mirror.Tests.NetworkWriterTest" runstate="Runnable" seed="510509698" result="Passed" start-time="2021-03-06 06:27:28Z" end-time="2021-03-06 06:27:28Z" duration="0.001352" asserts="0">
              <properties />
            </test-case>
            <test-case id="4551" name="TestWritingHugeArray" fullname="Mirror.Tests.NetworkWriterTest.TestWritingHugeArray" methodname="TestWritingHugeArray" classname="Mirror.Tests.NetworkWriterTest" runstate="Runnable" seed="1754657018" result="Passed" start-time="2021-03-06 06:27:28Z" end-time="2021-03-06 06:27:28Z" duration="0.001297" asserts="0">
              <properties />
            </test-case>
            <test-case id="4550" name="TestWritingLargeMessage" fullname="Mirror.Tests.NetworkWriterTest.TestWritingLargeMessage" methodname="TestWritingLargeMessage" classname="Mirror.Tests.NetworkWriterTest" runstate="Runnable" seed="155235485" result="Passed" start-time="2021-03-06 06:27:28Z" end-time="2021-03-06 06:27:28Z" duration="0.003261" asserts="0">
              <properties />
            </test-case>
            <test-case id="4560" name="TestWritingNegativeBytesAndSizeFailure" fullname="Mirror.Tests.NetworkWriterTest.TestWritingNegativeBytesAndSizeFailure" methodname="TestWritingNegativeBytesAndSizeFailure" classname="Mirror.Tests.NetworkWriterTest" runstate="Runnable" seed="400534308" result="Passed" start-time="2021-03-06 06:27:28Z" end-time="2021-03-06 06:27:28Z" duration="0.001881" asserts="0">
              <properties />
            </test-case>
            <test-case id="4554" name="TestWritingSegmentAndReadingSegment" fullname="Mirror.Tests.NetworkWriterTest.TestWritingSegmentAndReadingSegment" methodname="TestWritingSegmentAndReadingSegment" classname="Mirror.Tests.NetworkWriterTest" runstate="Runnable" seed="1837277969" result="Passed" start-time="2021-03-06 06:27:28Z" end-time="2021-03-06 06:27:28Z" duration="0.001414" asserts="0">
              <properties />
            </test-case>
            <test-case id="4549" name="TestWritingSmallMessage" fullname="Mirror.Tests.NetworkWriterTest.TestWritingSmallMessage" methodname="TestWritingSmallMessage" classname="Mirror.Tests.NetworkWriterTest" runstate="Runnable" seed="1969888149" result="Passed" start-time="2021-03-06 06:27:28Z" end-time="2021-03-06 06:27:28Z" duration="0.002213" asserts="0">
              <properties />
            </test-case>
            <test-case id="4596" name="TestWritingUri" fullname="Mirror.Tests.NetworkWriterTest.TestWritingUri" methodname="TestWritingUri" classname="Mirror.Tests.NetworkWriterTest" runstate="Runnable" seed="1542262067" result="Passed" start-time="2021-03-06 06:27:28Z" end-time="2021-03-06 06:27:28Z" duration="0.001534" asserts="0">
              <properties />
            </test-case>
          </test-suite>
          <test-suite type="TestFixture" id="4612" name="PoolTests" fullname="Mirror.Tests.PoolTests" classname="Mirror.Tests.PoolTests" runstate="Runnable" testcasecount="3" result="Passed" start-time="2021-03-06 06:27:28Z" end-time="2021-03-06 06:27:28Z" duration="0.064703" total="3" passed="3" failed="0" inconclusive="0" skipped="0" asserts="0">
            <properties />
            <test-case id="4615" name="Count" fullname="Mirror.Tests.PoolTests.Count" methodname="Count" classname="Mirror.Tests.PoolTests" runstate="Runnable" seed="489923945" result="Passed" start-time="2021-03-06 06:27:28Z" end-time="2021-03-06 06:27:28Z" duration="0.019541" asserts="0">
              <properties />
            </test-case>
            <test-case id="4614" name="ReturnAndTake" fullname="Mirror.Tests.PoolTests.ReturnAndTake" methodname="ReturnAndTake" classname="Mirror.Tests.PoolTests" runstate="Runnable" seed="1578059588" result="Passed" start-time="2021-03-06 06:27:28Z" end-time="2021-03-06 06:27:28Z" duration="0.014361" asserts="0">
              <properties />
            </test-case>
            <test-case id="4613" name="TakeFromEmpty" fullname="Mirror.Tests.PoolTests.TakeFromEmpty" methodname="TakeFromEmpty" classname="Mirror.Tests.PoolTests" runstate="Runnable" seed="1273962405" result="Passed" start-time="2021-03-06 06:27:28Z" end-time="2021-03-06 06:27:28Z" duration="0.015244" asserts="0">
              <properties />
            </test-case>
          </test-suite>
          <test-suite type="TestSuite" id="5892" name="RemoteAttrributeTest" fullname="Mirror.Tests.RemoteAttrributeTest" runstate="Runnable" testcasecount="34" result="Passed" start-time="2021-03-06 06:27:28Z" end-time="2021-03-06 06:27:29Z" duration="1.217956" total="34" passed="34" failed="0" inconclusive="0" skipped="0" asserts="0">
            <properties />
            <test-suite type="TestFixture" id="5815" name="ClientRpcOverrideTest" fullname="Mirror.Tests.RemoteAttrributeTest.ClientRpcOverrideTest" classname="Mirror.Tests.RemoteAttrributeTest.ClientRpcOverrideTest" runstate="Runnable" testcasecount="4" result="Passed" start-time="2021-03-06 06:27:28Z" end-time="2021-03-06 06:27:28Z" duration="0.129627" total="4" passed="4" failed="0" inconclusive="0" skipped="0" asserts="0">
              <properties />
              <test-case id="5818" name="OverrideVirtualRpcIsCalled" fullname="Mirror.Tests.RemoteAttrributeTest.ClientRpcOverrideTest.OverrideVirtualRpcIsCalled" methodname="OverrideVirtualRpcIsCalled" classname="Mirror.Tests.RemoteAttrributeTest.ClientRpcOverrideTest" runstate="Runnable" seed="1924877562" result="Passed" start-time="2021-03-06 06:27:28Z" end-time="2021-03-06 06:27:28Z" duration="0.023301" asserts="0">
                <properties />
                <output><![CDATA[Server started listening
Shutting down client.
]]></output>
              </test-case>
              <test-case id="5819" name="OverrideVirtualWithBaseCallsBothVirtualAndBase" fullname="Mirror.Tests.RemoteAttrributeTest.ClientRpcOverrideTest.OverrideVirtualWithBaseCallsBothVirtualAndBase" methodname="OverrideVirtualWithBaseCallsBothVirtualAndBase" classname="Mirror.Tests.RemoteAttrributeTest.ClientRpcOverrideTest" runstate="Runnable" seed="925586298" result="Passed" start-time="2021-03-06 06:27:28Z" end-time="2021-03-06 06:27:28Z" duration="0.034649" asserts="0">
                <properties />
                <output><![CDATA[Server started listening
Shutting down client.
]]></output>
              </test-case>
              <test-case id="5817" name="VirtualCommandWithNoOverrideIsCalled" fullname="Mirror.Tests.RemoteAttrributeTest.ClientRpcOverrideTest.VirtualCommandWithNoOverrideIsCalled" methodname="VirtualCommandWithNoOverrideIsCalled" classname="Mirror.Tests.RemoteAttrributeTest.ClientRpcOverrideTest" runstate="Runnable" seed="1845402967" result="Passed" start-time="2021-03-06 06:27:28Z" end-time="2021-03-06 06:27:28Z" duration="0.034329" asserts="0">
                <properties />
                <output><![CDATA[Server started listening
Shutting down client.
]]></output>
              </test-case>
              <test-case id="5816" name="VirtualRpcIsCalled" fullname="Mirror.Tests.RemoteAttrributeTest.ClientRpcOverrideTest.VirtualRpcIsCalled" methodname="VirtualRpcIsCalled" classname="Mirror.Tests.RemoteAttrributeTest.ClientRpcOverrideTest" runstate="Runnable" seed="44896065" result="Passed" start-time="2021-03-06 06:27:28Z" end-time="2021-03-06 06:27:28Z" duration="0.026146" asserts="0">
                <properties />
                <output><![CDATA[Server started listening
Shutting down client.
]]></output>
              </test-case>
            </test-suite>
            <test-suite type="TestFixture" id="5820" name="ClientRpcTest" fullname="Mirror.Tests.RemoteAttrributeTest.ClientRpcTest" classname="Mirror.Tests.RemoteAttrributeTest.ClientRpcTest" runstate="Runnable" testcasecount="3" result="Passed" start-time="2021-03-06 06:27:28Z" end-time="2021-03-06 06:27:28Z" duration="0.100696" total="3" passed="3" failed="0" inconclusive="0" skipped="0" asserts="0">
              <properties />
              <test-case id="5821" name="RpcIsCalled" fullname="Mirror.Tests.RemoteAttrributeTest.ClientRpcTest.RpcIsCalled" methodname="RpcIsCalled" classname="Mirror.Tests.RemoteAttrributeTest.ClientRpcTest" runstate="Runnable" seed="1853481661" result="Passed" start-time="2021-03-06 06:27:28Z" end-time="2021-03-06 06:27:28Z" duration="0.023754" asserts="0">
                <properties />
                <output><![CDATA[Server started listening
Shutting down client.
]]></output>
              </test-case>
              <test-case id="5822" name="RpcIsCalledForNotOwnerd" fullname="Mirror.Tests.RemoteAttrributeTest.ClientRpcTest.RpcIsCalledForNotOwnerd" methodname="RpcIsCalledForNotOwnerd" classname="Mirror.Tests.RemoteAttrributeTest.ClientRpcTest" runstate="Runnable" seed="384805174" result="Passed" start-time="2021-03-06 06:27:28Z" end-time="2021-03-06 06:27:28Z" duration="0.030354" asserts="0">
                <properties />
                <output><![CDATA[Server started listening
Shutting down client.
]]></output>
              </test-case>
              <test-case id="5823" name="RpcNotCalledForOwnerd" fullname="Mirror.Tests.RemoteAttrributeTest.ClientRpcTest.RpcNotCalledForOwnerd" methodname="RpcNotCalledForOwnerd" classname="Mirror.Tests.RemoteAttrributeTest.ClientRpcTest" runstate="Runnable" seed="205573989" result="Passed" start-time="2021-03-06 06:27:28Z" end-time="2021-03-06 06:27:28Z" duration="0.035067" asserts="0">
                <properties />
                <output><![CDATA[Server started listening
Shutting down client.
]]></output>
              </test-case>
            </test-suite>
            <test-suite type="TestFixture" id="5824" name="CommandOverrideTest" fullname="Mirror.Tests.RemoteAttrributeTest.CommandOverrideTest" classname="Mirror.Tests.RemoteAttrributeTest.CommandOverrideTest" runstate="Runnable" testcasecount="5" result="Passed" start-time="2021-03-06 06:27:28Z" end-time="2021-03-06 06:27:28Z" duration="0.172521" total="5" passed="5" failed="0" inconclusive="0" skipped="0" asserts="0">
              <properties />
              <test-case id="5827" name="OverrideVirtualCommandIsCalled" fullname="Mirror.Tests.RemoteAttrributeTest.CommandOverrideTest.OverrideVirtualCommandIsCalled" methodname="OverrideVirtualCommandIsCalled" classname="Mirror.Tests.RemoteAttrributeTest.CommandOverrideTest" runstate="Runnable" seed="146778135" result="Passed" start-time="2021-03-06 06:27:28Z" end-time="2021-03-06 06:27:28Z" duration="0.027453" asserts="0">
                <properties />
                <output><![CDATA[Server started listening
Shutting down client.
]]></output>
              </test-case>
              <test-case id="5829" name="OverrideVirtualWithBaseCallsAllMethodsThatCallBase" fullname="Mirror.Tests.RemoteAttrributeTest.CommandOverrideTest.OverrideVirtualWithBaseCallsAllMethodsThatCallBase" methodname="OverrideVirtualWithBaseCallsAllMethodsThatCallBase" classname="Mirror.Tests.RemoteAttrributeTest.CommandOverrideTest" runstate="Runnable" seed="1895135347" result="Passed" start-time="2021-03-06 06:27:28Z" end-time="2021-03-06 06:27:28Z" duration="0.030452" asserts="0">
                <properties />
                <output><![CDATA[Server started listening
Shutting down client.
]]></output>
              </test-case>
              <test-case id="5828" name="OverrideVirtualWithBaseCallsBothVirtualAndBase" fullname="Mirror.Tests.RemoteAttrributeTest.CommandOverrideTest.OverrideVirtualWithBaseCallsBothVirtualAndBase" methodname="OverrideVirtualWithBaseCallsBothVirtualAndBase" classname="Mirror.Tests.RemoteAttrributeTest.CommandOverrideTest" runstate="Runnable" seed="641317381" result="Passed" start-time="2021-03-06 06:27:28Z" end-time="2021-03-06 06:27:28Z" duration="0.029702" asserts="0">
                <properties />
                <output><![CDATA[Server started listening
Shutting down client.
]]></output>
              </test-case>
              <test-case id="5825" name="VirtualCommandIsCalled" fullname="Mirror.Tests.RemoteAttrributeTest.CommandOverrideTest.VirtualCommandIsCalled" methodname="VirtualCommandIsCalled" classname="Mirror.Tests.RemoteAttrributeTest.CommandOverrideTest" runstate="Runnable" seed="309020203" result="Passed" start-time="2021-03-06 06:27:28Z" end-time="2021-03-06 06:27:28Z" duration="0.034579" asserts="0">
                <properties />
                <output><![CDATA[Server started listening
Shutting down client.
]]></output>
              </test-case>
              <test-case id="5826" name="VirtualCommandWithNoOverrideIsCalled" fullname="Mirror.Tests.RemoteAttrributeTest.CommandOverrideTest.VirtualCommandWithNoOverrideIsCalled" methodname="VirtualCommandWithNoOverrideIsCalled" classname="Mirror.Tests.RemoteAttrributeTest.CommandOverrideTest" runstate="Runnable" seed="380338413" result="Passed" start-time="2021-03-06 06:27:28Z" end-time="2021-03-06 06:27:28Z" duration="0.034666" asserts="0">
                <properties />
                <output><![CDATA[Server started listening
Shutting down client.
]]></output>
              </test-case>
            </test-suite>
            <test-suite type="TestFixture" id="5830" name="CommandTest" fullname="Mirror.Tests.RemoteAttrributeTest.CommandTest" classname="Mirror.Tests.RemoteAttrributeTest.CommandTest" runstate="Runnable" testcasecount="7" result="Passed" start-time="2021-03-06 06:27:28Z" end-time="2021-03-06 06:27:29Z" duration="0.246421" total="7" passed="7" failed="0" inconclusive="0" skipped="0" asserts="0">
              <properties />
              <test-case id="5831" name="CommandIsSentWithAuthority" fullname="Mirror.Tests.RemoteAttrributeTest.CommandTest.CommandIsSentWithAuthority" methodname="CommandIsSentWithAuthority" classname="Mirror.Tests.RemoteAttrributeTest.CommandTest" runstate="Runnable" seed="1809650425" result="Passed" start-time="2021-03-06 06:27:28Z" end-time="2021-03-06 06:27:28Z" duration="0.027198" asserts="0">
                <properties />
                <output><![CDATA[Server started listening
Shutting down client.
]]></output>
              </test-case>
              <test-case id="5833" name="CommandIsSentWithAuthorityWhenIgnoringAuthority" fullname="Mirror.Tests.RemoteAttrributeTest.CommandTest.CommandIsSentWithAuthorityWhenIgnoringAuthority" methodname="CommandIsSentWithAuthorityWhenIgnoringAuthority" classname="Mirror.Tests.RemoteAttrributeTest.CommandTest" runstate="Runnable" seed="2064203113" result="Passed" start-time="2021-03-06 06:27:28Z" end-time="2021-03-06 06:27:29Z" duration="0.029810" asserts="0">
                <properties />
                <output><![CDATA[Server started listening
Shutting down client.
]]></output>
              </test-case>
              <test-case id="5834" name="CommandIsSentWithoutAuthorityWhenIgnoringAuthority" fullname="Mirror.Tests.RemoteAttrributeTest.CommandTest.CommandIsSentWithoutAuthorityWhenIgnoringAuthority" methodname="CommandIsSentWithoutAuthorityWhenIgnoringAuthority" classname="Mirror.Tests.RemoteAttrributeTest.CommandTest" runstate="Runnable" seed="1147193271" result="Passed" start-time="2021-03-06 06:27:29Z" end-time="2021-03-06 06:27:29Z" duration="0.034657" asserts="0">
                <properties />
                <output><![CDATA[Server started listening
Shutting down client.
]]></output>
              </test-case>
              <test-case id="5837" name="CommandThatThrowsShouldBeCaught" fullname="Mirror.Tests.RemoteAttrributeTest.CommandTest.CommandThatThrowsShouldBeCaught" methodname="CommandThatThrowsShouldBeCaught" classname="Mirror.Tests.RemoteAttrributeTest.CommandTest" runstate="Runnable" seed="1830346297" result="Passed" start-time="2021-03-06 06:27:29Z" end-time="2021-03-06 06:27:29Z" duration="0.037681" asserts="0">
                <properties />
                <output><![CDATA[Server started listening
Exception in MessageHandler: Exception Bad things happened
  at Mirror.Tests.RemoteAttrributeTest.ThrowBehaviour.UserCode_SendThrow (System.Int32 someInt) [0x00001] in /Users/qwerty/x/dev/project_Mirror/Repository/Assets/Mirror/Tests/Editor/CommandTest.cs:60 
  at Mirror.Tests.RemoteAttrributeTest.ThrowBehaviour.InvokeUserCode_SendThrow (Mirror.NetworkBehaviour obj, Mirror.NetworkReader reader, Mirror.NetworkConnectionToClient senderConnection) [0x00022] in <baf62be51f3143b48ac2e3ca7b333f85>:0 
  at Mirror.RemoteCalls.RemoteCallHelper.InvokeHandlerDelegate (System.Int32 cmdHash, Mirror.MirrorInvokeType invokeType, Mirror.NetworkReader reader, Mirror.NetworkBehaviour invokingType, Mirror.NetworkConnectionToClient senderConnection) [0x00020] in /Users/qwerty/x/dev/project_Mirror/Repository/Assets/Mirror/Runtime/RemoteCallHelper.cs:148 
  at Mirror.NetworkIdentity.HandleRemoteCall (System.Int32 componentIndex, System.Int32 functionHash, Mirror.MirrorInvokeType invokeType, Mirror.NetworkReader reader, Mirror.NetworkConnectionToClient senderConnection) [0x0007f] in /Users/qwerty/x/dev/project_Mirror/Repository/Assets/Mirror/Runtime/NetworkIdentity.cs:1106 
  at Mirror.NetworkServer.OnCommandMessage (Mirror.NetworkConnection conn, Mirror.CommandMessage msg) [0x000a2] in /Users/qwerty/x/dev/project_Mirror/Repository/Assets/Mirror/Runtime/NetworkServer.cs:1075 
  at (wrapper delegate-invoke) System.Action`2[Mirror.NetworkConnection,Mirror.CommandMessage].invoke_void_T1_T2(Mirror.NetworkConnection,Mirror.CommandMessage)
  at Mirror.MessagePacking+<>c__DisplayClass5_0`2[T,C].<WrapHandler>b__0 (Mirror.NetworkConnection conn, Mirror.NetworkReader reader, System.Int32 channelId) [0x00089] in /Users/qwerty/x/dev/project_Mirror/Repository/Assets/Mirror/Runtime/MessagePacking.cs:118 
Shutting down client.
]]></output>
              </test-case>
              <test-case id="5835" name="SenderConnectionIsSetWhenCommandIsRecieved" fullname="Mirror.Tests.RemoteAttrributeTest.CommandTest.SenderConnectionIsSetWhenCommandIsRecieved" methodname="SenderConnectionIsSetWhenCommandIsRecieved" classname="Mirror.Tests.RemoteAttrributeTest.CommandTest" runstate="Runnable" seed="2056138490" result="Passed" start-time="2021-03-06 06:27:29Z" end-time="2021-03-06 06:27:29Z" duration="0.027905" asserts="0">
                <properties />
                <output><![CDATA[Server started listening
Shutting down client.
]]></output>
              </test-case>
              <test-case id="5836" name="SenderConnectionIsSetWhenCommandIsRecievedWithIgnoreAuthority" fullname="Mirror.Tests.RemoteAttrributeTest.CommandTest.SenderConnectionIsSetWhenCommandIsRecievedWithIgnoreAuthority" methodname="SenderConnectionIsSetWhenCommandIsRecievedWithIgnoreAuthority" classname="Mirror.Tests.RemoteAttrributeTest.CommandTest" runstate="Runnable" seed="395051424" result="Passed" start-time="2021-03-06 06:27:29Z" end-time="2021-03-06 06:27:29Z" duration="0.029277" asserts="0">
                <properties />
                <output><![CDATA[Server started listening
Shutting down client.
]]></output>
              </test-case>
              <test-case id="5832" name="WarningForCommandSentWithoutAuthority" fullname="Mirror.Tests.RemoteAttrributeTest.CommandTest.WarningForCommandSentWithoutAuthority" methodname="WarningForCommandSentWithoutAuthority" classname="Mirror.Tests.RemoteAttrributeTest.CommandTest" runstate="Runnable" seed="1950203237" result="Passed" start-time="2021-03-06 06:27:29Z" end-time="2021-03-06 06:27:29Z" duration="0.033245" asserts="0">
                <properties />
                <output><![CDATA[Server started listening
Trying to send command for object without authority. Mirror.Tests.RemoteAttrributeTest.AuthorityBehaviour.SendInt
Shutting down client.
]]></output>
              </test-case>
            </test-suite>
            <test-suite type="TestFixture" id="5838" name="RpcNetworkIdentityTest" fullname="Mirror.Tests.RemoteAttrributeTest.RpcNetworkIdentityTest" classname="Mirror.Tests.RemoteAttrributeTest.RpcNetworkIdentityTest" runstate="Runnable" testcasecount="4" result="Passed" start-time="2021-03-06 06:27:29Z" end-time="2021-03-06 06:27:29Z" duration="0.137546" total="4" passed="4" failed="0" inconclusive="0" skipped="0" asserts="0">
              <properties>
                <property name="Description" value="Test for sending NetworkIdentity fields (NI/GO/NB) in RPC" />
              </properties>
              <test-case id="5840" name="RpcCanSendGameObject" fullname="Mirror.Tests.RemoteAttrributeTest.RpcNetworkIdentityTest.RpcCanSendGameObject" methodname="RpcCanSendGameObject" classname="Mirror.Tests.RemoteAttrributeTest.RpcNetworkIdentityTest" runstate="Runnable" seed="1154756191" result="Passed" start-time="2021-03-06 06:27:29Z" end-time="2021-03-06 06:27:29Z" duration="0.027437" asserts="0">
                <properties />
                <output><![CDATA[Server started listening
Shutting down client.
]]></output>
              </test-case>
              <test-case id="5841" name="RpcCanSendNetworkBehaviour" fullname="Mirror.Tests.RemoteAttrributeTest.RpcNetworkIdentityTest.RpcCanSendNetworkBehaviour" methodname="RpcCanSendNetworkBehaviour" classname="Mirror.Tests.RemoteAttrributeTest.RpcNetworkIdentityTest" runstate="Runnable" seed="799403615" result="Passed" start-time="2021-03-06 06:27:29Z" end-time="2021-03-06 06:27:29Z" duration="0.029306" asserts="0">
                <properties />
                <output><![CDATA[Server started listening
Shutting down client.
]]></output>
              </test-case>
              <test-case id="5842" name="RpcCanSendNetworkBehaviourDerived" fullname="Mirror.Tests.RemoteAttrributeTest.RpcNetworkIdentityTest.RpcCanSendNetworkBehaviourDerived" methodname="RpcCanSendNetworkBehaviourDerived" classname="Mirror.Tests.RemoteAttrributeTest.RpcNetworkIdentityTest" runstate="Runnable" seed="2099880426" result="Passed" start-time="2021-03-06 06:27:29Z" end-time="2021-03-06 06:27:29Z" duration="0.030277" asserts="0">
                <properties />
                <output><![CDATA[Server started listening
Shutting down client.
]]></output>
              </test-case>
              <test-case id="5839" name="RpcCanSendNetworkIdentity" fullname="Mirror.Tests.RemoteAttrributeTest.RpcNetworkIdentityTest.RpcCanSendNetworkIdentity" methodname="RpcCanSendNetworkIdentity" classname="Mirror.Tests.RemoteAttrributeTest.RpcNetworkIdentityTest" runstate="Runnable" seed="783780999" result="Passed" start-time="2021-03-06 06:27:29Z" end-time="2021-03-06 06:27:29Z" duration="0.034383" asserts="0">
                <properties />
                <output><![CDATA[Server started listening
Shutting down client.
]]></output>
              </test-case>
            </test-suite>
            <test-suite type="TestFixture" id="5843" name="TargetRpcOverrideTest" fullname="Mirror.Tests.RemoteAttrributeTest.TargetRpcOverrideTest" classname="Mirror.Tests.RemoteAttrributeTest.TargetRpcOverrideTest" runstate="Runnable" testcasecount="4" result="Passed" start-time="2021-03-06 06:27:29Z" end-time="2021-03-06 06:27:29Z" duration="0.135495" total="4" passed="4" failed="0" inconclusive="0" skipped="0" asserts="0">
              <properties />
              <test-case id="5846" name="OverrideVirtualRpcIsCalled" fullname="Mirror.Tests.RemoteAttrributeTest.TargetRpcOverrideTest.OverrideVirtualRpcIsCalled" methodname="OverrideVirtualRpcIsCalled" classname="Mirror.Tests.RemoteAttrributeTest.TargetRpcOverrideTest" runstate="Runnable" seed="1069320181" result="Passed" start-time="2021-03-06 06:27:29Z" end-time="2021-03-06 06:27:29Z" duration="0.023322" asserts="0">
                <properties />
                <output><![CDATA[Server started listening
Shutting down client.
]]></output>
              </test-case>
              <test-case id="5847" name="OverrideVirtualWithBaseCallsBothVirtualAndBase" fullname="Mirror.Tests.RemoteAttrributeTest.TargetRpcOverrideTest.OverrideVirtualWithBaseCallsBothVirtualAndBase" methodname="OverrideVirtualWithBaseCallsBothVirtualAndBase" classname="Mirror.Tests.RemoteAttrributeTest.TargetRpcOverrideTest" runstate="Runnable" seed="2115602297" result="Passed" start-time="2021-03-06 06:27:29Z" end-time="2021-03-06 06:27:29Z" duration="0.033907" asserts="0">
                <properties />
                <output><![CDATA[Server started listening
Shutting down client.
]]></output>
              </test-case>
              <test-case id="5845" name="VirtualCommandWithNoOverrideIsCalled" fullname="Mirror.Tests.RemoteAttrributeTest.TargetRpcOverrideTest.VirtualCommandWithNoOverrideIsCalled" methodname="VirtualCommandWithNoOverrideIsCalled" classname="Mirror.Tests.RemoteAttrributeTest.TargetRpcOverrideTest" runstate="Runnable" seed="2122075545" result="Passed" start-time="2021-03-06 06:27:29Z" end-time="2021-03-06 06:27:29Z" duration="0.030420" asserts="0">
                <properties />
                <output><![CDATA[Server started listening
Shutting down client.
]]></output>
              </test-case>
              <test-case id="5844" name="VirtualRpcIsCalled" fullname="Mirror.Tests.RemoteAttrributeTest.TargetRpcOverrideTest.VirtualRpcIsCalled" methodname="VirtualRpcIsCalled" classname="Mirror.Tests.RemoteAttrributeTest.TargetRpcOverrideTest" runstate="Runnable" seed="1783413808" result="Passed" start-time="2021-03-06 06:27:29Z" end-time="2021-03-06 06:27:29Z" duration="0.034836" asserts="0">
                <properties />
                <output><![CDATA[Server started listening
Shutting down client.
]]></output>
              </test-case>
            </test-suite>
            <test-suite type="TestFixture" id="5848" name="TargetRpcTest" fullname="Mirror.Tests.RemoteAttrributeTest.TargetRpcTest" classname="Mirror.Tests.RemoteAttrributeTest.TargetRpcTest" runstate="Runnable" testcasecount="7" result="Passed" start-time="2021-03-06 06:27:29Z" end-time="2021-03-06 06:27:29Z" duration="0.250838" total="7" passed="7" failed="0" inconclusive="0" skipped="0" asserts="0">
              <properties />
              <test-case id="5853" name="ErrorForTargetRpcWhenNotGivenConnectionToClient" fullname="Mirror.Tests.RemoteAttrributeTest.TargetRpcTest.ErrorForTargetRpcWhenNotGivenConnectionToClient" methodname="ErrorForTargetRpcWhenNotGivenConnectionToClient" classname="Mirror.Tests.RemoteAttrributeTest.TargetRpcTest" runstate="Runnable" seed="45232688" result="Passed" start-time="2021-03-06 06:27:29Z" end-time="2021-03-06 06:27:29Z" duration="0.026227" asserts="0">
                <properties />
                <output><![CDATA[Server started listening
TargetRPC SendIntWithTarget requires a NetworkConnectionToClient but was given FakeConnection
Shutting down client.
]]></output>
              </test-case>
              <test-case id="5855" name="ErrorForTargetRpcWhenObjetNotSpawned" fullname="Mirror.Tests.RemoteAttrributeTest.TargetRpcTest.ErrorForTargetRpcWhenObjetNotSpawned" methodname="ErrorForTargetRpcWhenObjetNotSpawned" classname="Mirror.Tests.RemoteAttrributeTest.TargetRpcTest" runstate="Runnable" seed="828769615" result="Passed" start-time="2021-03-06 06:27:29Z" end-time="2021-03-06 06:27:29Z" duration="0.034513" asserts="0">
                <properties />
                <output><![CDATA[Server started listening
TargetRpc SendInt called on New Game Object but that object has not been spawned or has been unspawned
Shutting down client.
]]></output>
              </test-case>
              <test-case id="5854" name="ErrorForTargetRpcWhenServerNotActive" fullname="Mirror.Tests.RemoteAttrributeTest.TargetRpcTest.ErrorForTargetRpcWhenServerNotActive" methodname="ErrorForTargetRpcWhenServerNotActive" classname="Mirror.Tests.RemoteAttrributeTest.TargetRpcTest" runstate="Runnable" seed="708828302" result="Passed" start-time="2021-03-06 06:27:29Z" end-time="2021-03-06 06:27:29Z" duration="0.033233" asserts="0">
                <properties />
                <output><![CDATA[Server started listening
TargetRPC SendInt called when server not active
Shutting down client.
]]></output>
              </test-case>
              <test-case id="5851" name="ErrorForTargetRpcWithNoOwner" fullname="Mirror.Tests.RemoteAttrributeTest.TargetRpcTest.ErrorForTargetRpcWithNoOwner" methodname="ErrorForTargetRpcWithNoOwner" classname="Mirror.Tests.RemoteAttrributeTest.TargetRpcTest" runstate="Runnable" seed="1360232380" result="Passed" start-time="2021-03-06 06:27:29Z" end-time="2021-03-06 06:27:29Z" duration="0.034214" asserts="0">
                <properties />
                <output><![CDATA[Server started listening
TargetRPC SendInt was given a null connection, make sure the object has an owner or you pass in the target connection
Shutting down client.
]]></output>
              </test-case>
              <test-case id="5852" name="ErrorForTargetRpcWithNullArgment" fullname="Mirror.Tests.RemoteAttrributeTest.TargetRpcTest.ErrorForTargetRpcWithNullArgment" methodname="ErrorForTargetRpcWithNullArgment" classname="Mirror.Tests.RemoteAttrributeTest.TargetRpcTest" runstate="Runnable" seed="1070891314" result="Passed" start-time="2021-03-06 06:27:29Z" end-time="2021-03-06 06:27:29Z" duration="0.034373" asserts="0">
                <properties />
                <output><![CDATA[Server started listening
TargetRPC SendIntWithTarget was given a null connection, make sure the object has an owner or you pass in the target connection
Shutting down client.
]]></output>
              </test-case>
              <test-case id="5849" name="TargetRpcIsCalled" fullname="Mirror.Tests.RemoteAttrributeTest.TargetRpcTest.TargetRpcIsCalled" methodname="TargetRpcIsCalled" classname="Mirror.Tests.RemoteAttrributeTest.TargetRpcTest" runstate="Runnable" seed="973608309" result="Passed" start-time="2021-03-06 06:27:29Z" end-time="2021-03-06 06:27:29Z" duration="0.029099" asserts="0">
                <properties />
                <output><![CDATA[Server started listening
Shutting down client.
]]></output>
              </test-case>
              <test-case id="5850" name="TargetRpcIsCalledOnTarget" fullname="Mirror.Tests.RemoteAttrributeTest.TargetRpcTest.TargetRpcIsCalledOnTarget" methodname="TargetRpcIsCalledOnTarget" classname="Mirror.Tests.RemoteAttrributeTest.TargetRpcTest" runstate="Runnable" seed="1859155325" result="Passed" start-time="2021-03-06 06:27:29Z" end-time="2021-03-06 06:27:29Z" duration="0.038760" asserts="0">
                <properties />
                <output><![CDATA[Server started listening
Shutting down client.
]]></output>
              </test-case>
            </test-suite>
          </test-suite>
          <test-suite type="TestFixture" id="4616" name="ScriptableObjectWriterTest" fullname="Mirror.Tests.ScriptableObjectWriterTest" classname="Mirror.Tests.ScriptableObjectWriterTest" runstate="Runnable" testcasecount="1" result="Passed" start-time="2021-03-06 06:27:29Z" end-time="2021-03-06 06:27:29Z" duration="0.010317" total="1" passed="1" failed="0" inconclusive="0" skipped="0" asserts="0">
            <properties />
            <test-case id="4617" name="TestWriteScriptableObject" fullname="Mirror.Tests.ScriptableObjectWriterTest.TestWriteScriptableObject" methodname="TestWriteScriptableObject" classname="Mirror.Tests.ScriptableObjectWriterTest" runstate="Runnable" seed="1137623821" result="Passed" start-time="2021-03-06 06:27:29Z" end-time="2021-03-06 06:27:29Z" duration="0.004288" asserts="0">
              <properties />
            </test-case>
          </test-suite>
          <test-suite type="TestSuite" id="5885" name="StructMessages" fullname="Mirror.Tests.StructMessages" runstate="Runnable" testcasecount="1" result="Passed" start-time="2021-03-06 06:27:29Z" end-time="2021-03-06 06:27:29Z" duration="0.018744" total="1" passed="1" failed="0" inconclusive="0" skipped="0" asserts="0">
            <properties />
            <test-suite type="TestFixture" id="4776" name="StructMessagesTests" fullname="Mirror.Tests.StructMessages.StructMessagesTests" classname="Mirror.Tests.StructMessages.StructMessagesTests" runstate="Runnable" testcasecount="1" result="Passed" start-time="2021-03-06 06:27:29Z" end-time="2021-03-06 06:27:29Z" duration="0.008472" total="1" passed="1" failed="0" inconclusive="0" skipped="0" asserts="0">
              <properties />
              <test-case id="4777" name="SerializeAreAddedWhenEmptyInStruct" fullname="Mirror.Tests.StructMessages.StructMessagesTests.SerializeAreAddedWhenEmptyInStruct" methodname="SerializeAreAddedWhenEmptyInStruct" classname="Mirror.Tests.StructMessages.StructMessagesTests" runstate="Runnable" seed="1934533347" result="Passed" start-time="2021-03-06 06:27:29Z" end-time="2021-03-06 06:27:29Z" duration="0.002284" asserts="0">
                <properties />
              </test-case>
            </test-suite>
          </test-suite>
          <test-suite type="TestFixture" id="4618" name="SyncDictionaryTest" fullname="Mirror.Tests.SyncDictionaryTest" classname="Mirror.Tests.SyncDictionaryTest" runstate="Runnable" testcasecount="26" result="Passed" start-time="2021-03-06 06:27:29Z" end-time="2021-03-06 06:27:30Z" duration="0.464599" total="26" passed="26" failed="0" inconclusive="0" skipped="0" asserts="0">
            <properties />
            <test-case id="4632" name="CallbackRemoveTest" fullname="Mirror.Tests.SyncDictionaryTest.CallbackRemoveTest" methodname="CallbackRemoveTest" classname="Mirror.Tests.SyncDictionaryTest" runstate="Runnable" seed="707278118" result="Passed" start-time="2021-03-06 06:27:29Z" end-time="2021-03-06 06:27:29Z" duration="0.024424" asserts="0">
              <properties />
            </test-case>
            <test-case id="4630" name="CallbackTest" fullname="Mirror.Tests.SyncDictionaryTest.CallbackTest" methodname="CallbackTest" classname="Mirror.Tests.SyncDictionaryTest" runstate="Runnable" seed="418433135" result="Passed" start-time="2021-03-06 06:27:29Z" end-time="2021-03-06 06:27:29Z" duration="0.013955" asserts="0">
              <properties />
            </test-case>
            <test-case id="4636" name="CopyToOutOfBoundsTest" fullname="Mirror.Tests.SyncDictionaryTest.CopyToOutOfBoundsTest" methodname="CopyToOutOfBoundsTest" classname="Mirror.Tests.SyncDictionaryTest" runstate="Runnable" seed="698882431" result="Passed" start-time="2021-03-06 06:27:29Z" end-time="2021-03-06 06:27:29Z" duration="0.018902" asserts="0">
              <properties />
            </test-case>
            <test-case id="4635" name="CopyToOutOfRangeTest" fullname="Mirror.Tests.SyncDictionaryTest.CopyToOutOfRangeTest" methodname="CopyToOutOfRangeTest" classname="Mirror.Tests.SyncDictionaryTest" runstate="Runnable" seed="103502332" result="Passed" start-time="2021-03-06 06:27:29Z" end-time="2021-03-06 06:27:29Z" duration="0.014662" asserts="0">
              <properties />
            </test-case>
            <test-case id="4634" name="CopyToTest" fullname="Mirror.Tests.SyncDictionaryTest.CopyToTest" methodname="CopyToTest" classname="Mirror.Tests.SyncDictionaryTest" runstate="Runnable" seed="1086515920" result="Passed" start-time="2021-03-06 06:27:29Z" end-time="2021-03-06 06:27:29Z" duration="0.018747" asserts="0">
              <properties />
            </test-case>
            <test-case id="4633" name="CountTest" fullname="Mirror.Tests.SyncDictionaryTest.CountTest" methodname="CountTest" classname="Mirror.Tests.SyncDictionaryTest" runstate="Runnable" seed="834023985" result="Passed" start-time="2021-03-06 06:27:29Z" end-time="2021-03-06 06:27:29Z" duration="0.014640" asserts="0">
              <properties />
            </test-case>
            <test-case id="4640" name="DirtyTest" fullname="Mirror.Tests.SyncDictionaryTest.DirtyTest" methodname="DirtyTest" classname="Mirror.Tests.SyncDictionaryTest" runstate="Runnable" seed="1696834817" result="Passed" start-time="2021-03-06 06:27:29Z" end-time="2021-03-06 06:27:29Z" duration="0.015560" asserts="0">
              <properties />
            </test-case>
            <test-case id="4641" name="ObjectCanBeReusedAfterReset" fullname="Mirror.Tests.SyncDictionaryTest.ObjectCanBeReusedAfterReset" methodname="ObjectCanBeReusedAfterReset" classname="Mirror.Tests.SyncDictionaryTest" runstate="Runnable" seed="1552322225" result="Passed" start-time="2021-03-06 06:27:29Z" end-time="2021-03-06 06:27:29Z" duration="0.013778" asserts="0">
              <properties />
            </test-case>
            <test-case id="4638" name="ReadOnlyTest" fullname="Mirror.Tests.SyncDictionaryTest.ReadOnlyTest" methodname="ReadOnlyTest" classname="Mirror.Tests.SyncDictionaryTest" runstate="Runnable" seed="668376621" result="Passed" start-time="2021-03-06 06:27:29Z" end-time="2021-03-06 06:27:29Z" duration="0.015003" asserts="0">
              <properties />
            </test-case>
            <test-case id="4643" name="ResetShouldClearChanges" fullname="Mirror.Tests.SyncDictionaryTest.ResetShouldClearChanges" methodname="ResetShouldClearChanges" classname="Mirror.Tests.SyncDictionaryTest" runstate="Runnable" seed="1674020484" result="Passed" start-time="2021-03-06 06:27:29Z" end-time="2021-03-06 06:27:30Z" duration="0.014897" asserts="0">
              <properties />
            </test-case>
            <test-case id="4644" name="ResetShouldClearItems" fullname="Mirror.Tests.SyncDictionaryTest.ResetShouldClearItems" methodname="ResetShouldClearItems" classname="Mirror.Tests.SyncDictionaryTest" runstate="Runnable" seed="1537481457" result="Passed" start-time="2021-03-06 06:27:30Z" end-time="2021-03-06 06:27:30Z" duration="0.018974" asserts="0">
              <properties />
            </test-case>
            <test-case id="4642" name="ResetShouldSetReadOnlyToFalse" fullname="Mirror.Tests.SyncDictionaryTest.ResetShouldSetReadOnlyToFalse" methodname="ResetShouldSetReadOnlyToFalse" classname="Mirror.Tests.SyncDictionaryTest" runstate="Runnable" seed="1381607540" result="Passed" start-time="2021-03-06 06:27:30Z" end-time="2021-03-06 06:27:30Z" duration="0.014129" asserts="0">
              <properties />
            </test-case>
            <test-case id="4631" name="ServerCallbackTest" fullname="Mirror.Tests.SyncDictionaryTest.ServerCallbackTest" methodname="ServerCallbackTest" classname="Mirror.Tests.SyncDictionaryTest" runstate="Runnable" seed="679232070" result="Passed" start-time="2021-03-06 06:27:30Z" end-time="2021-03-06 06:27:30Z" duration="0.014730" asserts="0">
              <properties />
            </test-case>
            <test-case id="4620" name="TestAdd" fullname="Mirror.Tests.SyncDictionaryTest.TestAdd" methodname="TestAdd" classname="Mirror.Tests.SyncDictionaryTest" runstate="Runnable" seed="1995811493" result="Passed" start-time="2021-03-06 06:27:30Z" end-time="2021-03-06 06:27:30Z" duration="0.015160" asserts="0">
              <properties />
            </test-case>
            <test-case id="4623" name="TestBareSet" fullname="Mirror.Tests.SyncDictionaryTest.TestBareSet" methodname="TestBareSet" classname="Mirror.Tests.SyncDictionaryTest" runstate="Runnable" seed="2002083463" result="Passed" start-time="2021-03-06 06:27:30Z" end-time="2021-03-06 06:27:30Z" duration="0.014197" asserts="0">
              <properties />
            </test-case>
            <test-case id="4624" name="TestBareSetNull" fullname="Mirror.Tests.SyncDictionaryTest.TestBareSetNull" methodname="TestBareSetNull" classname="Mirror.Tests.SyncDictionaryTest" runstate="Runnable" seed="1668860838" result="Passed" start-time="2021-03-06 06:27:30Z" end-time="2021-03-06 06:27:30Z" duration="0.015013" asserts="0">
              <properties />
            </test-case>
            <test-case id="4621" name="TestClear" fullname="Mirror.Tests.SyncDictionaryTest.TestClear" methodname="TestClear" classname="Mirror.Tests.SyncDictionaryTest" runstate="Runnable" seed="2020129057" result="Passed" start-time="2021-03-06 06:27:30Z" end-time="2021-03-06 06:27:30Z" duration="0.019043" asserts="0">
              <properties />
            </test-case>
            <test-case id="4625" name="TestConsecutiveSet" fullname="Mirror.Tests.SyncDictionaryTest.TestConsecutiveSet" methodname="TestConsecutiveSet" classname="Mirror.Tests.SyncDictionaryTest" runstate="Runnable" seed="810321676" result="Passed" start-time="2021-03-06 06:27:30Z" end-time="2021-03-06 06:27:30Z" duration="0.013417" asserts="0">
              <properties />
            </test-case>
            <test-case id="4629" name="TestContains" fullname="Mirror.Tests.SyncDictionaryTest.TestContains" methodname="TestContains" classname="Mirror.Tests.SyncDictionaryTest" runstate="Runnable" seed="951389957" result="Passed" start-time="2021-03-06 06:27:30Z" end-time="2021-03-06 06:27:30Z" duration="0.018908" asserts="0">
              <properties />
            </test-case>
            <test-case id="4619" name="TestInit" fullname="Mirror.Tests.SyncDictionaryTest.TestInit" methodname="TestInit" classname="Mirror.Tests.SyncDictionaryTest" runstate="Runnable" seed="1434826302" result="Passed" start-time="2021-03-06 06:27:30Z" end-time="2021-03-06 06:27:30Z" duration="0.014753" asserts="0">
              <properties />
            </test-case>
            <test-case id="4628" name="TestMultSync" fullname="Mirror.Tests.SyncDictionaryTest.TestMultSync" methodname="TestMultSync" classname="Mirror.Tests.SyncDictionaryTest" runstate="Runnable" seed="1824810982" result="Passed" start-time="2021-03-06 06:27:30Z" end-time="2021-03-06 06:27:30Z" duration="0.015117" asserts="0">
              <properties />
            </test-case>
            <test-case id="4626" name="TestNullSet" fullname="Mirror.Tests.SyncDictionaryTest.TestNullSet" methodname="TestNullSet" classname="Mirror.Tests.SyncDictionaryTest" runstate="Runnable" seed="2092262680" result="Passed" start-time="2021-03-06 06:27:30Z" end-time="2021-03-06 06:27:30Z" duration="0.015231" asserts="0">
              <properties />
            </test-case>
            <test-case id="4627" name="TestRemove" fullname="Mirror.Tests.SyncDictionaryTest.TestRemove" methodname="TestRemove" classname="Mirror.Tests.SyncDictionaryTest" runstate="Runnable" seed="2035463869" result="Passed" start-time="2021-03-06 06:27:30Z" end-time="2021-03-06 06:27:30Z" duration="0.014679" asserts="0">
              <properties />
            </test-case>
            <test-case id="4637" name="TestRemovePair" fullname="Mirror.Tests.SyncDictionaryTest.TestRemovePair" methodname="TestRemovePair" classname="Mirror.Tests.SyncDictionaryTest" runstate="Runnable" seed="231298288" result="Passed" start-time="2021-03-06 06:27:30Z" end-time="2021-03-06 06:27:30Z" duration="0.014360" asserts="0">
              <properties />
            </test-case>
            <test-case id="4622" name="TestSet" fullname="Mirror.Tests.SyncDictionaryTest.TestSet" methodname="TestSet" classname="Mirror.Tests.SyncDictionaryTest" runstate="Runnable" seed="424955734" result="Passed" start-time="2021-03-06 06:27:30Z" end-time="2021-03-06 06:27:30Z" duration="0.019287" asserts="0">
              <properties />
            </test-case>
            <test-case id="4639" name="WritingToReadOnlyThrows" fullname="Mirror.Tests.SyncDictionaryTest.WritingToReadOnlyThrows" methodname="WritingToReadOnlyThrows" classname="Mirror.Tests.SyncDictionaryTest" runstate="Runnable" seed="1599306875" result="Passed" start-time="2021-03-06 06:27:30Z" end-time="2021-03-06 06:27:30Z" duration="0.014479" asserts="0">
              <properties />
            </test-case>
          </test-suite>
          <test-suite type="TestFixture" id="4645" name="SyncListClassTest" fullname="Mirror.Tests.SyncListClassTest" classname="Mirror.Tests.SyncListClassTest" runstate="Runnable" testcasecount="2" result="Passed" start-time="2021-03-06 06:27:30Z" end-time="2021-03-06 06:27:30Z" duration="0.018775" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
            <properties />
            <test-case id="4647" name="ClearShouldClearAll" fullname="Mirror.Tests.SyncListClassTest.ClearShouldClearAll" methodname="ClearShouldClearAll" classname="Mirror.Tests.SyncListClassTest" runstate="Runnable" seed="509034002" result="Passed" start-time="2021-03-06 06:27:30Z" end-time="2021-03-06 06:27:30Z" duration="0.007051" asserts="0">
              <properties />
            </test-case>
            <test-case id="4646" name="RemoveShouldRemoveItem" fullname="Mirror.Tests.SyncListClassTest.RemoveShouldRemoveItem" methodname="RemoveShouldRemoveItem" classname="Mirror.Tests.SyncListClassTest" runstate="Runnable" seed="1607149537" result="Passed" start-time="2021-03-06 06:27:30Z" end-time="2021-03-06 06:27:30Z" duration="0.001929" asserts="0">
              <properties />
            </test-case>
          </test-suite>
          <test-suite type="TestFixture" id="4648" name="SyncListStructTest" fullname="Mirror.Tests.SyncListStructTest" classname="Mirror.Tests.SyncListStructTest" runstate="Runnable" testcasecount="2" result="Passed" start-time="2021-03-06 06:27:30Z" end-time="2021-03-06 06:27:30Z" duration="0.020785" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
            <properties />
            <test-case id="4649" name="ListIsDirtyWhenModifingAndSettingStruct" fullname="Mirror.Tests.SyncListStructTest.ListIsDirtyWhenModifingAndSettingStruct" methodname="ListIsDirtyWhenModifingAndSettingStruct" classname="Mirror.Tests.SyncListStructTest" runstate="Runnable" seed="1842971080" result="Passed" start-time="2021-03-06 06:27:30Z" end-time="2021-03-06 06:27:30Z" duration="0.007283" asserts="0">
              <properties />
            </test-case>
            <test-case id="4650" name="OldValueShouldNotBeNewValue" fullname="Mirror.Tests.SyncListStructTest.OldValueShouldNotBeNewValue" methodname="OldValueShouldNotBeNewValue" classname="Mirror.Tests.SyncListStructTest" runstate="Runnable" seed="1746804357" result="Passed" start-time="2021-03-06 06:27:30Z" end-time="2021-03-06 06:27:30Z" duration="0.001465" asserts="0">
              <properties />
            </test-case>
          </test-suite>
          <test-suite type="TestFixture" id="4651" name="SyncListTest" fullname="Mirror.Tests.SyncListTest" classname="Mirror.Tests.SyncListTest" runstate="Runnable" testcasecount="33" result="Passed" start-time="2021-03-06 06:27:30Z" end-time="2021-03-06 06:27:31Z" duration="0.672087" total="33" passed="33" failed="0" inconclusive="0" skipped="0" asserts="0">
            <properties />
            <test-case id="4676" name="CallbackRemoveAtTest" fullname="Mirror.Tests.SyncListTest.CallbackRemoveAtTest" methodname="CallbackRemoveAtTest" classname="Mirror.Tests.SyncListTest" runstate="Runnable" seed="689225691" result="Passed" start-time="2021-03-06 06:27:30Z" end-time="2021-03-06 06:27:30Z" duration="0.019253" asserts="0">
              <properties />
            </test-case>
            <test-case id="4675" name="CallbackRemoveTest" fullname="Mirror.Tests.SyncListTest.CallbackRemoveTest" methodname="CallbackRemoveTest" classname="Mirror.Tests.SyncListTest" runstate="Runnable" seed="1405770404" result="Passed" start-time="2021-03-06 06:27:30Z" end-time="2021-03-06 06:27:30Z" duration="0.099019" asserts="0">
              <properties />
            </test-case>
            <test-case id="4674" name="CallbackTest" fullname="Mirror.Tests.SyncListTest.CallbackTest" methodname="CallbackTest" classname="Mirror.Tests.SyncListTest" runstate="Runnable" seed="1768702375" result="Passed" start-time="2021-03-06 06:27:30Z" end-time="2021-03-06 06:27:30Z" duration="0.014279" asserts="0">
              <properties />
            </test-case>
            <test-case id="4677" name="CountTest" fullname="Mirror.Tests.SyncListTest.CountTest" methodname="CountTest" classname="Mirror.Tests.SyncListTest" runstate="Runnable" seed="828166422" result="Passed" start-time="2021-03-06 06:27:30Z" end-time="2021-03-06 06:27:30Z" duration="0.014319" asserts="0">
              <properties />
            </test-case>
            <test-case id="4680" name="DirtyTest" fullname="Mirror.Tests.SyncListTest.DirtyTest" methodname="DirtyTest" classname="Mirror.Tests.SyncListTest" runstate="Runnable" seed="62580719" result="Passed" start-time="2021-03-06 06:27:30Z" end-time="2021-03-06 06:27:30Z" duration="0.015423" asserts="0">
              <properties />
            </test-case>
            <test-case id="4681" name="ObjectCanBeReusedAfterReset" fullname="Mirror.Tests.SyncListTest.ObjectCanBeReusedAfterReset" methodname="ObjectCanBeReusedAfterReset" classname="Mirror.Tests.SyncListTest" runstate="Runnable" seed="1636098290" result="Passed" start-time="2021-03-06 06:27:30Z" end-time="2021-03-06 06:27:30Z" duration="0.018256" asserts="0">
              <properties />
            </test-case>
            <test-case id="4678" name="ReadOnlyTest" fullname="Mirror.Tests.SyncListTest.ReadOnlyTest" methodname="ReadOnlyTest" classname="Mirror.Tests.SyncListTest" runstate="Runnable" seed="1063630911" result="Passed" start-time="2021-03-06 06:27:30Z" end-time="2021-03-06 06:27:30Z" duration="0.014280" asserts="0">
              <properties />
            </test-case>
            <test-case id="4683" name="ResetShouldClearChanges" fullname="Mirror.Tests.SyncListTest.ResetShouldClearChanges" methodname="ResetShouldClearChanges" classname="Mirror.Tests.SyncListTest" runstate="Runnable" seed="1704926063" result="Passed" start-time="2021-03-06 06:27:30Z" end-time="2021-03-06 06:27:30Z" duration="0.014861" asserts="0">
              <properties />
            </test-case>
            <test-case id="4684" name="ResetShouldClearItems" fullname="Mirror.Tests.SyncListTest.ResetShouldClearItems" methodname="ResetShouldClearItems" classname="Mirror.Tests.SyncListTest" runstate="Runnable" seed="579880568" result="Passed" start-time="2021-03-06 06:27:30Z" end-time="2021-03-06 06:27:30Z" duration="0.014669" asserts="0">
              <properties />
            </test-case>
            <test-case id="4682" name="ResetShouldSetReadOnlyToFalse" fullname="Mirror.Tests.SyncListTest.ResetShouldSetReadOnlyToFalse" methodname="ResetShouldSetReadOnlyToFalse" classname="Mirror.Tests.SyncListTest" runstate="Runnable" seed="410258189" result="Passed" start-time="2021-03-06 06:27:30Z" end-time="2021-03-06 06:27:30Z" duration="0.018983" asserts="0">
              <properties />
            </test-case>
            <test-case id="4671" name="SyncListBoolTest" fullname="Mirror.Tests.SyncListTest.SyncListBoolTest" methodname="SyncListBoolTest" classname="Mirror.Tests.SyncListTest" runstate="Runnable" seed="495408086" result="Passed" start-time="2021-03-06 06:27:30Z" end-time="2021-03-06 06:27:30Z" duration="0.014730" asserts="0">
              <properties />
            </test-case>
            <test-case id="4673" name="SyncListFloatTest" fullname="Mirror.Tests.SyncListTest.SyncListFloatTest" methodname="SyncListFloatTest" classname="Mirror.Tests.SyncListTest" runstate="Runnable" seed="1096087021" result="Passed" start-time="2021-03-06 06:27:30Z" end-time="2021-03-06 06:27:30Z" duration="0.018342" asserts="0">
              <properties />
            </test-case>
            <test-case id="4670" name="SyncListIntTest" fullname="Mirror.Tests.SyncListTest.SyncListIntTest" methodname="SyncListIntTest" classname="Mirror.Tests.SyncListTest" runstate="Runnable" seed="1922631656" result="Passed" start-time="2021-03-06 06:27:30Z" end-time="2021-03-06 06:27:30Z" duration="0.014820" asserts="0">
              <properties />
            </test-case>
            <test-case id="4672" name="SyncListUIntTest" fullname="Mirror.Tests.SyncListTest.SyncListUIntTest" methodname="SyncListUIntTest" classname="Mirror.Tests.SyncListTest" runstate="Runnable" seed="1479398379" result="Passed" start-time="2021-03-06 06:27:30Z" end-time="2021-03-06 06:27:30Z" duration="0.019490" asserts="0">
              <properties />
            </test-case>
            <test-case id="4653" name="TestAdd" fullname="Mirror.Tests.SyncListTest.TestAdd" methodname="TestAdd" classname="Mirror.Tests.SyncListTest" runstate="Runnable" seed="667566789" result="Passed" start-time="2021-03-06 06:27:30Z" end-time="2021-03-06 06:27:30Z" duration="0.014488" asserts="0">
              <properties />
            </test-case>
            <test-case id="4654" name="TestAddRange" fullname="Mirror.Tests.SyncListTest.TestAddRange" methodname="TestAddRange" classname="Mirror.Tests.SyncListTest" runstate="Runnable" seed="696784714" result="Passed" start-time="2021-03-06 06:27:30Z" end-time="2021-03-06 06:27:30Z" duration="0.014347" asserts="0">
              <properties />
            </test-case>
            <test-case id="4655" name="TestClear" fullname="Mirror.Tests.SyncListTest.TestClear" methodname="TestClear" classname="Mirror.Tests.SyncListTest" runstate="Runnable" seed="1093789241" result="Passed" start-time="2021-03-06 06:27:30Z" end-time="2021-03-06 06:27:30Z" duration="0.014892" asserts="0">
              <properties />
            </test-case>
            <test-case id="4665" name="TestFind" fullname="Mirror.Tests.SyncListTest.TestFind" methodname="TestFind" classname="Mirror.Tests.SyncListTest" runstate="Runnable" seed="2075058429" result="Passed" start-time="2021-03-06 06:27:30Z" end-time="2021-03-06 06:27:30Z" duration="0.015221" asserts="0">
              <properties />
            </test-case>
            <test-case id="4667" name="TestFindAll" fullname="Mirror.Tests.SyncListTest.TestFindAll" methodname="TestFindAll" classname="Mirror.Tests.SyncListTest" runstate="Runnable" seed="1196964979" result="Passed" start-time="2021-03-06 06:27:30Z" end-time="2021-03-06 06:27:30Z" duration="0.018486" asserts="0">
              <properties />
            </test-case>
            <test-case id="4668" name="TestFindAllNonExistent" fullname="Mirror.Tests.SyncListTest.TestFindAllNonExistent" methodname="TestFindAllNonExistent" classname="Mirror.Tests.SyncListTest" runstate="Runnable" seed="1709509834" result="Passed" start-time="2021-03-06 06:27:30Z" end-time="2021-03-06 06:27:30Z" duration="0.019205" asserts="0">
              <properties />
            </test-case>
            <test-case id="4664" name="TestFindIndex" fullname="Mirror.Tests.SyncListTest.TestFindIndex" methodname="TestFindIndex" classname="Mirror.Tests.SyncListTest" runstate="Runnable" seed="666204953" result="Passed" start-time="2021-03-06 06:27:30Z" end-time="2021-03-06 06:27:30Z" duration="0.019024" asserts="0">
              <properties />
            </test-case>
            <test-case id="4652" name="TestInit" fullname="Mirror.Tests.SyncListTest.TestInit" methodname="TestInit" classname="Mirror.Tests.SyncListTest" runstate="Runnable" seed="1570450995" result="Passed" start-time="2021-03-06 06:27:30Z" end-time="2021-03-06 06:27:30Z" duration="0.014210" asserts="0">
              <properties />
            </test-case>
            <test-case id="4656" name="TestInsert" fullname="Mirror.Tests.SyncListTest.TestInsert" methodname="TestInsert" classname="Mirror.Tests.SyncListTest" runstate="Runnable" seed="281490338" result="Passed" start-time="2021-03-06 06:27:30Z" end-time="2021-03-06 06:27:30Z" duration="0.019042" asserts="0">
              <properties />
            </test-case>
            <test-case id="4657" name="TestInsertRange" fullname="Mirror.Tests.SyncListTest.TestInsertRange" methodname="TestInsertRange" classname="Mirror.Tests.SyncListTest" runstate="Runnable" seed="584457493" result="Passed" start-time="2021-03-06 06:27:30Z" end-time="2021-03-06 06:27:30Z" duration="0.015387" asserts="0">
              <properties />
            </test-case>
            <test-case id="4669" name="TestMultSync" fullname="Mirror.Tests.SyncListTest.TestMultSync" methodname="TestMultSync" classname="Mirror.Tests.SyncListTest" runstate="Runnable" seed="2094493800" result="Passed" start-time="2021-03-06 06:27:30Z" end-time="2021-03-06 06:27:30Z" duration="0.014220" asserts="0">
              <properties />
            </test-case>
            <test-case id="4666" name="TestNoFind" fullname="Mirror.Tests.SyncListTest.TestNoFind" methodname="TestNoFind" classname="Mirror.Tests.SyncListTest" runstate="Runnable" seed="794241712" result="Passed" start-time="2021-03-06 06:27:30Z" end-time="2021-03-06 06:27:30Z" duration="0.015121" asserts="0">
              <properties />
            </test-case>
            <test-case id="4663" name="TestRemove" fullname="Mirror.Tests.SyncListTest.TestRemove" methodname="TestRemove" classname="Mirror.Tests.SyncListTest" runstate="Runnable" seed="1754315074" result="Passed" start-time="2021-03-06 06:27:30Z" end-time="2021-03-06 06:27:30Z" duration="0.014732" asserts="0">
              <properties />
            </test-case>
            <test-case id="4660" name="TestRemoveAll" fullname="Mirror.Tests.SyncListTest.TestRemoveAll" methodname="TestRemoveAll" classname="Mirror.Tests.SyncListTest" runstate="Runnable" seed="502384772" result="Passed" start-time="2021-03-06 06:27:30Z" end-time="2021-03-06 06:27:30Z" duration="0.018758" asserts="0">
              <properties />
            </test-case>
            <test-case id="4661" name="TestRemoveAllNone" fullname="Mirror.Tests.SyncListTest.TestRemoveAllNone" methodname="TestRemoveAllNone" classname="Mirror.Tests.SyncListTest" runstate="Runnable" seed="1413459283" result="Passed" start-time="2021-03-06 06:27:30Z" end-time="2021-03-06 06:27:30Z" duration="0.014758" asserts="0">
              <properties />
            </test-case>
            <test-case id="4662" name="TestRemoveAt" fullname="Mirror.Tests.SyncListTest.TestRemoveAt" methodname="TestRemoveAt" classname="Mirror.Tests.SyncListTest" runstate="Runnable" seed="1365113414" result="Passed" start-time="2021-03-06 06:27:30Z" end-time="2021-03-06 06:27:30Z" duration="0.015492" asserts="0">
              <properties />
            </test-case>
            <test-case id="4658" name="TestSet" fullname="Mirror.Tests.SyncListTest.TestSet" methodname="TestSet" classname="Mirror.Tests.SyncListTest" runstate="Runnable" seed="253412377" result="Passed" start-time="2021-03-06 06:27:30Z" end-time="2021-03-06 06:27:30Z" duration="0.014741" asserts="0">
              <properties />
            </test-case>
            <test-case id="4659" name="TestSetNull" fullname="Mirror.Tests.SyncListTest.TestSetNull" methodname="TestSetNull" classname="Mirror.Tests.SyncListTest" runstate="Runnable" seed="620822630" result="Passed" start-time="2021-03-06 06:27:30Z" end-time="2021-03-06 06:27:30Z" duration="0.014802" asserts="0">
              <properties />
            </test-case>
            <test-case id="4679" name="WritingToReadOnlyThrows" fullname="Mirror.Tests.SyncListTest.WritingToReadOnlyThrows" methodname="WritingToReadOnlyThrows" classname="Mirror.Tests.SyncListTest" runstate="Runnable" seed="987896367" result="Passed" start-time="2021-03-06 06:27:30Z" end-time="2021-03-06 06:27:31Z" duration="0.015009" asserts="0">
              <properties />
            </test-case>
          </test-suite>
          <test-suite type="TestFixture" id="4685" name="SyncSetTest" fullname="Mirror.Tests.SyncSetTest" classname="Mirror.Tests.SyncSetTest" runstate="Runnable" testcasecount="30" result="Passed" start-time="2021-03-06 06:27:31Z" end-time="2021-03-06 06:27:31Z" duration="0.521230" total="30" passed="30" failed="0" inconclusive="0" skipped="0" asserts="0">
            <properties />
            <test-case id="4692" name="CallbackRemoveTest" fullname="Mirror.Tests.SyncSetTest.CallbackRemoveTest" methodname="CallbackRemoveTest" classname="Mirror.Tests.SyncSetTest" runstate="Runnable" seed="445618201" result="Passed" start-time="2021-03-06 06:27:31Z" end-time="2021-03-06 06:27:31Z" duration="0.014783" asserts="0">
              <properties />
            </test-case>
            <test-case id="4691" name="CallbackTest" fullname="Mirror.Tests.SyncSetTest.CallbackTest" methodname="CallbackTest" classname="Mirror.Tests.SyncSetTest" runstate="Runnable" seed="2051097558" result="Passed" start-time="2021-03-06 06:27:31Z" end-time="2021-03-06 06:27:31Z" duration="0.018784" asserts="0">
              <properties />
            </test-case>
            <test-case id="4693" name="CountTest" fullname="Mirror.Tests.SyncSetTest.CountTest" methodname="CountTest" classname="Mirror.Tests.SyncSetTest" runstate="Runnable" seed="1692199631" result="Passed" start-time="2021-03-06 06:27:31Z" end-time="2021-03-06 06:27:31Z" duration="0.015193" asserts="0">
              <properties />
            </test-case>
            <test-case id="4712" name="ObjectCanBeReusedAfterReset" fullname="Mirror.Tests.SyncSetTest.ObjectCanBeReusedAfterReset" methodname="ObjectCanBeReusedAfterReset" classname="Mirror.Tests.SyncSetTest" runstate="Runnable" seed="1067237992" result="Passed" start-time="2021-03-06 06:27:31Z" end-time="2021-03-06 06:27:31Z" duration="0.015010" asserts="0">
              <properties />
            </test-case>
            <test-case id="4710" name="ReadOnlyTest" fullname="Mirror.Tests.SyncSetTest.ReadOnlyTest" methodname="ReadOnlyTest" classname="Mirror.Tests.SyncSetTest" runstate="Runnable" seed="1415112758" result="Passed" start-time="2021-03-06 06:27:31Z" end-time="2021-03-06 06:27:31Z" duration="0.014262" asserts="0">
              <properties />
            </test-case>
            <test-case id="4714" name="ResetShouldClearChanges" fullname="Mirror.Tests.SyncSetTest.ResetShouldClearChanges" methodname="ResetShouldClearChanges" classname="Mirror.Tests.SyncSetTest" runstate="Runnable" seed="16733324" result="Passed" start-time="2021-03-06 06:27:31Z" end-time="2021-03-06 06:27:31Z" duration="0.018537" asserts="0">
              <properties />
            </test-case>
            <test-case id="4715" name="ResetShouldClearItems" fullname="Mirror.Tests.SyncSetTest.ResetShouldClearItems" methodname="ResetShouldClearItems" classname="Mirror.Tests.SyncSetTest" runstate="Runnable" seed="537107620" result="Passed" start-time="2021-03-06 06:27:31Z" end-time="2021-03-06 06:27:31Z" duration="0.014358" asserts="0">
              <properties />
            </test-case>
            <test-case id="4713" name="ResetShouldSetReadOnlyToFalse" fullname="Mirror.Tests.SyncSetTest.ResetShouldSetReadOnlyToFalse" methodname="ResetShouldSetReadOnlyToFalse" classname="Mirror.Tests.SyncSetTest" runstate="Runnable" seed="1116818760" result="Passed" start-time="2021-03-06 06:27:31Z" end-time="2021-03-06 06:27:31Z" duration="0.014934" asserts="0">
              <properties />
            </test-case>
            <test-case id="4687" name="TestAdd" fullname="Mirror.Tests.SyncSetTest.TestAdd" methodname="TestAdd" classname="Mirror.Tests.SyncSetTest" runstate="Runnable" seed="1863334976" result="Passed" start-time="2021-03-06 06:27:31Z" end-time="2021-03-06 06:27:31Z" duration="0.014555" asserts="0">
              <properties />
            </test-case>
            <test-case id="4688" name="TestClear" fullname="Mirror.Tests.SyncSetTest.TestClear" methodname="TestClear" classname="Mirror.Tests.SyncSetTest" runstate="Runnable" seed="817380008" result="Passed" start-time="2021-03-06 06:27:31Z" end-time="2021-03-06 06:27:31Z" duration="0.015269" asserts="0">
              <properties />
            </test-case>
            <test-case id="4694" name="TestExceptWith" fullname="Mirror.Tests.SyncSetTest.TestExceptWith" methodname="TestExceptWith" classname="Mirror.Tests.SyncSetTest" runstate="Runnable" seed="407624114" result="Passed" start-time="2021-03-06 06:27:31Z" end-time="2021-03-06 06:27:31Z" duration="0.018795" asserts="0">
              <properties />
            </test-case>
            <test-case id="4695" name="TestExceptWithSelf" fullname="Mirror.Tests.SyncSetTest.TestExceptWithSelf" methodname="TestExceptWithSelf" classname="Mirror.Tests.SyncSetTest" runstate="Runnable" seed="543895174" result="Passed" start-time="2021-03-06 06:27:31Z" end-time="2021-03-06 06:27:31Z" duration="0.014759" asserts="0">
              <properties />
            </test-case>
            <test-case id="4686" name="TestInit" fullname="Mirror.Tests.SyncSetTest.TestInit" methodname="TestInit" classname="Mirror.Tests.SyncSetTest" runstate="Runnable" seed="987858150" result="Passed" start-time="2021-03-06 06:27:31Z" end-time="2021-03-06 06:27:31Z" duration="0.015571" asserts="0">
              <properties />
            </test-case>
            <test-case id="4696" name="TestIntersectWith" fullname="Mirror.Tests.SyncSetTest.TestIntersectWith" methodname="TestIntersectWith" classname="Mirror.Tests.SyncSetTest" runstate="Runnable" seed="1807881400" result="Passed" start-time="2021-03-06 06:27:31Z" end-time="2021-03-06 06:27:31Z" duration="0.014096" asserts="0">
              <properties />
            </test-case>
            <test-case id="4697" name="TestIntersectWithSet" fullname="Mirror.Tests.SyncSetTest.TestIntersectWithSet" methodname="TestIntersectWithSet" classname="Mirror.Tests.SyncSetTest" runstate="Runnable" seed="365612696" result="Passed" start-time="2021-03-06 06:27:31Z" end-time="2021-03-06 06:27:31Z" duration="0.015270" asserts="0">
              <properties />
            </test-case>
            <test-case id="4700" name="TestIsNotProperSubsetOf" fullname="Mirror.Tests.SyncSetTest.TestIsNotProperSubsetOf" methodname="TestIsNotProperSubsetOf" classname="Mirror.Tests.SyncSetTest" runstate="Runnable" seed="720397887" result="Passed" start-time="2021-03-06 06:27:31Z" end-time="2021-03-06 06:27:31Z" duration="0.014395" asserts="0">
              <properties />
            </test-case>
            <test-case id="4698" name="TestIsProperSubsetOf" fullname="Mirror.Tests.SyncSetTest.TestIsProperSubsetOf" methodname="TestIsProperSubsetOf" classname="Mirror.Tests.SyncSetTest" runstate="Runnable" seed="1463945547" result="Passed" start-time="2021-03-06 06:27:31Z" end-time="2021-03-06 06:27:31Z" duration="0.014817" asserts="0">
              <properties />
            </test-case>
            <test-case id="4699" name="TestIsProperSubsetOfSet" fullname="Mirror.Tests.SyncSetTest.TestIsProperSubsetOfSet" methodname="TestIsProperSubsetOfSet" classname="Mirror.Tests.SyncSetTest" runstate="Runnable" seed="1941358422" result="Passed" start-time="2021-03-06 06:27:31Z" end-time="2021-03-06 06:27:31Z" duration="0.018358" asserts="0">
              <properties />
            </test-case>
            <test-case id="4701" name="TestIsProperSuperSetOf" fullname="Mirror.Tests.SyncSetTest.TestIsProperSuperSetOf" methodname="TestIsProperSuperSetOf" classname="Mirror.Tests.SyncSetTest" runstate="Runnable" seed="865247159" result="Passed" start-time="2021-03-06 06:27:31Z" end-time="2021-03-06 06:27:31Z" duration="0.015127" asserts="0">
              <properties />
            </test-case>
            <test-case id="4702" name="TestIsSubsetOf" fullname="Mirror.Tests.SyncSetTest.TestIsSubsetOf" methodname="TestIsSubsetOf" classname="Mirror.Tests.SyncSetTest" runstate="Runnable" seed="1097139029" result="Passed" start-time="2021-03-06 06:27:31Z" end-time="2021-03-06 06:27:31Z" duration="0.014726" asserts="0">
              <properties />
            </test-case>
            <test-case id="4703" name="TestIsSupersetOf" fullname="Mirror.Tests.SyncSetTest.TestIsSupersetOf" methodname="TestIsSupersetOf" classname="Mirror.Tests.SyncSetTest" runstate="Runnable" seed="1892860076" result="Passed" start-time="2021-03-06 06:27:31Z" end-time="2021-03-06 06:27:31Z" duration="0.014885" asserts="0">
              <properties />
            </test-case>
            <test-case id="4690" name="TestMultSync" fullname="Mirror.Tests.SyncSetTest.TestMultSync" methodname="TestMultSync" classname="Mirror.Tests.SyncSetTest" runstate="Runnable" seed="991372721" result="Passed" start-time="2021-03-06 06:27:31Z" end-time="2021-03-06 06:27:31Z" duration="0.015144" asserts="0">
              <properties />
            </test-case>
            <test-case id="4704" name="TestOverlaps" fullname="Mirror.Tests.SyncSetTest.TestOverlaps" methodname="TestOverlaps" classname="Mirror.Tests.SyncSetTest" runstate="Runnable" seed="290861815" result="Passed" start-time="2021-03-06 06:27:31Z" end-time="2021-03-06 06:27:31Z" duration="0.014347" asserts="0">
              <properties />
            </test-case>
            <test-case id="4689" name="TestRemove" fullname="Mirror.Tests.SyncSetTest.TestRemove" methodname="TestRemove" classname="Mirror.Tests.SyncSetTest" runstate="Runnable" seed="506577133" result="Passed" start-time="2021-03-06 06:27:31Z" end-time="2021-03-06 06:27:31Z" duration="0.018730" asserts="0">
              <properties />
            </test-case>
            <test-case id="4705" name="TestSetEquals" fullname="Mirror.Tests.SyncSetTest.TestSetEquals" methodname="TestSetEquals" classname="Mirror.Tests.SyncSetTest" runstate="Runnable" seed="522322766" result="Passed" start-time="2021-03-06 06:27:31Z" end-time="2021-03-06 06:27:31Z" duration="0.015199" asserts="0">
              <properties />
            </test-case>
            <test-case id="4706" name="TestSymmetricExceptWith" fullname="Mirror.Tests.SyncSetTest.TestSymmetricExceptWith" methodname="TestSymmetricExceptWith" classname="Mirror.Tests.SyncSetTest" runstate="Runnable" seed="153466555" result="Passed" start-time="2021-03-06 06:27:31Z" end-time="2021-03-06 06:27:31Z" duration="0.014463" asserts="0">
              <properties />
            </test-case>
            <test-case id="4707" name="TestSymmetricExceptWithSelf" fullname="Mirror.Tests.SyncSetTest.TestSymmetricExceptWithSelf" methodname="TestSymmetricExceptWithSelf" classname="Mirror.Tests.SyncSetTest" runstate="Runnable" seed="759810057" result="Passed" start-time="2021-03-06 06:27:31Z" end-time="2021-03-06 06:27:31Z" duration="0.015026" asserts="0">
              <properties />
            </test-case>
            <test-case id="4708" name="TestUnionWith" fullname="Mirror.Tests.SyncSetTest.TestUnionWith" methodname="TestUnionWith" classname="Mirror.Tests.SyncSetTest" runstate="Runnable" seed="899072288" result="Passed" start-time="2021-03-06 06:27:31Z" end-time="2021-03-06 06:27:31Z" duration="0.013638" asserts="0">
              <properties />
            </test-case>
            <test-case id="4709" name="TestUnionWithSelf" fullname="Mirror.Tests.SyncSetTest.TestUnionWithSelf" methodname="TestUnionWithSelf" classname="Mirror.Tests.SyncSetTest" runstate="Runnable" seed="427607372" result="Passed" start-time="2021-03-06 06:27:31Z" end-time="2021-03-06 06:27:31Z" duration="0.018986" asserts="0">
              <properties />
            </test-case>
            <test-case id="4711" name="WritingToReadOnlyThrows" fullname="Mirror.Tests.SyncSetTest.WritingToReadOnlyThrows" methodname="WritingToReadOnlyThrows" classname="Mirror.Tests.SyncSetTest" runstate="Runnable" seed="495663154" result="Passed" start-time="2021-03-06 06:27:31Z" end-time="2021-03-06 06:27:31Z" duration="0.014458" asserts="0">
              <properties />
            </test-case>
          </test-suite>
          <test-suite type="TestSuite" id="5884" name="SyncVarTests" fullname="Mirror.Tests.SyncVarTests" runstate="Runnable" testcasecount="40" result="Skipped" label="Ignored" start-time="2021-03-06 06:27:31Z" end-time="2021-03-06 06:27:32Z" duration="1.322736" total="40" passed="38" failed="0" inconclusive="0" skipped="2" asserts="0">
            <properties />
            <reason>
              <message><![CDATA[One or more child tests were ignored]]></message>
            </reason>
            <test-suite type="TestFixture" id="4716" name="SyncVarHookTest" fullname="Mirror.Tests.SyncVarTests.SyncVarHookTest" classname="Mirror.Tests.SyncVarTests.SyncVarHookTest" runstate="Runnable" testcasecount="18" result="Passed" start-time="2021-03-06 06:27:31Z" end-time="2021-03-06 06:27:32Z" duration="0.600455" total="18" passed="18" failed="0" inconclusive="0" skipped="0" asserts="0">
              <properties />
              <test-suite type="ParameterizedMethod" id="4743" name="AbstractHook_HookCalledWhenSyncingChangedValue" fullname="Mirror.Tests.SyncVarTests.SyncVarHookTest.AbstractHook_HookCalledWhenSyncingChangedValue" classname="Mirror.Tests.SyncVarTests.SyncVarHookTest" runstate="Runnable" testcasecount="2" result="Passed" start-time="2021-03-06 06:27:31Z" end-time="2021-03-06 06:27:31Z" duration="0.062513" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                <properties />
                <test-case id="4741" name="AbstractHook_HookCalledWhenSyncingChangedValue(True)" fullname="Mirror.Tests.SyncVarTests.SyncVarHookTest.AbstractHook_HookCalledWhenSyncingChangedValue(True)" methodname="AbstractHook_HookCalledWhenSyncingChangedValue" classname="Mirror.Tests.SyncVarTests.SyncVarHookTest" runstate="Runnable" seed="2110604690" result="Passed" start-time="2021-03-06 06:27:31Z" end-time="2021-03-06 06:27:31Z" duration="0.019926" asserts="0">
                  <properties />
                </test-case>
                <test-case id="4742" name="AbstractHook_HookCalledWhenSyncingChangedValue(False)" fullname="Mirror.Tests.SyncVarTests.SyncVarHookTest.AbstractHook_HookCalledWhenSyncingChangedValue(False)" methodname="AbstractHook_HookCalledWhenSyncingChangedValue" classname="Mirror.Tests.SyncVarTests.SyncVarHookTest" runstate="Runnable" seed="1960701911" result="Passed" start-time="2021-03-06 06:27:31Z" end-time="2021-03-06 06:27:31Z" duration="0.035587" asserts="0">
                  <properties />
                </test-case>
              </test-suite>
              <test-suite type="ParameterizedMethod" id="4728" name="GameObjectHook_HookCalledWhenSyncingChangedValue" fullname="Mirror.Tests.SyncVarTests.SyncVarHookTest.GameObjectHook_HookCalledWhenSyncingChangedValue" classname="Mirror.Tests.SyncVarTests.SyncVarHookTest" runstate="Runnable" testcasecount="2" result="Passed" start-time="2021-03-06 06:27:31Z" end-time="2021-03-06 06:27:31Z" duration="0.063488" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                <properties />
                <test-case id="4726" name="GameObjectHook_HookCalledWhenSyncingChangedValue(True)" fullname="Mirror.Tests.SyncVarTests.SyncVarHookTest.GameObjectHook_HookCalledWhenSyncingChangedValue(True)" methodname="GameObjectHook_HookCalledWhenSyncingChangedValue" classname="Mirror.Tests.SyncVarTests.SyncVarHookTest" runstate="Runnable" seed="547118585" result="Passed" start-time="2021-03-06 06:27:31Z" end-time="2021-03-06 06:27:31Z" duration="0.020228" asserts="0">
                  <properties />
                </test-case>
                <test-case id="4727" name="GameObjectHook_HookCalledWhenSyncingChangedValue(False)" fullname="Mirror.Tests.SyncVarTests.SyncVarHookTest.GameObjectHook_HookCalledWhenSyncingChangedValue(False)" methodname="GameObjectHook_HookCalledWhenSyncingChangedValue" classname="Mirror.Tests.SyncVarTests.SyncVarHookTest" runstate="Runnable" seed="81643556" result="Passed" start-time="2021-03-06 06:27:31Z" end-time="2021-03-06 06:27:31Z" duration="0.033942" asserts="0">
                  <properties />
                </test-case>
              </test-suite>
              <test-suite type="ParameterizedMethod" id="4719" name="Hook_CalledWhenSyncingChangedValue" fullname="Mirror.Tests.SyncVarTests.SyncVarHookTest.Hook_CalledWhenSyncingChangedValue" classname="Mirror.Tests.SyncVarTests.SyncVarHookTest" runstate="Runnable" testcasecount="2" result="Passed" start-time="2021-03-06 06:27:31Z" end-time="2021-03-06 06:27:31Z" duration="0.063972" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                <properties />
                <test-case id="4717" name="Hook_CalledWhenSyncingChangedValue(True)" fullname="Mirror.Tests.SyncVarTests.SyncVarHookTest.Hook_CalledWhenSyncingChangedValue(True)" methodname="Hook_CalledWhenSyncingChangedValue" classname="Mirror.Tests.SyncVarTests.SyncVarHookTest" runstate="Runnable" seed="1817591300" result="Passed" start-time="2021-03-06 06:27:31Z" end-time="2021-03-06 06:27:31Z" duration="0.024411" asserts="0">
                  <properties />
                </test-case>
                <test-case id="4718" name="Hook_CalledWhenSyncingChangedValue(False)" fullname="Mirror.Tests.SyncVarTests.SyncVarHookTest.Hook_CalledWhenSyncingChangedValue(False)" methodname="Hook_CalledWhenSyncingChangedValue" classname="Mirror.Tests.SyncVarTests.SyncVarHookTest" runstate="Runnable" seed="353734680" result="Passed" start-time="2021-03-06 06:27:31Z" end-time="2021-03-06 06:27:31Z" duration="0.028952" asserts="0">
                  <properties />
                </test-case>
              </test-suite>
              <test-suite type="ParameterizedMethod" id="4722" name="Hook_NotCalledWhenSyncingSameValue" fullname="Mirror.Tests.SyncVarTests.SyncVarHookTest.Hook_NotCalledWhenSyncingSameValue" classname="Mirror.Tests.SyncVarTests.SyncVarHookTest" runstate="Runnable" testcasecount="2" result="Passed" start-time="2021-03-06 06:27:31Z" end-time="2021-03-06 06:27:31Z" duration="0.061603" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                <properties />
                <test-case id="4720" name="Hook_NotCalledWhenSyncingSameValue(True)" fullname="Mirror.Tests.SyncVarTests.SyncVarHookTest.Hook_NotCalledWhenSyncingSameValue(True)" methodname="Hook_NotCalledWhenSyncingSameValue" classname="Mirror.Tests.SyncVarTests.SyncVarHookTest" runstate="Runnable" seed="1200003766" result="Passed" start-time="2021-03-06 06:27:31Z" end-time="2021-03-06 06:27:31Z" duration="0.024995" asserts="0">
                  <properties />
                </test-case>
                <test-case id="4721" name="Hook_NotCalledWhenSyncingSameValue(False)" fullname="Mirror.Tests.SyncVarTests.SyncVarHookTest.Hook_NotCalledWhenSyncingSameValue(False)" methodname="Hook_NotCalledWhenSyncingSameValue" classname="Mirror.Tests.SyncVarTests.SyncVarHookTest" runstate="Runnable" seed="1298945864" result="Passed" start-time="2021-03-06 06:27:31Z" end-time="2021-03-06 06:27:31Z" duration="0.029104" asserts="0">
                  <properties />
                </test-case>
              </test-suite>
              <test-suite type="ParameterizedMethod" id="4734" name="NetworkBehaviourHook_HookCalledWhenSyncingChangedValue" fullname="Mirror.Tests.SyncVarTests.SyncVarHookTest.NetworkBehaviourHook_HookCalledWhenSyncingChangedValue" classname="Mirror.Tests.SyncVarTests.SyncVarHookTest" runstate="Runnable" testcasecount="2" result="Passed" start-time="2021-03-06 06:27:31Z" end-time="2021-03-06 06:27:31Z" duration="0.065873" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                <properties />
                <test-case id="4732" name="NetworkBehaviourHook_HookCalledWhenSyncingChangedValue(True)" fullname="Mirror.Tests.SyncVarTests.SyncVarHookTest.NetworkBehaviourHook_HookCalledWhenSyncingChangedValue(True)" methodname="NetworkBehaviourHook_HookCalledWhenSyncingChangedValue" classname="Mirror.Tests.SyncVarTests.SyncVarHookTest" runstate="Runnable" seed="2030935968" result="Passed" start-time="2021-03-06 06:27:31Z" end-time="2021-03-06 06:27:31Z" duration="0.028657" asserts="0">
                  <properties />
                </test-case>
                <test-case id="4733" name="NetworkBehaviourHook_HookCalledWhenSyncingChangedValue(False)" fullname="Mirror.Tests.SyncVarTests.SyncVarHookTest.NetworkBehaviourHook_HookCalledWhenSyncingChangedValue(False)" methodname="NetworkBehaviourHook_HookCalledWhenSyncingChangedValue" classname="Mirror.Tests.SyncVarTests.SyncVarHookTest" runstate="Runnable" seed="935617691" result="Passed" start-time="2021-03-06 06:27:31Z" end-time="2021-03-06 06:27:31Z" duration="0.029134" asserts="0">
                  <properties />
                </test-case>
              </test-suite>
              <test-suite type="ParameterizedMethod" id="4731" name="NetworkIdentityHook_HookCalledWhenSyncingChangedValue" fullname="Mirror.Tests.SyncVarTests.SyncVarHookTest.NetworkIdentityHook_HookCalledWhenSyncingChangedValue" classname="Mirror.Tests.SyncVarTests.SyncVarHookTest" runstate="Runnable" testcasecount="2" result="Passed" start-time="2021-03-06 06:27:31Z" end-time="2021-03-06 06:27:31Z" duration="0.061577" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                <properties />
                <test-case id="4729" name="NetworkIdentityHook_HookCalledWhenSyncingChangedValue(True)" fullname="Mirror.Tests.SyncVarTests.SyncVarHookTest.NetworkIdentityHook_HookCalledWhenSyncingChangedValue(True)" methodname="NetworkIdentityHook_HookCalledWhenSyncingChangedValue" classname="Mirror.Tests.SyncVarTests.SyncVarHookTest" runstate="Runnable" seed="2037342864" result="Passed" start-time="2021-03-06 06:27:31Z" end-time="2021-03-06 06:27:31Z" duration="0.024379" asserts="0">
                  <properties />
                </test-case>
                <test-case id="4730" name="NetworkIdentityHook_HookCalledWhenSyncingChangedValue(False)" fullname="Mirror.Tests.SyncVarTests.SyncVarHookTest.NetworkIdentityHook_HookCalledWhenSyncingChangedValue(False)" methodname="NetworkIdentityHook_HookCalledWhenSyncingChangedValue" classname="Mirror.Tests.SyncVarTests.SyncVarHookTest" runstate="Runnable" seed="1719984156" result="Passed" start-time="2021-03-06 06:27:31Z" end-time="2021-03-06 06:27:31Z" duration="0.030356" asserts="0">
                  <properties />
                </test-case>
              </test-suite>
              <test-suite type="ParameterizedMethod" id="4725" name="StaticMethod_HookCalledWhenSyncingChangedValue" fullname="Mirror.Tests.SyncVarTests.SyncVarHookTest.StaticMethod_HookCalledWhenSyncingChangedValue" classname="Mirror.Tests.SyncVarTests.SyncVarHookTest" runstate="Runnable" testcasecount="2" result="Passed" start-time="2021-03-06 06:27:31Z" end-time="2021-03-06 06:27:32Z" duration="0.064985" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                <properties />
                <test-case id="4723" name="StaticMethod_HookCalledWhenSyncingChangedValue(True)" fullname="Mirror.Tests.SyncVarTests.SyncVarHookTest.StaticMethod_HookCalledWhenSyncingChangedValue(True)" methodname="StaticMethod_HookCalledWhenSyncingChangedValue" classname="Mirror.Tests.SyncVarTests.SyncVarHookTest" runstate="Runnable" seed="1598117997" result="Passed" start-time="2021-03-06 06:27:31Z" end-time="2021-03-06 06:27:31Z" duration="0.028331" asserts="0">
                  <properties />
                </test-case>
                <test-case id="4724" name="StaticMethod_HookCalledWhenSyncingChangedValue(False)" fullname="Mirror.Tests.SyncVarTests.SyncVarHookTest.StaticMethod_HookCalledWhenSyncingChangedValue(False)" methodname="StaticMethod_HookCalledWhenSyncingChangedValue" classname="Mirror.Tests.SyncVarTests.SyncVarHookTest" runstate="Runnable" seed="1618555480" result="Passed" start-time="2021-03-06 06:27:31Z" end-time="2021-03-06 06:27:32Z" duration="0.030319" asserts="0">
                  <properties />
                </test-case>
              </test-suite>
              <test-suite type="ParameterizedMethod" id="4737" name="VirtualHook_HookCalledWhenSyncingChangedValue" fullname="Mirror.Tests.SyncVarTests.SyncVarHookTest.VirtualHook_HookCalledWhenSyncingChangedValue" classname="Mirror.Tests.SyncVarTests.SyncVarHookTest" runstate="Runnable" testcasecount="2" result="Passed" start-time="2021-03-06 06:27:32Z" end-time="2021-03-06 06:27:32Z" duration="0.065288" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                <properties />
                <test-case id="4735" name="VirtualHook_HookCalledWhenSyncingChangedValue(True)" fullname="Mirror.Tests.SyncVarTests.SyncVarHookTest.VirtualHook_HookCalledWhenSyncingChangedValue(True)" methodname="VirtualHook_HookCalledWhenSyncingChangedValue" classname="Mirror.Tests.SyncVarTests.SyncVarHookTest" runstate="Runnable" seed="1965613284" result="Passed" start-time="2021-03-06 06:27:32Z" end-time="2021-03-06 06:27:32Z" duration="0.028077" asserts="0">
                  <properties />
                </test-case>
                <test-case id="4736" name="VirtualHook_HookCalledWhenSyncingChangedValue(False)" fullname="Mirror.Tests.SyncVarTests.SyncVarHookTest.VirtualHook_HookCalledWhenSyncingChangedValue(False)" methodname="VirtualHook_HookCalledWhenSyncingChangedValue" classname="Mirror.Tests.SyncVarTests.SyncVarHookTest" runstate="Runnable" seed="596243341" result="Passed" start-time="2021-03-06 06:27:32Z" end-time="2021-03-06 06:27:32Z" duration="0.028766" asserts="0">
                  <properties />
                </test-case>
              </test-suite>
              <test-suite type="ParameterizedMethod" id="4740" name="VirtualOverrideHook_HookCalledWhenSyncingChangedValue" fullname="Mirror.Tests.SyncVarTests.SyncVarHookTest.VirtualOverrideHook_HookCalledWhenSyncingChangedValue" classname="Mirror.Tests.SyncVarTests.SyncVarHookTest" runstate="Runnable" testcasecount="2" result="Passed" start-time="2021-03-06 06:27:32Z" end-time="2021-03-06 06:27:32Z" duration="0.062053" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                <properties />
                <test-case id="4738" name="VirtualOverrideHook_HookCalledWhenSyncingChangedValue(True)" fullname="Mirror.Tests.SyncVarTests.SyncVarHookTest.VirtualOverrideHook_HookCalledWhenSyncingChangedValue(True)" methodname="VirtualOverrideHook_HookCalledWhenSyncingChangedValue" classname="Mirror.Tests.SyncVarTests.SyncVarHookTest" runstate="Runnable" seed="155188632" result="Passed" start-time="2021-03-06 06:27:32Z" end-time="2021-03-06 06:27:32Z" duration="0.025005" asserts="0">
                  <properties />
                </test-case>
                <test-case id="4739" name="VirtualOverrideHook_HookCalledWhenSyncingChangedValue(False)" fullname="Mirror.Tests.SyncVarTests.SyncVarHookTest.VirtualOverrideHook_HookCalledWhenSyncingChangedValue(False)" methodname="VirtualOverrideHook_HookCalledWhenSyncingChangedValue" classname="Mirror.Tests.SyncVarTests.SyncVarHookTest" runstate="Runnable" seed="343269955" result="Passed" start-time="2021-03-06 06:27:32Z" end-time="2021-03-06 06:27:32Z" duration="0.029481" asserts="0">
                  <properties />
                </test-case>
              </test-suite>
            </test-suite>
            <test-suite type="TestFixture" id="4744" name="SyncVarTest" fullname="Mirror.Tests.SyncVarTests.SyncVarTest" classname="Mirror.Tests.SyncVarTests.SyncVarTest" runstate="Runnable" testcasecount="22" result="Skipped" label="Ignored" start-time="2021-03-06 06:27:32Z" end-time="2021-03-06 06:27:32Z" duration="0.676312" total="22" passed="20" failed="0" inconclusive="0" skipped="2" asserts="0">
              <properties />
              <reason>
                <message><![CDATA[One or more child tests were ignored]]></message>
              </reason>
              <test-suite type="ParameterizedMethod" id="4754" name="SyncIdentity" fullname="Mirror.Tests.SyncVarTests.SyncVarTest.SyncIdentity" classname="Mirror.Tests.SyncVarTests.SyncVarTest" runstate="Runnable" testcasecount="2" result="Passed" start-time="2021-03-06 06:27:32Z" end-time="2021-03-06 06:27:32Z" duration="0.060894" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                <properties />
                <test-case id="4752" name="SyncIdentity(True)" fullname="Mirror.Tests.SyncVarTests.SyncVarTest.SyncIdentity(True)" methodname="SyncIdentity" classname="Mirror.Tests.SyncVarTests.SyncVarTest" runstate="Runnable" seed="1901790114" result="Passed" start-time="2021-03-06 06:27:32Z" end-time="2021-03-06 06:27:32Z" duration="0.024605" asserts="0">
                  <properties />
                </test-case>
                <test-case id="4753" name="SyncIdentity(False)" fullname="Mirror.Tests.SyncVarTests.SyncVarTest.SyncIdentity(False)" methodname="SyncIdentity" classname="Mirror.Tests.SyncVarTests.SyncVarTest" runstate="Runnable" seed="1839147766" result="Passed" start-time="2021-03-06 06:27:32Z" end-time="2021-03-06 06:27:32Z" duration="0.030470" asserts="0">
                  <properties />
                </test-case>
              </test-suite>
              <test-suite type="ParameterizedMethod" id="4760" name="SyncsBehaviour" fullname="Mirror.Tests.SyncVarTests.SyncVarTest.SyncsBehaviour" classname="Mirror.Tests.SyncVarTests.SyncVarTest" runstate="Runnable" testcasecount="2" result="Passed" start-time="2021-03-06 06:27:32Z" end-time="2021-03-06 06:27:32Z" duration="0.065757" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                <properties />
                <test-case id="4758" name="SyncsBehaviour(True)" fullname="Mirror.Tests.SyncVarTests.SyncVarTest.SyncsBehaviour(True)" methodname="SyncsBehaviour" classname="Mirror.Tests.SyncVarTests.SyncVarTest" runstate="Runnable" seed="472217175" result="Passed" start-time="2021-03-06 06:27:32Z" end-time="2021-03-06 06:27:32Z" duration="0.019844" asserts="0">
                  <properties />
                </test-case>
                <test-case id="4759" name="SyncsBehaviour(False)" fullname="Mirror.Tests.SyncVarTests.SyncVarTest.SyncsBehaviour(False)" methodname="SyncsBehaviour" classname="Mirror.Tests.SyncVarTests.SyncVarTest" runstate="Runnable" seed="1341693639" result="Passed" start-time="2021-03-06 06:27:32Z" end-time="2021-03-06 06:27:32Z" duration="0.034653" asserts="0">
                  <properties />
                </test-case>
              </test-suite>
              <test-suite type="ParameterizedMethod" id="4751" name="SyncsGameobject" fullname="Mirror.Tests.SyncVarTests.SyncVarTest.SyncsGameobject" classname="Mirror.Tests.SyncVarTests.SyncVarTest" runstate="Runnable" testcasecount="2" result="Passed" start-time="2021-03-06 06:27:32Z" end-time="2021-03-06 06:27:32Z" duration="0.064864" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                <properties />
                <test-case id="4749" name="SyncsGameobject(True)" fullname="Mirror.Tests.SyncVarTests.SyncVarTest.SyncsGameobject(True)" methodname="SyncsGameobject" classname="Mirror.Tests.SyncVarTests.SyncVarTest" runstate="Runnable" seed="1668609026" result="Passed" start-time="2021-03-06 06:27:32Z" end-time="2021-03-06 06:27:32Z" duration="0.024240" asserts="0">
                  <properties />
                </test-case>
                <test-case id="4750" name="SyncsGameobject(False)" fullname="Mirror.Tests.SyncVarTests.SyncVarTest.SyncsGameobject(False)" methodname="SyncsGameobject" classname="Mirror.Tests.SyncVarTests.SyncVarTest" runstate="Runnable" seed="1232518467" result="Passed" start-time="2021-03-06 06:27:32Z" end-time="2021-03-06 06:27:32Z" duration="0.029558" asserts="0">
                  <properties />
                </test-case>
              </test-suite>
              <test-suite type="ParameterizedMethod" id="4763" name="SyncsMultipleBehaviour" fullname="Mirror.Tests.SyncVarTests.SyncVarTest.SyncsMultipleBehaviour" classname="Mirror.Tests.SyncVarTests.SyncVarTest" runstate="Runnable" testcasecount="2" result="Passed" start-time="2021-03-06 06:27:32Z" end-time="2021-03-06 06:27:32Z" duration="0.066029" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                <properties />
                <test-case id="4761" name="SyncsMultipleBehaviour(True)" fullname="Mirror.Tests.SyncVarTests.SyncVarTest.SyncsMultipleBehaviour(True)" methodname="SyncsMultipleBehaviour" classname="Mirror.Tests.SyncVarTests.SyncVarTest" runstate="Runnable" seed="2087712098" result="Passed" start-time="2021-03-06 06:27:32Z" end-time="2021-03-06 06:27:32Z" duration="0.024610" asserts="0">
                  <properties />
                </test-case>
                <test-case id="4762" name="SyncsMultipleBehaviour(False)" fullname="Mirror.Tests.SyncVarTests.SyncVarTest.SyncsMultipleBehaviour(False)" methodname="SyncsMultipleBehaviour" classname="Mirror.Tests.SyncVarTests.SyncVarTest" runstate="Runnable" seed="1163805749" result="Passed" start-time="2021-03-06 06:27:32Z" end-time="2021-03-06 06:27:32Z" duration="0.029774" asserts="0">
                  <properties />
                </test-case>
              </test-suite>
              <test-suite type="ParameterizedMethod" id="4757" name="SyncTransform" fullname="Mirror.Tests.SyncVarTests.SyncVarTest.SyncTransform" classname="Mirror.Tests.SyncVarTests.SyncVarTest" runstate="Runnable" testcasecount="2" result="Passed" start-time="2021-03-06 06:27:32Z" end-time="2021-03-06 06:27:32Z" duration="0.063719" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                <properties />
                <test-case id="4755" name="SyncTransform(True)" fullname="Mirror.Tests.SyncVarTests.SyncVarTest.SyncTransform(True)" methodname="SyncTransform" classname="Mirror.Tests.SyncVarTests.SyncVarTest" runstate="Runnable" seed="898649906" result="Passed" start-time="2021-03-06 06:27:32Z" end-time="2021-03-06 06:27:32Z" duration="0.024074" asserts="0">
                  <properties />
                </test-case>
                <test-case id="4756" name="SyncTransform(False)" fullname="Mirror.Tests.SyncVarTests.SyncVarTest.SyncTransform(False)" methodname="SyncTransform" classname="Mirror.Tests.SyncVarTests.SyncVarTest" runstate="Runnable" seed="1885728090" result="Passed" start-time="2021-03-06 06:27:32Z" end-time="2021-03-06 06:27:32Z" duration="0.029452" asserts="0">
                  <properties />
                </test-case>
              </test-suite>
              <test-suite type="ParameterizedMethod" id="4775" name="SyncVarCacheNetidForBehaviour" fullname="Mirror.Tests.SyncVarTests.SyncVarTest.SyncVarCacheNetidForBehaviour" classname="Mirror.Tests.SyncVarTests.SyncVarTest" runstate="Runnable" testcasecount="2" result="Passed" start-time="2021-03-06 06:27:32Z" end-time="2021-03-06 06:27:32Z" duration="0.065364" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                <properties />
                <test-case id="4773" name="SyncVarCacheNetidForBehaviour(True)" fullname="Mirror.Tests.SyncVarTests.SyncVarTest.SyncVarCacheNetidForBehaviour(True)" methodname="SyncVarCacheNetidForBehaviour" classname="Mirror.Tests.SyncVarTests.SyncVarTest" runstate="Runnable" seed="26543166" result="Passed" start-time="2021-03-06 06:27:32Z" end-time="2021-03-06 06:27:32Z" duration="0.019678" asserts="0">
                  <properties />
                </test-case>
                <test-case id="4774" name="SyncVarCacheNetidForBehaviour(False)" fullname="Mirror.Tests.SyncVarTests.SyncVarTest.SyncVarCacheNetidForBehaviour(False)" methodname="SyncVarCacheNetidForBehaviour" classname="Mirror.Tests.SyncVarTests.SyncVarTest" runstate="Runnable" seed="1461616100" result="Passed" start-time="2021-03-06 06:27:32Z" end-time="2021-03-06 06:27:32Z" duration="0.034337" asserts="0">
                  <properties />
                </test-case>
              </test-suite>
              <test-suite type="ParameterizedMethod" id="4766" name="SyncVarCacheNetidForGameObject" fullname="Mirror.Tests.SyncVarTests.SyncVarTest.SyncVarCacheNetidForGameObject" classname="Mirror.Tests.SyncVarTests.SyncVarTest" runstate="Runnable" testcasecount="2" result="Passed" start-time="2021-03-06 06:27:32Z" end-time="2021-03-06 06:27:32Z" duration="0.062145" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                <properties />
                <test-case id="4764" name="SyncVarCacheNetidForGameObject(True)" fullname="Mirror.Tests.SyncVarTests.SyncVarTest.SyncVarCacheNetidForGameObject(True)" methodname="SyncVarCacheNetidForGameObject" classname="Mirror.Tests.SyncVarTests.SyncVarTest" runstate="Runnable" seed="1471627484" result="Passed" start-time="2021-03-06 06:27:32Z" end-time="2021-03-06 06:27:32Z" duration="0.024290" asserts="0">
                  <properties />
                </test-case>
                <test-case id="4765" name="SyncVarCacheNetidForGameObject(False)" fullname="Mirror.Tests.SyncVarTests.SyncVarTest.SyncVarCacheNetidForGameObject(False)" methodname="SyncVarCacheNetidForGameObject" classname="Mirror.Tests.SyncVarTests.SyncVarTest" runstate="Runnable" seed="1431072343" result="Passed" start-time="2021-03-06 06:27:32Z" end-time="2021-03-06 06:27:32Z" duration="0.029831" asserts="0">
                  <properties />
                </test-case>
              </test-suite>
              <test-suite type="ParameterizedMethod" id="4769" name="SyncVarCacheNetidForIdentity" fullname="Mirror.Tests.SyncVarTests.SyncVarTest.SyncVarCacheNetidForIdentity" classname="Mirror.Tests.SyncVarTests.SyncVarTest" runstate="Runnable" testcasecount="2" result="Passed" start-time="2021-03-06 06:27:32Z" end-time="2021-03-06 06:27:32Z" duration="0.064992" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                <properties />
                <test-case id="4767" name="SyncVarCacheNetidForIdentity(True)" fullname="Mirror.Tests.SyncVarTests.SyncVarTest.SyncVarCacheNetidForIdentity(True)" methodname="SyncVarCacheNetidForIdentity" classname="Mirror.Tests.SyncVarTests.SyncVarTest" runstate="Runnable" seed="708648950" result="Passed" start-time="2021-03-06 06:27:32Z" end-time="2021-03-06 06:27:32Z" duration="0.023114" asserts="0">
                  <properties />
                </test-case>
                <test-case id="4768" name="SyncVarCacheNetidForIdentity(False)" fullname="Mirror.Tests.SyncVarTests.SyncVarTest.SyncVarCacheNetidForIdentity(False)" methodname="SyncVarCacheNetidForIdentity" classname="Mirror.Tests.SyncVarTests.SyncVarTest" runstate="Runnable" seed="1636525956" result="Passed" start-time="2021-03-06 06:27:32Z" end-time="2021-03-06 06:27:32Z" duration="0.030131" asserts="0">
                  <properties />
                </test-case>
              </test-suite>
              <test-suite type="ParameterizedMethod" id="4772" name="SyncVarCacheNetidForTransform" fullname="Mirror.Tests.SyncVarTests.SyncVarTest.SyncVarCacheNetidForTransform" classname="Mirror.Tests.SyncVarTests.SyncVarTest" runstate="Ignored" testcasecount="2" result="Skipped" label="Ignored" site="SetUp" start-time="2021-03-06 06:27:32Z" end-time="2021-03-06 06:27:32Z" duration="0.004764" total="2" passed="0" failed="0" inconclusive="0" skipped="2" asserts="0">
                <properties>
                  <property name="_SKIPREASON" value="Transform backing field has not been implemented yet" />
                </properties>
                <reason>
                  <message><![CDATA[Transform backing field has not been implemented yet]]></message>
                </reason>
                <test-case id="4770" name="SyncVarCacheNetidForTransform(True)" fullname="Mirror.Tests.SyncVarTests.SyncVarTest.SyncVarCacheNetidForTransform(True)" methodname="SyncVarCacheNetidForTransform" classname="Mirror.Tests.SyncVarTests.SyncVarTest" runstate="Runnable" seed="1015866480" result="Skipped" label="Ignored" site="Parent" start-time="0001-01-01 00:00:00Z" end-time="0001-01-01 00:00:00Z" duration="0.000000" asserts="0">
                  <properties />
                  <reason>
                    <message><![CDATA[OneTimeSetUp: Transform backing field has not been implemented yet]]></message>
                  </reason>
                </test-case>
                <test-case id="4771" name="SyncVarCacheNetidForTransform(False)" fullname="Mirror.Tests.SyncVarTests.SyncVarTest.SyncVarCacheNetidForTransform(False)" methodname="SyncVarCacheNetidForTransform" classname="Mirror.Tests.SyncVarTests.SyncVarTest" runstate="Runnable" seed="1565997808" result="Skipped" label="Ignored" site="Parent" start-time="0001-01-01 00:00:00Z" end-time="0001-01-01 00:00:00Z" duration="0.000000" asserts="0">
                  <properties />
                  <reason>
                    <message><![CDATA[OneTimeSetUp: Transform backing field has not been implemented yet]]></message>
                  </reason>
                </test-case>
              </test-suite>
              <test-case id="4745" name="TestSettingStruct" fullname="Mirror.Tests.SyncVarTests.SyncVarTest.TestSettingStruct" methodname="TestSettingStruct" classname="Mirror.Tests.SyncVarTests.SyncVarTest" runstate="Runnable" seed="1646778705" result="Passed" start-time="2021-03-06 06:27:32Z" end-time="2021-03-06 06:27:32Z" duration="0.019316" asserts="0">
                <properties />
              </test-case>
              <test-case id="4748" name="TestSynchronizingObjects" fullname="Mirror.Tests.SyncVarTests.SyncVarTest.TestSynchronizingObjects" methodname="TestSynchronizingObjects" classname="Mirror.Tests.SyncVarTests.SyncVarTest" runstate="Runnable" seed="454771860" result="Passed" start-time="2021-03-06 06:27:32Z" end-time="2021-03-06 06:27:32Z" duration="0.035441" asserts="0">
                <properties />
              </test-case>
              <test-case id="4747" name="TestSyncIntervalAndClearAllComponents" fullname="Mirror.Tests.SyncVarTests.SyncVarTest.TestSyncIntervalAndClearAllComponents" methodname="TestSyncIntervalAndClearAllComponents" classname="Mirror.Tests.SyncVarTests.SyncVarTest" runstate="Runnable" seed="1479346757" result="Passed" start-time="2021-03-06 06:27:32Z" end-time="2021-03-06 06:27:32Z" duration="0.028984" asserts="0">
                <properties />
              </test-case>
              <test-case id="4746" name="TestSyncIntervalAndClearDirtyComponents" fullname="Mirror.Tests.SyncVarTests.SyncVarTest.TestSyncIntervalAndClearDirtyComponents" methodname="TestSyncIntervalAndClearDirtyComponents" classname="Mirror.Tests.SyncVarTests.SyncVarTest" runstate="Runnable" seed="117982642" result="Passed" start-time="2021-03-06 06:27:32Z" end-time="2021-03-06 06:27:32Z" duration="0.033718" asserts="0">
                <properties />
              </test-case>
            </test-suite>
          </test-suite>
        </test-suite>
        <test-suite type="TestSuite" id="5881" name="Weaver" fullname="Mirror.Weaver" runstate="Runnable" testcasecount="187" result="Passed" start-time="2021-03-06 06:27:34Z" end-time="2021-03-06 06:29:21Z" duration="107.451694" total="187" passed="187" failed="0" inconclusive="0" skipped="0" asserts="0">
          <properties />
          <test-suite type="TestSuite" id="5882" name="Tests" fullname="Mirror.Weaver.Tests" runstate="Runnable" testcasecount="187" result="Passed" start-time="2021-03-06 06:27:34Z" end-time="2021-03-06 06:29:21Z" duration="107.271714" total="187" passed="187" failed="0" inconclusive="0" skipped="0" asserts="0">
            <properties />
            <test-suite type="TestFixture" id="3465" name="WeaverClientRpcTests" fullname="Mirror.Weaver.Tests.WeaverClientRpcTests" classname="Mirror.Weaver.Tests.WeaverClientRpcTests" runstate="Runnable" testcasecount="8" result="Passed" start-time="2021-03-06 06:27:34Z" end-time="2021-03-06 06:27:39Z" duration="4.722359" total="8" passed="8" failed="0" inconclusive="0" skipped="0" asserts="0">
              <properties>
                <property name="Category" value="Weaver" />
              </properties>
              <test-case id="3470" name="AbstractClientRpc" fullname="Mirror.Weaver.Tests.WeaverClientRpcTests.AbstractClientRpc" methodname="AbstractClientRpc" classname="Mirror.Weaver.Tests.WeaverClientRpcTests" runstate="Runnable" seed="1586669710" result="Passed" start-time="2021-03-06 06:27:34Z" end-time="2021-03-06 06:27:35Z" duration="0.673377" asserts="0">
                <properties />
                <output><![CDATA[Abstract ClientRpc are currently not supported, use virtual method instead (at System.Void WeaverClientRpcTests.AbstractClientRpc.AbstractClientRpc::RpcDoSomething())
]]></output>
              </test-case>
              <test-case id="3473" name="BehaviourCanBeSentInRpc" fullname="Mirror.Weaver.Tests.WeaverClientRpcTests.BehaviourCanBeSentInRpc" methodname="BehaviourCanBeSentInRpc" classname="Mirror.Weaver.Tests.WeaverClientRpcTests" runstate="Runnable" seed="2068870589" result="Passed" start-time="2021-03-06 06:27:35Z" end-time="2021-03-06 06:27:36Z" duration="0.602309" asserts="0">
                <properties />
              </test-case>
              <test-case id="3467" name="ClientRpcCantBeStatic" fullname="Mirror.Weaver.Tests.WeaverClientRpcTests.ClientRpcCantBeStatic" methodname="ClientRpcCantBeStatic" classname="Mirror.Weaver.Tests.WeaverClientRpcTests" runstate="Runnable" seed="1475398185" result="Passed" start-time="2021-03-06 06:27:36Z" end-time="2021-03-06 06:27:36Z" duration="0.566189" asserts="0">
                <properties />
                <output><![CDATA[RpcCantBeStatic must not be static (at System.Void WeaverClientRpcTests.ClientRpcCantBeStatic.ClientRpcCantBeStatic::RpcCantBeStatic())
]]></output>
              </test-case>
              <test-case id="3472" name="ClientRpcThatExcludesOwner" fullname="Mirror.Weaver.Tests.WeaverClientRpcTests.ClientRpcThatExcludesOwner" methodname="ClientRpcThatExcludesOwner" classname="Mirror.Weaver.Tests.WeaverClientRpcTests" runstate="Runnable" seed="704506332" result="Passed" start-time="2021-03-06 06:27:36Z" end-time="2021-03-06 06:27:37Z" duration="0.465281" asserts="0">
                <properties />
              </test-case>
              <test-case id="3466" name="ClientRpcValid" fullname="Mirror.Weaver.Tests.WeaverClientRpcTests.ClientRpcValid" methodname="ClientRpcValid" classname="Mirror.Weaver.Tests.WeaverClientRpcTests" runstate="Runnable" seed="2100420056" result="Passed" start-time="2021-03-06 06:27:37Z" end-time="2021-03-06 06:27:37Z" duration="0.546430" asserts="0">
                <properties />
              </test-case>
              <test-case id="3471" name="OverrideAbstractClientRpc" fullname="Mirror.Weaver.Tests.WeaverClientRpcTests.OverrideAbstractClientRpc" methodname="OverrideAbstractClientRpc" classname="Mirror.Weaver.Tests.WeaverClientRpcTests" runstate="Runnable" seed="1079480633" result="Passed" start-time="2021-03-06 06:27:37Z" end-time="2021-03-06 06:27:38Z" duration="0.481835" asserts="0">
                <properties />
                <output><![CDATA[Abstract ClientRpc are currently not supported, use virtual method instead (at System.Void WeaverClientRpcTests.OverrideAbstractClientRpc.BaseBehaviour::RpcDoSomething())
]]></output>
              </test-case>
              <test-case id="3469" name="OverrideVirtualClientRpc" fullname="Mirror.Weaver.Tests.WeaverClientRpcTests.OverrideVirtualClientRpc" methodname="OverrideVirtualClientRpc" classname="Mirror.Weaver.Tests.WeaverClientRpcTests" runstate="Runnable" seed="1833644656" result="Passed" start-time="2021-03-06 06:27:38Z" end-time="2021-03-06 06:27:38Z" duration="0.557971" asserts="0">
                <properties />
              </test-case>
              <test-case id="3468" name="VirtualClientRpc" fullname="Mirror.Weaver.Tests.WeaverClientRpcTests.VirtualClientRpc" methodname="VirtualClientRpc" classname="Mirror.Weaver.Tests.WeaverClientRpcTests" runstate="Runnable" seed="1733565502" result="Passed" start-time="2021-03-06 06:27:38Z" end-time="2021-03-06 06:27:39Z" duration="0.477605" asserts="0">
                <properties />
              </test-case>
            </test-suite>
            <test-suite type="TestFixture" id="3474" name="WeaverClientServerAttributeTests" fullname="Mirror.Weaver.Tests.WeaverClientServerAttributeTests" classname="Mirror.Weaver.Tests.WeaverClientServerAttributeTests" runstate="Runnable" testcasecount="14" result="Passed" start-time="2021-03-06 06:27:39Z" end-time="2021-03-06 06:27:46Z" duration="7.408711" total="14" passed="14" failed="0" inconclusive="0" skipped="0" asserts="0">
              <properties>
                <property name="Category" value="Weaver" />
              </properties>
              <test-case id="3481" name="ClientAttributeOnAbstractMethod" fullname="Mirror.Weaver.Tests.WeaverClientServerAttributeTests.ClientAttributeOnAbstractMethod" methodname="ClientAttributeOnAbstractMethod" classname="Mirror.Weaver.Tests.WeaverClientServerAttributeTests" runstate="Runnable" seed="1089566020" result="Passed" start-time="2021-03-06 06:27:39Z" end-time="2021-03-06 06:27:39Z" duration="0.476210" asserts="0">
                <properties />
                <output><![CDATA[Server or Client Attributes can't be added to abstract method. Server and Client Attributes are not inherited so they need to be applied to the override methods instead. (at System.Void WeaverClientServerAttributeTests.ClientAttributeOnAbstractMethod.ClientAttributeOnAbstractMethod::ClientOnlyMethod())
]]></output>
              </test-case>
              <test-case id="3482" name="ClientAttributeOnOverrideMethod" fullname="Mirror.Weaver.Tests.WeaverClientServerAttributeTests.ClientAttributeOnOverrideMethod" methodname="ClientAttributeOnOverrideMethod" classname="Mirror.Weaver.Tests.WeaverClientServerAttributeTests" runstate="Runnable" seed="2024412655" result="Passed" start-time="2021-03-06 06:27:39Z" end-time="2021-03-06 06:27:40Z" duration="0.565280" asserts="0">
                <properties />
              </test-case>
              <test-case id="3480" name="ClientAttributeOnVirutalMethod" fullname="Mirror.Weaver.Tests.WeaverClientServerAttributeTests.ClientAttributeOnVirutalMethod" methodname="ClientAttributeOnVirutalMethod" classname="Mirror.Weaver.Tests.WeaverClientServerAttributeTests" runstate="Runnable" seed="845893867" result="Passed" start-time="2021-03-06 06:27:40Z" end-time="2021-03-06 06:27:40Z" duration="0.461831" asserts="0">
                <properties />
              </test-case>
              <test-case id="3485" name="MonoBehaviourClient" fullname="Mirror.Weaver.Tests.WeaverClientServerAttributeTests.MonoBehaviourClient" methodname="MonoBehaviourClient" classname="Mirror.Weaver.Tests.WeaverClientServerAttributeTests" runstate="Runnable" seed="1591145013" result="Passed" start-time="2021-03-06 06:27:40Z" end-time="2021-03-06 06:27:41Z" duration="0.558483" asserts="0">
                <properties />
              </test-case>
              <test-case id="3488" name="MonoBehaviourServer" fullname="Mirror.Weaver.Tests.WeaverClientServerAttributeTests.MonoBehaviourServer" methodname="MonoBehaviourServer" classname="Mirror.Weaver.Tests.WeaverClientServerAttributeTests" runstate="Runnable" seed="1977045985" result="Passed" start-time="2021-03-06 06:27:41Z" end-time="2021-03-06 06:27:41Z" duration="0.462164" asserts="0">
                <properties />
              </test-case>
              <test-case id="3479" name="NetworkBehaviourClient" fullname="Mirror.Weaver.Tests.WeaverClientServerAttributeTests.NetworkBehaviourClient" methodname="NetworkBehaviourClient" classname="Mirror.Weaver.Tests.WeaverClientServerAttributeTests" runstate="Runnable" seed="414509963" result="Passed" start-time="2021-03-06 06:27:41Z" end-time="2021-03-06 06:27:42Z" duration="0.562836" asserts="0">
                <properties />
              </test-case>
              <test-case id="3475" name="NetworkBehaviourServer" fullname="Mirror.Weaver.Tests.WeaverClientServerAttributeTests.NetworkBehaviourServer" methodname="NetworkBehaviourServer" classname="Mirror.Weaver.Tests.WeaverClientServerAttributeTests" runstate="Runnable" seed="556374243" result="Passed" start-time="2021-03-06 06:27:42Z" end-time="2021-03-06 06:27:43Z" duration="0.473683" asserts="0">
                <properties />
              </test-case>
              <test-case id="3484" name="RegularClassClient" fullname="Mirror.Weaver.Tests.WeaverClientServerAttributeTests.RegularClassClient" methodname="RegularClassClient" classname="Mirror.Weaver.Tests.WeaverClientServerAttributeTests" runstate="Runnable" seed="44791457" result="Passed" start-time="2021-03-06 06:27:43Z" end-time="2021-03-06 06:27:43Z" duration="0.457515" asserts="0">
                <properties />
              </test-case>
              <test-case id="3487" name="RegularClassServer" fullname="Mirror.Weaver.Tests.WeaverClientServerAttributeTests.RegularClassServer" methodname="RegularClassServer" classname="Mirror.Weaver.Tests.WeaverClientServerAttributeTests" runstate="Runnable" seed="380398566" result="Passed" start-time="2021-03-06 06:27:43Z" end-time="2021-03-06 06:27:44Z" duration="0.558959" asserts="0">
                <properties />
              </test-case>
              <test-case id="3477" name="ServerAttributeOnAbstractMethod" fullname="Mirror.Weaver.Tests.WeaverClientServerAttributeTests.ServerAttributeOnAbstractMethod" methodname="ServerAttributeOnAbstractMethod" classname="Mirror.Weaver.Tests.WeaverClientServerAttributeTests" runstate="Runnable" seed="1436813367" result="Passed" start-time="2021-03-06 06:27:44Z" end-time="2021-03-06 06:27:44Z" duration="0.477772" asserts="0">
                <properties />
                <output><![CDATA[Server or Client Attributes can't be added to abstract method. Server and Client Attributes are not inherited so they need to be applied to the override methods instead. (at System.Void WeaverClientServerAttributeTests.ServerAttributeOnAbstractMethod.ServerAttributeOnAbstractMethod::ServerOnlyMethod())
]]></output>
              </test-case>
              <test-case id="3478" name="ServerAttributeOnOverrideMethod" fullname="Mirror.Weaver.Tests.WeaverClientServerAttributeTests.ServerAttributeOnOverrideMethod" methodname="ServerAttributeOnOverrideMethod" classname="Mirror.Weaver.Tests.WeaverClientServerAttributeTests" runstate="Runnable" seed="2072934688" result="Passed" start-time="2021-03-06 06:27:44Z" end-time="2021-03-06 06:27:44Z" duration="0.460970" asserts="0">
                <properties />
              </test-case>
              <test-case id="3476" name="ServerAttributeOnVirutalMethod" fullname="Mirror.Weaver.Tests.WeaverClientServerAttributeTests.ServerAttributeOnVirutalMethod" methodname="ServerAttributeOnVirutalMethod" classname="Mirror.Weaver.Tests.WeaverClientServerAttributeTests" runstate="Runnable" seed="1630783405" result="Passed" start-time="2021-03-06 06:27:44Z" end-time="2021-03-06 06:27:45Z" duration="0.570632" asserts="0">
                <properties />
              </test-case>
              <test-case id="3483" name="StaticClassClient" fullname="Mirror.Weaver.Tests.WeaverClientServerAttributeTests.StaticClassClient" methodname="StaticClassClient" classname="Mirror.Weaver.Tests.WeaverClientServerAttributeTests" runstate="Runnable" seed="1510452961" result="Passed" start-time="2021-03-06 06:27:45Z" end-time="2021-03-06 06:27:46Z" duration="0.477522" asserts="0">
                <properties />
              </test-case>
              <test-case id="3486" name="StaticClassServer" fullname="Mirror.Weaver.Tests.WeaverClientServerAttributeTests.StaticClassServer" methodname="StaticClassServer" classname="Mirror.Weaver.Tests.WeaverClientServerAttributeTests" runstate="Runnable" seed="1444650595" result="Passed" start-time="2021-03-06 06:27:46Z" end-time="2021-03-06 06:27:46Z" duration="0.565973" asserts="0">
                <properties />
              </test-case>
            </test-suite>
            <test-suite type="TestFixture" id="3489" name="WeaverCommandTests" fullname="Mirror.Weaver.Tests.WeaverCommandTests" classname="Mirror.Weaver.Tests.WeaverCommandTests" runstate="Runnable" testcasecount="15" result="Passed" start-time="2021-03-06 06:27:46Z" end-time="2021-03-06 06:27:54Z" duration="8.028258" total="15" passed="15" failed="0" inconclusive="0" skipped="0" asserts="0">
              <properties>
                <property name="Category" value="Weaver" />
              </properties>
              <test-case id="3503" name="AbstractCommand" fullname="Mirror.Weaver.Tests.WeaverCommandTests.AbstractCommand" methodname="AbstractCommand" classname="Mirror.Weaver.Tests.WeaverCommandTests" runstate="Runnable" seed="1472521200" result="Passed" start-time="2021-03-06 06:27:46Z" end-time="2021-03-06 06:27:47Z" duration="0.468768" asserts="0">
                <properties />
                <output><![CDATA[Abstract Commands are currently not supported, use virtual method instead (at System.Void WeaverCommandTests.AbstractCommand.AbstractCommand::CmdDoSomething())
]]></output>
              </test-case>
              <test-case id="3491" name="CommandCantBeStatic" fullname="Mirror.Weaver.Tests.WeaverCommandTests.CommandCantBeStatic" methodname="CommandCantBeStatic" classname="Mirror.Weaver.Tests.WeaverCommandTests" runstate="Runnable" seed="538656964" result="Passed" start-time="2021-03-06 06:27:47Z" end-time="2021-03-06 06:27:47Z" duration="0.573587" asserts="0">
                <properties />
                <output><![CDATA[CmdCantBeStatic must not be static (at System.Void WeaverCommandTests.CommandCantBeStatic.CommandCantBeStatic::CmdCantBeStatic())
]]></output>
              </test-case>
              <test-case id="3492" name="CommandThatIgnoresAuthority" fullname="Mirror.Weaver.Tests.WeaverCommandTests.CommandThatIgnoresAuthority" methodname="CommandThatIgnoresAuthority" classname="Mirror.Weaver.Tests.WeaverCommandTests" runstate="Runnable" seed="1073316035" result="Passed" start-time="2021-03-06 06:27:47Z" end-time="2021-03-06 06:27:48Z" duration="0.490218" asserts="0">
                <properties />
              </test-case>
              <test-case id="3494" name="CommandThatIgnoresAuthorityWithSenderConnection" fullname="Mirror.Weaver.Tests.WeaverCommandTests.CommandThatIgnoresAuthorityWithSenderConnection" methodname="CommandThatIgnoresAuthorityWithSenderConnection" classname="Mirror.Weaver.Tests.WeaverCommandTests" runstate="Runnable" seed="91557134" result="Passed" start-time="2021-03-06 06:27:48Z" end-time="2021-03-06 06:27:48Z" duration="0.478428" asserts="0">
                <properties />
              </test-case>
              <test-case id="3490" name="CommandValid" fullname="Mirror.Weaver.Tests.WeaverCommandTests.CommandValid" methodname="CommandValid" classname="Mirror.Weaver.Tests.WeaverCommandTests" runstate="Runnable" seed="924595633" result="Passed" start-time="2021-03-06 06:27:48Z" end-time="2021-03-06 06:27:49Z" duration="0.569803" asserts="0">
                <properties />
              </test-case>
              <test-case id="3493" name="CommandWithArguments" fullname="Mirror.Weaver.Tests.WeaverCommandTests.CommandWithArguments" methodname="CommandWithArguments" classname="Mirror.Weaver.Tests.WeaverCommandTests" runstate="Runnable" seed="1067592838" result="Passed" start-time="2021-03-06 06:27:49Z" end-time="2021-03-06 06:27:49Z" duration="0.473763" asserts="0">
                <properties />
              </test-case>
              <test-case id="3495" name="CommandWithSenderConnectionAndOtherArgs" fullname="Mirror.Weaver.Tests.WeaverCommandTests.CommandWithSenderConnectionAndOtherArgs" methodname="CommandWithSenderConnectionAndOtherArgs" classname="Mirror.Weaver.Tests.WeaverCommandTests" runstate="Runnable" seed="1679925990" result="Passed" start-time="2021-03-06 06:27:49Z" end-time="2021-03-06 06:27:50Z" duration="0.569742" asserts="0">
                <properties />
              </test-case>
              <test-case id="3497" name="ErrorForNetworkConnectionThatIsNotSenderConnection" fullname="Mirror.Weaver.Tests.WeaverCommandTests.ErrorForNetworkConnectionThatIsNotSenderConnection" methodname="ErrorForNetworkConnectionThatIsNotSenderConnection" classname="Mirror.Weaver.Tests.WeaverCommandTests" runstate="Runnable" seed="2041385221" result="Passed" start-time="2021-03-06 06:27:50Z" end-time="2021-03-06 06:27:50Z" duration="0.470940" asserts="0">
                <properties />
                <output><![CDATA[CmdFunction has invalid parameter connection, Cannot pass NetworkConnections. Instead use 'NetworkConnectionToClient conn = null' to get the sender's connection on the server (at System.Void WeaverCommandTests.ErrorForNetworkConnectionThatIsNotSenderConnection.ErrorForNetworkConnectionThatIsNotSenderConnection::CmdFunction(Mirror.NetworkConnection))
]]></output>
              </test-case>
              <test-case id="3496" name="ErrorForOptionalNetworkConnectionThatIsNotSenderConnection" fullname="Mirror.Weaver.Tests.WeaverCommandTests.ErrorForOptionalNetworkConnectionThatIsNotSenderConnection" methodname="ErrorForOptionalNetworkConnectionThatIsNotSenderConnection" classname="Mirror.Weaver.Tests.WeaverCommandTests" runstate="Runnable" seed="804133809" result="Passed" start-time="2021-03-06 06:27:50Z" end-time="2021-03-06 06:27:51Z" duration="0.472137" asserts="0">
                <properties />
                <output><![CDATA[CmdFunction has invalid parameter connection, Cannot pass NetworkConnections. Instead use 'NetworkConnectionToClient conn = null' to get the sender's connection on the server (at System.Void WeaverCommandTests.ErrorForOptionalNetworkConnectionThatIsNotSenderConnection.ErrorForOptionalNetworkConnectionThatIsNotSenderConnection::CmdFunction(Mirror.NetworkConnection))
]]></output>
              </test-case>
              <test-case id="3504" name="OverrideAbstractCommand" fullname="Mirror.Weaver.Tests.WeaverCommandTests.OverrideAbstractCommand" methodname="OverrideAbstractCommand" classname="Mirror.Weaver.Tests.WeaverCommandTests" runstate="Runnable" seed="2108501284" result="Passed" start-time="2021-03-06 06:27:51Z" end-time="2021-03-06 06:27:52Z" duration="0.576342" asserts="0">
                <properties />
                <output><![CDATA[Abstract Commands are currently not supported, use virtual method instead (at System.Void WeaverCommandTests.OverrideAbstractCommand.BaseBehaviour::CmdDoSomething())
]]></output>
              </test-case>
              <test-case id="3500" name="OverrideVirtualCallBaseCommand" fullname="Mirror.Weaver.Tests.WeaverCommandTests.OverrideVirtualCallBaseCommand" methodname="OverrideVirtualCallBaseCommand" classname="Mirror.Weaver.Tests.WeaverCommandTests" runstate="Runnable" seed="672115581" result="Passed" start-time="2021-03-06 06:27:52Z" end-time="2021-03-06 06:27:52Z" duration="0.482103" asserts="0">
                <properties />
              </test-case>
              <test-case id="3501" name="OverrideVirtualCallsBaseCommandWithMultipleBaseClasses" fullname="Mirror.Weaver.Tests.WeaverCommandTests.OverrideVirtualCallsBaseCommandWithMultipleBaseClasses" methodname="OverrideVirtualCallsBaseCommandWithMultipleBaseClasses" classname="Mirror.Weaver.Tests.WeaverCommandTests" runstate="Runnable" seed="1783076303" result="Passed" start-time="2021-03-06 06:27:52Z" end-time="2021-03-06 06:27:53Z" duration="0.573978" asserts="0">
                <properties />
              </test-case>
              <test-case id="3502" name="OverrideVirtualCallsBaseCommandWithOverride" fullname="Mirror.Weaver.Tests.WeaverCommandTests.OverrideVirtualCallsBaseCommandWithOverride" methodname="OverrideVirtualCallsBaseCommandWithOverride" classname="Mirror.Weaver.Tests.WeaverCommandTests" runstate="Runnable" seed="819237780" result="Passed" start-time="2021-03-06 06:27:53Z" end-time="2021-03-06 06:27:53Z" duration="0.493849" asserts="0">
                <properties />
              </test-case>
              <test-case id="3499" name="OverrideVirtualCommand" fullname="Mirror.Weaver.Tests.WeaverCommandTests.OverrideVirtualCommand" methodname="OverrideVirtualCommand" classname="Mirror.Weaver.Tests.WeaverCommandTests" runstate="Runnable" seed="2025090847" result="Passed" start-time="2021-03-06 06:27:53Z" end-time="2021-03-06 06:27:54Z" duration="0.478325" asserts="0">
                <properties />
              </test-case>
              <test-case id="3498" name="VirtualCommand" fullname="Mirror.Weaver.Tests.WeaverCommandTests.VirtualCommand" methodname="VirtualCommand" classname="Mirror.Weaver.Tests.WeaverCommandTests" runstate="Runnable" seed="529454914" result="Passed" start-time="2021-03-06 06:27:54Z" end-time="2021-03-06 06:27:54Z" duration="0.570312" asserts="0">
                <properties />
              </test-case>
            </test-suite>
            <test-suite type="TestFixture" id="3505" name="WeaverGeneralTests" fullname="Mirror.Weaver.Tests.WeaverGeneralTests" classname="Mirror.Weaver.Tests.WeaverGeneralTests" runstate="Runnable" testcasecount="2" result="Passed" start-time="2021-03-06 06:27:54Z" end-time="2021-03-06 06:27:55Z" duration="1.311174" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
              <properties>
                <property name="Category" value="Weaver" />
              </properties>
              <test-case id="3506" name="RecursionCount" fullname="Mirror.Weaver.Tests.WeaverGeneralTests.RecursionCount" methodname="RecursionCount" classname="Mirror.Weaver.Tests.WeaverGeneralTests" runstate="Runnable" seed="1070544185" result="Passed" start-time="2021-03-06 06:27:54Z" end-time="2021-03-06 06:27:55Z" duration="0.487713" asserts="0">
                <properties />
              </test-case>
              <test-case id="3507" name="TestingScriptableObjectArraySerialization" fullname="Mirror.Weaver.Tests.WeaverGeneralTests.TestingScriptableObjectArraySerialization" methodname="TestingScriptableObjectArraySerialization" classname="Mirror.Weaver.Tests.WeaverGeneralTests" runstate="Runnable" seed="440226525" result="Passed" start-time="2021-03-06 06:27:55Z" end-time="2021-03-06 06:27:55Z" duration="0.570663" asserts="0">
                <properties />
              </test-case>
            </test-suite>
            <test-suite type="TestFixture" id="3508" name="WeaverGeneratedReaderWriterAnotherAssemblyTests" fullname="Mirror.Weaver.Tests.WeaverGeneratedReaderWriterAnotherAssemblyTests" classname="Mirror.Weaver.Tests.WeaverGeneratedReaderWriterAnotherAssemblyTests" runstate="Runnable" testcasecount="6" result="Passed" start-time="2021-03-06 06:27:55Z" end-time="2021-03-06 06:28:00Z" duration="4.377065" total="6" passed="6" failed="0" inconclusive="0" skipped="0" asserts="0">
              <properties>
                <property name="Category" value="Weaver" />
              </properties>
              <test-case id="3514" name="CanUseCustomReadWriteForTypesFromDifferentAssemblies" fullname="Mirror.Weaver.Tests.WeaverGeneratedReaderWriterAnotherAssemblyTests.CanUseCustomReadWriteForTypesFromDifferentAssemblies" methodname="CanUseCustomReadWriteForTypesFromDifferentAssemblies" classname="Mirror.Weaver.Tests.WeaverGeneratedReaderWriterAnotherAssemblyTests" runstate="Runnable" seed="135502764" result="Passed" start-time="2021-03-06 06:27:56Z" end-time="2021-03-06 06:27:56Z" duration="0.636240" asserts="0">
                <properties />
              </test-case>
              <test-case id="3510" name="CreatesForClassFromDifferentAssemblies" fullname="Mirror.Weaver.Tests.WeaverGeneratedReaderWriterAnotherAssemblyTests.CreatesForClassFromDifferentAssemblies" methodname="CreatesForClassFromDifferentAssemblies" classname="Mirror.Weaver.Tests.WeaverGeneratedReaderWriterAnotherAssemblyTests" runstate="Runnable" seed="1432112604" result="Passed" start-time="2021-03-06 06:27:56Z" end-time="2021-03-06 06:27:57Z" duration="0.726423" asserts="0">
                <properties />
              </test-case>
              <test-case id="3513" name="CreatesForClassFromDifferentAssembliesWithValidConstructor" fullname="Mirror.Weaver.Tests.WeaverGeneratedReaderWriterAnotherAssemblyTests.CreatesForClassFromDifferentAssembliesWithValidConstructor" methodname="CreatesForClassFromDifferentAssembliesWithValidConstructor" classname="Mirror.Weaver.Tests.WeaverGeneratedReaderWriterAnotherAssemblyTests" runstate="Runnable" seed="515001168" result="Passed" start-time="2021-03-06 06:27:57Z" end-time="2021-03-06 06:27:58Z" duration="0.637910" asserts="0">
                <properties />
              </test-case>
              <test-case id="3511" name="CreatesForComplexTypeFromDifferentAssemblies" fullname="Mirror.Weaver.Tests.WeaverGeneratedReaderWriterAnotherAssemblyTests.CreatesForComplexTypeFromDifferentAssemblies" methodname="CreatesForComplexTypeFromDifferentAssemblies" classname="Mirror.Weaver.Tests.WeaverGeneratedReaderWriterAnotherAssemblyTests" runstate="Runnable" seed="107131482" result="Passed" start-time="2021-03-06 06:27:58Z" end-time="2021-03-06 06:27:58Z" duration="0.733614" asserts="0">
                <properties />
              </test-case>
              <test-case id="3509" name="CreatesForStructFromDifferentAssemblies" fullname="Mirror.Weaver.Tests.WeaverGeneratedReaderWriterAnotherAssemblyTests.CreatesForStructFromDifferentAssemblies" methodname="CreatesForStructFromDifferentAssemblies" classname="Mirror.Weaver.Tests.WeaverGeneratedReaderWriterAnotherAssemblyTests" runstate="Runnable" seed="1436198389" result="Passed" start-time="2021-03-06 06:27:58Z" end-time="2021-03-06 06:27:59Z" duration="0.633685" asserts="0">
                <properties />
              </test-case>
              <test-case id="3512" name="CreatesForTypeThatUsesDifferentAssemblies" fullname="Mirror.Weaver.Tests.WeaverGeneratedReaderWriterAnotherAssemblyTests.CreatesForTypeThatUsesDifferentAssemblies" methodname="CreatesForTypeThatUsesDifferentAssemblies" classname="Mirror.Weaver.Tests.WeaverGeneratedReaderWriterAnotherAssemblyTests" runstate="Runnable" seed="583568580" result="Passed" start-time="2021-03-06 06:27:59Z" end-time="2021-03-06 06:28:00Z" duration="0.741932" asserts="0">
                <properties />
              </test-case>
            </test-suite>
            <test-suite type="TestFixture" id="3515" name="WeaverGeneratedReaderWriterTests" fullname="Mirror.Weaver.Tests.WeaverGeneratedReaderWriterTests" classname="Mirror.Weaver.Tests.WeaverGeneratedReaderWriterTests" runstate="Runnable" testcasecount="27" result="Passed" start-time="2021-03-06 06:28:00Z" end-time="2021-03-06 06:28:14Z" duration="14.577912" total="27" passed="27" failed="0" inconclusive="0" skipped="0" asserts="0">
              <properties>
                <property name="Category" value="Weaver" />
              </properties>
              <test-case id="3531" name="CanUseCustomReadWriteForAbstractClass" fullname="Mirror.Weaver.Tests.WeaverGeneratedReaderWriterTests.CanUseCustomReadWriteForAbstractClass" methodname="CanUseCustomReadWriteForAbstractClass" classname="Mirror.Weaver.Tests.WeaverGeneratedReaderWriterTests" runstate="Runnable" seed="703113559" result="Passed" start-time="2021-03-06 06:28:00Z" end-time="2021-03-06 06:28:01Z" duration="0.499484" asserts="0">
                <properties />
              </test-case>
              <test-case id="3529" name="CanUseCustomReadWriteForInterfaces" fullname="Mirror.Weaver.Tests.WeaverGeneratedReaderWriterTests.CanUseCustomReadWriteForInterfaces" methodname="CanUseCustomReadWriteForInterfaces" classname="Mirror.Weaver.Tests.WeaverGeneratedReaderWriterTests" runstate="Runnable" seed="1131528672" result="Passed" start-time="2021-03-06 06:28:01Z" end-time="2021-03-06 06:28:01Z" duration="0.490380" asserts="0">
                <properties />
              </test-case>
              <test-case id="3533" name="CreatesForArraySegment" fullname="Mirror.Weaver.Tests.WeaverGeneratedReaderWriterTests.CreatesForArraySegment" methodname="CreatesForArraySegment" classname="Mirror.Weaver.Tests.WeaverGeneratedReaderWriterTests" runstate="Runnable" seed="297779893" result="Passed" start-time="2021-03-06 06:28:01Z" end-time="2021-03-06 06:28:02Z" duration="0.577106" asserts="0">
                <properties />
              </test-case>
              <test-case id="3517" name="CreatesForClass" fullname="Mirror.Weaver.Tests.WeaverGeneratedReaderWriterTests.CreatesForClass" methodname="CreatesForClass" classname="Mirror.Weaver.Tests.WeaverGeneratedReaderWriterTests" runstate="Runnable" seed="1787301583" result="Passed" start-time="2021-03-06 06:28:02Z" end-time="2021-03-06 06:28:02Z" duration="0.478713" asserts="0">
                <properties />
              </test-case>
              <test-case id="3518" name="CreatesForClassInherited" fullname="Mirror.Weaver.Tests.WeaverGeneratedReaderWriterTests.CreatesForClassInherited" methodname="CreatesForClassInherited" classname="Mirror.Weaver.Tests.WeaverGeneratedReaderWriterTests" runstate="Runnable" seed="1086839311" result="Passed" start-time="2021-03-06 06:28:02Z" end-time="2021-03-06 06:28:03Z" duration="0.582046" asserts="0">
                <properties />
              </test-case>
              <test-case id="3519" name="CreatesForClassWithValidConstructor" fullname="Mirror.Weaver.Tests.WeaverGeneratedReaderWriterTests.CreatesForClassWithValidConstructor" methodname="CreatesForClassWithValidConstructor" classname="Mirror.Weaver.Tests.WeaverGeneratedReaderWriterTests" runstate="Runnable" seed="1775665967" result="Passed" start-time="2021-03-06 06:28:03Z" end-time="2021-03-06 06:28:03Z" duration="0.482172" asserts="0">
                <properties />
              </test-case>
              <test-case id="3532" name="CreatesForEnums" fullname="Mirror.Weaver.Tests.WeaverGeneratedReaderWriterTests.CreatesForEnums" methodname="CreatesForEnums" classname="Mirror.Weaver.Tests.WeaverGeneratedReaderWriterTests" runstate="Runnable" seed="702436279" result="Passed" start-time="2021-03-06 06:28:03Z" end-time="2021-03-06 06:28:04Z" duration="0.565441" asserts="0">
                <properties />
              </test-case>
              <test-case id="3521" name="CreatesForInheritedFromScriptableObject" fullname="Mirror.Weaver.Tests.WeaverGeneratedReaderWriterTests.CreatesForInheritedFromScriptableObject" methodname="CreatesForInheritedFromScriptableObject" classname="Mirror.Weaver.Tests.WeaverGeneratedReaderWriterTests" runstate="Runnable" seed="1696370498" result="Passed" start-time="2021-03-06 06:28:04Z" end-time="2021-03-06 06:28:04Z" duration="0.485509" asserts="0">
                <properties />
              </test-case>
              <test-case id="3539" name="CreatesForList" fullname="Mirror.Weaver.Tests.WeaverGeneratedReaderWriterTests.CreatesForList" methodname="CreatesForList" classname="Mirror.Weaver.Tests.WeaverGeneratedReaderWriterTests" runstate="Runnable" seed="845315273" result="Passed" start-time="2021-03-06 06:28:04Z" end-time="2021-03-06 06:28:05Z" duration="0.489686" asserts="0">
                <properties />
              </test-case>
              <test-case id="3534" name="CreatesForStructArraySegment" fullname="Mirror.Weaver.Tests.WeaverGeneratedReaderWriterTests.CreatesForStructArraySegment" methodname="CreatesForStructArraySegment" classname="Mirror.Weaver.Tests.WeaverGeneratedReaderWriterTests" runstate="Runnable" seed="1215448738" result="Passed" start-time="2021-03-06 06:28:05Z" end-time="2021-03-06 06:28:05Z" duration="0.573845" asserts="0">
                <properties />
              </test-case>
              <test-case id="3540" name="CreatesForStructList" fullname="Mirror.Weaver.Tests.WeaverGeneratedReaderWriterTests.CreatesForStructList" methodname="CreatesForStructList" classname="Mirror.Weaver.Tests.WeaverGeneratedReaderWriterTests" runstate="Runnable" seed="299508295" result="Passed" start-time="2021-03-06 06:28:05Z" end-time="2021-03-06 06:28:06Z" duration="0.473861" asserts="0">
                <properties />
              </test-case>
              <test-case id="3516" name="CreatesForStructs" fullname="Mirror.Weaver.Tests.WeaverGeneratedReaderWriterTests.CreatesForStructs" methodname="CreatesForStructs" classname="Mirror.Weaver.Tests.WeaverGeneratedReaderWriterTests" runstate="Runnable" seed="488332984" result="Passed" start-time="2021-03-06 06:28:06Z" end-time="2021-03-06 06:28:06Z" duration="0.566659" asserts="0">
                <properties />
              </test-case>
              <test-case id="3527" name="ExcludesNonSerializedFields" fullname="Mirror.Weaver.Tests.WeaverGeneratedReaderWriterTests.ExcludesNonSerializedFields" methodname="ExcludesNonSerializedFields" classname="Mirror.Weaver.Tests.WeaverGeneratedReaderWriterTests" runstate="Runnable" seed="751338649" result="Passed" start-time="2021-03-06 06:28:06Z" end-time="2021-03-06 06:28:07Z" duration="0.481473" asserts="0">
                <properties />
              </test-case>
              <test-case id="3520" name="GivesErrorForClassWithNoValidConstructor" fullname="Mirror.Weaver.Tests.WeaverGeneratedReaderWriterTests.GivesErrorForClassWithNoValidConstructor" methodname="GivesErrorForClassWithNoValidConstructor" classname="Mirror.Weaver.Tests.WeaverGeneratedReaderWriterTests" runstate="Runnable" seed="1826482240" result="Passed" start-time="2021-03-06 06:28:07Z" end-time="2021-03-06 06:28:07Z" duration="0.485815" asserts="0">
                <properties />
                <output><![CDATA[SomeOtherData can't be deserialized because it has no default constructor (at GeneratedReaderWriter.GivesErrorForClassWithNoValidConstructor.SomeOtherData)
]]></output>
              </test-case>
              <test-case id="3538" name="GivesErrorForInvalidArraySegmentType" fullname="Mirror.Weaver.Tests.WeaverGeneratedReaderWriterTests.GivesErrorForInvalidArraySegmentType" methodname="GivesErrorForInvalidArraySegmentType" classname="Mirror.Weaver.Tests.WeaverGeneratedReaderWriterTests" runstate="Runnable" seed="1272624151" result="Passed" start-time="2021-03-06 06:28:07Z" end-time="2021-03-06 06:28:08Z" duration="0.594154" asserts="0">
                <properties />
                <output><![CDATA[Cannot generate writer for component type MonoBehaviour. Use a supported type or provide a custom writer (at UnityEngine.MonoBehaviour)
Cannot generate writer for System.ArraySegment`1<UnityEngine.MonoBehaviour>. Use a supported type or provide a custom writer (at System.ArraySegment`1<UnityEngine.MonoBehaviour>)
Cannot generate reader for component type MonoBehaviour. Use a supported type or provide a custom reader (at UnityEngine.MonoBehaviour)
]]></output>
              </test-case>
              <test-case id="3537" name="GivesErrorForInvalidArrayType" fullname="Mirror.Weaver.Tests.WeaverGeneratedReaderWriterTests.GivesErrorForInvalidArrayType" methodname="GivesErrorForInvalidArrayType" classname="Mirror.Weaver.Tests.WeaverGeneratedReaderWriterTests" runstate="Runnable" seed="521317337" result="Passed" start-time="2021-03-06 06:28:08Z" end-time="2021-03-06 06:28:08Z" duration="0.500834" asserts="0">
                <properties />
                <output><![CDATA[Cannot generate writer for component type MonoBehaviour. Use a supported type or provide a custom writer (at UnityEngine.MonoBehaviour)
Cannot generate writer for UnityEngine.MonoBehaviour[]. Use a supported type or provide a custom writer (at UnityEngine.MonoBehaviour[])
Cannot generate reader for component type MonoBehaviour. Use a supported type or provide a custom reader (at UnityEngine.MonoBehaviour)
]]></output>
              </test-case>
              <test-case id="3541" name="GivesErrorForInvalidListType" fullname="Mirror.Weaver.Tests.WeaverGeneratedReaderWriterTests.GivesErrorForInvalidListType" methodname="GivesErrorForInvalidListType" classname="Mirror.Weaver.Tests.WeaverGeneratedReaderWriterTests" runstate="Runnable" seed="498962762" result="Passed" start-time="2021-03-06 06:28:08Z" end-time="2021-03-06 06:28:09Z" duration="0.584628" asserts="0">
                <properties />
                <output><![CDATA[Cannot generate writer for component type MonoBehaviour. Use a supported type or provide a custom writer (at UnityEngine.MonoBehaviour)
Cannot generate writer for System.Collections.Generic.List`1<UnityEngine.MonoBehaviour>. Use a supported type or provide a custom writer (at System.Collections.Generic.List`1<UnityEngine.MonoBehaviour>)
Cannot generate reader for component type MonoBehaviour. Use a supported type or provide a custom reader (at UnityEngine.MonoBehaviour)
]]></output>
              </test-case>
              <test-case id="3535" name="GivesErrorForJaggedArray" fullname="Mirror.Weaver.Tests.WeaverGeneratedReaderWriterTests.GivesErrorForJaggedArray" methodname="GivesErrorForJaggedArray" classname="Mirror.Weaver.Tests.WeaverGeneratedReaderWriterTests" runstate="Runnable" seed="685433008" result="Passed" start-time="2021-03-06 06:28:09Z" end-time="2021-03-06 06:28:10Z" duration="0.480608" asserts="0">
                <properties />
              </test-case>
              <test-case id="3536" name="GivesErrorForMultidimensionalArray" fullname="Mirror.Weaver.Tests.WeaverGeneratedReaderWriterTests.GivesErrorForMultidimensionalArray" methodname="GivesErrorForMultidimensionalArray" classname="Mirror.Weaver.Tests.WeaverGeneratedReaderWriterTests" runstate="Runnable" seed="1058599156" result="Passed" start-time="2021-03-06 06:28:10Z" end-time="2021-03-06 06:28:10Z" duration="0.522423" asserts="0">
                <properties />
                <output><![CDATA[Int32[0...,0...] is an unsupported type. Multidimensional arrays are not supported (at System.Int32[0...,0...])
RpcDoSomething has invalid parameter data (at System.Void GeneratedReaderWriter.GivesErrorForMultidimensionalArray.GivesErrorForMultidimensionalArray::RpcDoSomething(System.Int32[0...,0...]))
]]></output>
              </test-case>
              <test-case id="3530" name="GivesErrorWhenUsingAbstractClass" fullname="Mirror.Weaver.Tests.WeaverGeneratedReaderWriterTests.GivesErrorWhenUsingAbstractClass" methodname="GivesErrorWhenUsingAbstractClass" classname="Mirror.Weaver.Tests.WeaverGeneratedReaderWriterTests" runstate="Runnable" seed="2090425530" result="Passed" start-time="2021-03-06 06:28:10Z" end-time="2021-03-06 06:28:11Z" duration="0.597238" asserts="0">
                <properties />
                <output><![CDATA[Cannot generate writer for abstract class DataBase. Use a supported type or provide a custom writer (at GeneratedReaderWriter.GivesErrorWhenUsingAbstractClass.DataBase)
RpcDoSomething has invalid parameter data (at System.Void GeneratedReaderWriter.GivesErrorWhenUsingAbstractClass.GivesErrorWhenUsingAbstractClass::RpcDoSomething(GeneratedReaderWriter.GivesErrorWhenUsingAbstractClass.DataBase))
]]></output>
              </test-case>
              <test-case id="3528" name="GivesErrorWhenUsingInterface" fullname="Mirror.Weaver.Tests.WeaverGeneratedReaderWriterTests.GivesErrorWhenUsingInterface" methodname="GivesErrorWhenUsingInterface" classname="Mirror.Weaver.Tests.WeaverGeneratedReaderWriterTests" runstate="Runnable" seed="833954151" result="Passed" start-time="2021-03-06 06:28:11Z" end-time="2021-03-06 06:28:11Z" duration="0.489360" asserts="0">
                <properties />
                <output><![CDATA[Cannot generate writer for interface IData. Use a supported type or provide a custom writer (at GeneratedReaderWriter.GivesErrorWhenUsingInterface.IData)
RpcDoSomething has invalid parameter data (at System.Void GeneratedReaderWriter.GivesErrorWhenUsingInterface.GivesErrorWhenUsingInterface::RpcDoSomething(GeneratedReaderWriter.GivesErrorWhenUsingInterface.IData))
]]></output>
              </test-case>
              <test-case id="3525" name="GivesErrorWhenUsingMonoBehaviour" fullname="Mirror.Weaver.Tests.WeaverGeneratedReaderWriterTests.GivesErrorWhenUsingMonoBehaviour" methodname="GivesErrorWhenUsingMonoBehaviour" classname="Mirror.Weaver.Tests.WeaverGeneratedReaderWriterTests" runstate="Runnable" seed="1867947030" result="Passed" start-time="2021-03-06 06:28:11Z" end-time="2021-03-06 06:28:12Z" duration="0.601052" asserts="0">
                <properties />
                <output><![CDATA[Cannot generate writer for component type MonoBehaviour. Use a supported type or provide a custom writer (at UnityEngine.MonoBehaviour)
RpcDoSomething has invalid parameter behaviour (at System.Void GeneratedReaderWriter.GivesErrorWhenUsingMonoBehaviour.GivesErrorWhenUsingMonoBehaviour::RpcDoSomething(UnityEngine.MonoBehaviour))
]]></output>
              </test-case>
              <test-case id="3523" name="GivesErrorWhenUsingObject" fullname="Mirror.Weaver.Tests.WeaverGeneratedReaderWriterTests.GivesErrorWhenUsingObject" methodname="GivesErrorWhenUsingObject" classname="Mirror.Weaver.Tests.WeaverGeneratedReaderWriterTests" runstate="Runnable" seed="1143427669" result="Passed" start-time="2021-03-06 06:28:12Z" end-time="2021-03-06 06:28:12Z" duration="0.492836" asserts="0">
                <properties />
                <output><![CDATA[Cannot generate writer for Object. Use a supported type or provide a custom writer (at UnityEngine.Object)
RpcDoSomething has invalid parameter obj (at System.Void GeneratedReaderWriter.GivesErrorWhenUsingObject.GivesErrorWhenUsingObject::RpcDoSomething(UnityEngine.Object))
]]></output>
              </test-case>
              <test-case id="3524" name="GivesErrorWhenUsingScriptableObject" fullname="Mirror.Weaver.Tests.WeaverGeneratedReaderWriterTests.GivesErrorWhenUsingScriptableObject" methodname="GivesErrorWhenUsingScriptableObject" classname="Mirror.Weaver.Tests.WeaverGeneratedReaderWriterTests" runstate="Runnable" seed="200883412" result="Passed" start-time="2021-03-06 06:28:12Z" end-time="2021-03-06 06:28:13Z" duration="0.493247" asserts="0">
                <properties />
                <output><![CDATA[Cannot generate writer for ScriptableObject. Use a supported type or provide a custom writer (at UnityEngine.ScriptableObject)
RpcDoSomething has invalid parameter obj (at System.Void GeneratedReaderWriter.GivesErrorWhenUsingScriptableObject.GivesErrorWhenUsingScriptableObject::RpcDoSomething(UnityEngine.ScriptableObject))
]]></output>
              </test-case>
              <test-case id="3526" name="GivesErrorWhenUsingTypeInheritedFromMonoBehaviour" fullname="Mirror.Weaver.Tests.WeaverGeneratedReaderWriterTests.GivesErrorWhenUsingTypeInheritedFromMonoBehaviour" methodname="GivesErrorWhenUsingTypeInheritedFromMonoBehaviour" classname="Mirror.Weaver.Tests.WeaverGeneratedReaderWriterTests" runstate="Runnable" seed="1292327661" result="Passed" start-time="2021-03-06 06:28:13Z" end-time="2021-03-06 06:28:13Z" duration="0.584866" asserts="0">
                <properties />
                <output><![CDATA[Cannot generate writer for component type MyBehaviour. Use a supported type or provide a custom writer (at GeneratedReaderWriter.GivesErrorWhenUsingTypeInheritedFromMonoBehaviour.MyBehaviour)
RpcDoSomething has invalid parameter behaviour (at System.Void GeneratedReaderWriter.GivesErrorWhenUsingTypeInheritedFromMonoBehaviour.GivesErrorWhenUsingTypeInheritedFromMonoBehaviour::RpcDoSomething(GeneratedReaderWriter.GivesErrorWhenUsingTypeInheritedFromMonoBehaviour.MyBehaviour))
]]></output>
              </test-case>
              <test-case id="3522" name="GivesErrorWhenUsingUnityAsset" fullname="Mirror.Weaver.Tests.WeaverGeneratedReaderWriterTests.GivesErrorWhenUsingUnityAsset" methodname="GivesErrorWhenUsingUnityAsset" classname="Mirror.Weaver.Tests.WeaverGeneratedReaderWriterTests" runstate="Runnable" seed="567699529" result="Passed" start-time="2021-03-06 06:28:13Z" end-time="2021-03-06 06:28:14Z" duration="0.484281" asserts="0">
                <properties />
                <output><![CDATA[Material can't be deserialized because it has no default constructor (at UnityEngine.Material)
]]></output>
              </test-case>
              <test-case id="3542" name="GivesWarningWhenRegisteringExistingExtensionMethod" fullname="Mirror.Weaver.Tests.WeaverGeneratedReaderWriterTests.GivesWarningWhenRegisteringExistingExtensionMethod" methodname="GivesWarningWhenRegisteringExistingExtensionMethod" classname="Mirror.Weaver.Tests.WeaverGeneratedReaderWriterTests" runstate="Runnable" seed="292405800" result="Passed" start-time="2021-03-06 06:28:14Z" end-time="2021-03-06 06:28:14Z" duration="0.590043" asserts="0">
                <properties />
                <output><![CDATA[Registering a Write method for GeneratedReaderWriter.GivesWarningWhenRegisteringExistingExtensionMethod.MyType when one already exists (at System.Void GeneratedReaderWriter.GivesWarningWhenRegisteringExistingExtensionMethod.ReadWriteExtension::WriteMyType2(Mirror.NetworkWriter,GeneratedReaderWriter.GivesWarningWhenRegisteringExistingExtensionMethod.MyType))
Registering a Read method for GeneratedReaderWriter.GivesWarningWhenRegisteringExistingExtensionMethod.MyType when one already exists (at GeneratedReaderWriter.GivesWarningWhenRegisteringExistingExtensionMethod.MyType GeneratedReaderWriter.GivesWarningWhenRegisteringExistingExtensionMethod.ReadWriteExtension::ReadMyType2(Mirror.NetworkReader))
]]></output>
              </test-case>
            </test-suite>
            <test-suite type="TestFixture" id="3543" name="WeaverMessageTests" fullname="Mirror.Weaver.Tests.WeaverMessageTests" classname="Mirror.Weaver.Tests.WeaverMessageTests" runstate="Runnable" testcasecount="7" result="Passed" start-time="2021-03-06 06:28:14Z" end-time="2021-03-06 06:28:18Z" duration="3.850884" total="7" passed="7" failed="0" inconclusive="0" skipped="0" asserts="0">
              <properties>
                <property name="Category" value="Weaver" />
              </properties>
              <test-case id="3550" name="AbstractMessageMethods" fullname="Mirror.Weaver.Tests.WeaverMessageTests.AbstractMessageMethods" methodname="AbstractMessageMethods" classname="Mirror.Weaver.Tests.WeaverMessageTests" runstate="Runnable" seed="990084954" result="Passed" start-time="2021-03-06 06:28:15Z" end-time="2021-03-06 06:28:15Z" duration="0.478734" asserts="0">
                <properties />
              </test-case>
              <test-case id="3547" name="MessageMemberGeneric" fullname="Mirror.Weaver.Tests.WeaverMessageTests.MessageMemberGeneric" methodname="MessageMemberGeneric" classname="Mirror.Weaver.Tests.WeaverMessageTests" runstate="Runnable" seed="1708116689" result="Passed" start-time="2021-03-06 06:28:15Z" end-time="2021-03-06 06:28:16Z" duration="0.510055" asserts="0">
                <properties />
                <output><![CDATA[Cannot generate reader for generic variable HasGeneric`1. Use a supported type or provide a custom reader (at WeaverMessageTests.MessageMemberGeneric.HasGeneric`1<System.Int32>)
invalidField has an unsupported type (at WeaverMessageTests.MessageMemberGeneric.HasGeneric`1<System.Int32> WeaverMessageTests.MessageMemberGeneric.MessageMemberGeneric::invalidField)
Cannot generate writer for generic type HasGeneric`1. Use a supported type or provide a custom writer (at WeaverMessageTests.MessageMemberGeneric.HasGeneric`1<System.Int32>)
]]></output>
              </test-case>
              <test-case id="3548" name="MessageMemberInterface" fullname="Mirror.Weaver.Tests.WeaverMessageTests.MessageMemberInterface" methodname="MessageMemberInterface" classname="Mirror.Weaver.Tests.WeaverMessageTests" runstate="Runnable" seed="1632525062" result="Passed" start-time="2021-03-06 06:28:16Z" end-time="2021-03-06 06:28:16Z" duration="0.591601" asserts="0">
                <properties />
                <output><![CDATA[Cannot generate reader for interface SuperCoolInterface. Use a supported type or provide a custom reader (at WeaverMessageTests.MessageMemberInterface.SuperCoolInterface)
invalidField has an unsupported type (at WeaverMessageTests.MessageMemberInterface.SuperCoolInterface WeaverMessageTests.MessageMemberInterface.MessageMemberInterface::invalidField)
Cannot generate writer for interface SuperCoolInterface. Use a supported type or provide a custom writer (at WeaverMessageTests.MessageMemberInterface.SuperCoolInterface)
]]></output>
              </test-case>
              <test-case id="3549" name="MessageNestedInheritance" fullname="Mirror.Weaver.Tests.WeaverMessageTests.MessageNestedInheritance" methodname="MessageNestedInheritance" classname="Mirror.Weaver.Tests.WeaverMessageTests" runstate="Runnable" seed="981220092" result="Passed" start-time="2021-03-06 06:28:16Z" end-time="2021-03-06 06:28:17Z" duration="0.505359" asserts="0">
                <properties />
              </test-case>
              <test-case id="3546" name="MessageSelfReferencing" fullname="Mirror.Weaver.Tests.WeaverMessageTests.MessageSelfReferencing" methodname="MessageSelfReferencing" classname="Mirror.Weaver.Tests.WeaverMessageTests" runstate="Runnable" seed="1095485457" result="Passed" start-time="2021-03-06 06:28:17Z" end-time="2021-03-06 06:28:17Z" duration="0.466004" asserts="0">
                <properties />
              </test-case>
              <test-case id="3544" name="MessageValid" fullname="Mirror.Weaver.Tests.WeaverMessageTests.MessageValid" methodname="MessageValid" classname="Mirror.Weaver.Tests.WeaverMessageTests" runstate="Runnable" seed="577622650" result="Passed" start-time="2021-03-06 06:28:17Z" end-time="2021-03-06 06:28:18Z" duration="0.566287" asserts="0">
                <properties />
              </test-case>
              <test-case id="3545" name="MessageWithBaseClass" fullname="Mirror.Weaver.Tests.WeaverMessageTests.MessageWithBaseClass" methodname="MessageWithBaseClass" classname="Mirror.Weaver.Tests.WeaverMessageTests" runstate="Runnable" seed="406659667" result="Passed" start-time="2021-03-06 06:28:18Z" end-time="2021-03-06 06:28:18Z" duration="0.469916" asserts="0">
                <properties />
              </test-case>
            </test-suite>
            <test-suite type="TestFixture" id="3551" name="WeaverMonoBehaviourTests" fullname="Mirror.Weaver.Tests.WeaverMonoBehaviourTests" classname="Mirror.Weaver.Tests.WeaverMonoBehaviourTests" runstate="Runnable" testcasecount="10" result="Passed" start-time="2021-03-06 06:28:18Z" end-time="2021-03-06 06:28:24Z" duration="5.620046" total="10" passed="10" failed="0" inconclusive="0" skipped="0" asserts="0">
              <properties>
                <property name="Category" value="Weaver" />
              </properties>
              <test-case id="3560" name="MonoBehaviourClient" fullname="Mirror.Weaver.Tests.WeaverMonoBehaviourTests.MonoBehaviourClient" methodname="MonoBehaviourClient" classname="Mirror.Weaver.Tests.WeaverMonoBehaviourTests" runstate="Runnable" seed="922836887" result="Passed" start-time="2021-03-06 06:28:19Z" end-time="2021-03-06 06:28:19Z" duration="0.572054" asserts="0">
                <properties />
              </test-case>
              <test-case id="3561" name="MonoBehaviourClientCallback" fullname="Mirror.Weaver.Tests.WeaverMonoBehaviourTests.MonoBehaviourClientCallback" methodname="MonoBehaviourClientCallback" classname="Mirror.Weaver.Tests.WeaverMonoBehaviourTests" runstate="Runnable" seed="1190973139" result="Passed" start-time="2021-03-06 06:28:19Z" end-time="2021-03-06 06:28:20Z" duration="0.478119" asserts="0">
                <properties />
              </test-case>
              <test-case id="3556" name="MonoBehaviourClientRpc" fullname="Mirror.Weaver.Tests.WeaverMonoBehaviourTests.MonoBehaviourClientRpc" methodname="MonoBehaviourClientRpc" classname="Mirror.Weaver.Tests.WeaverMonoBehaviourTests" runstate="Runnable" seed="1760460723" result="Passed" start-time="2021-03-06 06:28:20Z" end-time="2021-03-06 06:28:20Z" duration="0.489539" asserts="0">
                <properties />
                <output><![CDATA[ClientRpc RpcThisCantBeOutsideNetworkBehaviour must be declared inside a NetworkBehaviour (at System.Void WeaverMonoBehaviourTests.MonoBehaviourClientRpc.MonoBehaviourClientRpc::RpcThisCantBeOutsideNetworkBehaviour())
]]></output>
              </test-case>
              <test-case id="3555" name="MonoBehaviourCommand" fullname="Mirror.Weaver.Tests.WeaverMonoBehaviourTests.MonoBehaviourCommand" methodname="MonoBehaviourCommand" classname="Mirror.Weaver.Tests.WeaverMonoBehaviourTests" runstate="Runnable" seed="1500760217" result="Passed" start-time="2021-03-06 06:28:20Z" end-time="2021-03-06 06:28:21Z" duration="0.586238" asserts="0">
                <properties />
                <output><![CDATA[Command CmdThisCantBeOutsideNetworkBehaviour must be declared inside a NetworkBehaviour (at System.Void WeaverMonoBehaviourTests.MonoBehaviourCommand.MonoBehaviourCommand::CmdThisCantBeOutsideNetworkBehaviour())
]]></output>
              </test-case>
              <test-case id="3558" name="MonoBehaviourServer" fullname="Mirror.Weaver.Tests.WeaverMonoBehaviourTests.MonoBehaviourServer" methodname="MonoBehaviourServer" classname="Mirror.Weaver.Tests.WeaverMonoBehaviourTests" runstate="Runnable" seed="951365579" result="Passed" start-time="2021-03-06 06:28:21Z" end-time="2021-03-06 06:28:21Z" duration="0.497746" asserts="0">
                <properties />
              </test-case>
              <test-case id="3559" name="MonoBehaviourServerCallback" fullname="Mirror.Weaver.Tests.WeaverMonoBehaviourTests.MonoBehaviourServerCallback" methodname="MonoBehaviourServerCallback" classname="Mirror.Weaver.Tests.WeaverMonoBehaviourTests" runstate="Runnable" seed="126007103" result="Passed" start-time="2021-03-06 06:28:21Z" end-time="2021-03-06 06:28:22Z" duration="0.497408" asserts="0">
                <properties />
              </test-case>
              <test-case id="3554" name="MonoBehaviourSyncList" fullname="Mirror.Weaver.Tests.WeaverMonoBehaviourTests.MonoBehaviourSyncList" methodname="MonoBehaviourSyncList" classname="Mirror.Weaver.Tests.WeaverMonoBehaviourTests" runstate="Runnable" seed="1851498722" result="Passed" start-time="2021-03-06 06:28:22Z" end-time="2021-03-06 06:28:22Z" duration="0.618158" asserts="0">
                <properties />
                <output><![CDATA[potato is a SyncObject and must be inside a NetworkBehaviour.  MonoBehaviourSyncList is not a NetworkBehaviour (at Mirror.SyncListInt WeaverMonoBehaviourTests.MonoBehaviourSyncList.MonoBehaviourSyncList::potato)
]]></output>
              </test-case>
              <test-case id="3553" name="MonoBehaviourSyncVar" fullname="Mirror.Weaver.Tests.WeaverMonoBehaviourTests.MonoBehaviourSyncVar" methodname="MonoBehaviourSyncVar" classname="Mirror.Weaver.Tests.WeaverMonoBehaviourTests" runstate="Runnable" seed="1042119697" result="Passed" start-time="2021-03-06 06:28:22Z" end-time="2021-03-06 06:28:23Z" duration="0.553645" asserts="0">
                <properties />
                <output><![CDATA[SyncVar potato must be inside a NetworkBehaviour.  MonoBehaviourSyncVar is not a NetworkBehaviour (at System.Int32 WeaverMonoBehaviourTests.MonoBehaviourSyncVar.MonoBehaviourSyncVar::potato)
]]></output>
              </test-case>
              <test-case id="3557" name="MonoBehaviourTargetRpc" fullname="Mirror.Weaver.Tests.WeaverMonoBehaviourTests.MonoBehaviourTargetRpc" methodname="MonoBehaviourTargetRpc" classname="Mirror.Weaver.Tests.WeaverMonoBehaviourTests" runstate="Runnable" seed="1048386084" result="Passed" start-time="2021-03-06 06:28:23Z" end-time="2021-03-06 06:28:23Z" duration="0.485662" asserts="0">
                <properties />
                <output><![CDATA[TargetRpc TargetThisCantBeOutsideNetworkBehaviour must be declared inside a NetworkBehaviour (at System.Void WeaverMonoBehaviourTests.MonoBehaviourTargetRpc.MonoBehaviourTargetRpc::TargetThisCantBeOutsideNetworkBehaviour(Mirror.NetworkConnection))
]]></output>
              </test-case>
              <test-case id="3552" name="MonoBehaviourValid" fullname="Mirror.Weaver.Tests.WeaverMonoBehaviourTests.MonoBehaviourValid" methodname="MonoBehaviourValid" classname="Mirror.Weaver.Tests.WeaverMonoBehaviourTests" runstate="Runnable" seed="1708400849" result="Passed" start-time="2021-03-06 06:28:23Z" end-time="2021-03-06 06:28:24Z" duration="0.569046" asserts="0">
                <properties />
              </test-case>
            </test-suite>
            <test-suite type="TestFixture" id="3562" name="WeaverNetworkBehaviourTests" fullname="Mirror.Weaver.Tests.WeaverNetworkBehaviourTests" classname="Mirror.Weaver.Tests.WeaverNetworkBehaviourTests" runstate="Runnable" testcasecount="33" result="Passed" start-time="2021-03-06 06:28:24Z" end-time="2021-03-06 06:28:42Z" duration="17.735973" total="33" passed="33" failed="0" inconclusive="0" skipped="0" asserts="0">
              <properties>
                <property name="Category" value="Weaver" />
              </properties>
              <test-case id="3564" name="NetworkBehaviourAbstractBaseValid" fullname="Mirror.Weaver.Tests.WeaverNetworkBehaviourTests.NetworkBehaviourAbstractBaseValid" methodname="NetworkBehaviourAbstractBaseValid" classname="Mirror.Weaver.Tests.WeaverNetworkBehaviourTests" runstate="Runnable" seed="122736290" result="Passed" start-time="2021-03-06 06:28:24Z" end-time="2021-03-06 06:28:25Z" duration="0.479282" asserts="0">
                <properties />
              </test-case>
              <test-case id="3580" name="NetworkBehaviourClientRpcCoroutine" fullname="Mirror.Weaver.Tests.WeaverNetworkBehaviourTests.NetworkBehaviourClientRpcCoroutine" methodname="NetworkBehaviourClientRpcCoroutine" classname="Mirror.Weaver.Tests.WeaverNetworkBehaviourTests" runstate="Runnable" seed="2109455712" result="Passed" start-time="2021-03-06 06:28:25Z" end-time="2021-03-06 06:28:25Z" duration="0.593956" asserts="0">
                <properties />
                <output><![CDATA[RpcCantHaveCoroutine cannot be a coroutine (at System.Collections.IEnumerator WeaverNetworkBehaviourTests.NetworkBehaviourClientRpcCoroutine.NetworkBehaviourClientRpcCoroutine::RpcCantHaveCoroutine())
]]></output>
              </test-case>
              <test-case id="3588" name="NetworkBehaviourClientRpcDuplicateName" fullname="Mirror.Weaver.Tests.WeaverNetworkBehaviourTests.NetworkBehaviourClientRpcDuplicateName" methodname="NetworkBehaviourClientRpcDuplicateName" classname="Mirror.Weaver.Tests.WeaverNetworkBehaviourTests" runstate="Runnable" seed="227592403" result="Passed" start-time="2021-03-06 06:28:25Z" end-time="2021-03-06 06:28:26Z" duration="0.485402" asserts="0">
                <properties />
                <output><![CDATA[Duplicate ClientRpc name RpcCantHaveSameName (at System.Void WeaverNetworkBehaviourTests.NetworkBehaviourClientRpcDuplicateName.NetworkBehaviourClientRpcDuplicateName::RpcCantHaveSameName(System.Int32,System.Int32))
]]></output>
              </test-case>
              <test-case id="3579" name="NetworkBehaviourClientRpcGenericParam" fullname="Mirror.Weaver.Tests.WeaverNetworkBehaviourTests.NetworkBehaviourClientRpcGenericParam" methodname="NetworkBehaviourClientRpcGenericParam" classname="Mirror.Weaver.Tests.WeaverNetworkBehaviourTests" runstate="Runnable" seed="2040149176" result="Passed" start-time="2021-03-06 06:28:26Z" end-time="2021-03-06 06:28:26Z" duration="0.525029" asserts="0">
                <properties />
                <output><![CDATA[RpcCantHaveGeneric cannot have generic parameters (at System.Void WeaverNetworkBehaviourTests.NetworkBehaviourClientRpcGenericParam.NetworkBehaviourClientRpcGenericParam::RpcCantHaveGeneric())
]]></output>
              </test-case>
              <test-case id="3585" name="NetworkBehaviourClientRpcParamAbstract" fullname="Mirror.Weaver.Tests.WeaverNetworkBehaviourTests.NetworkBehaviourClientRpcParamAbstract" methodname="NetworkBehaviourClientRpcParamAbstract" classname="Mirror.Weaver.Tests.WeaverNetworkBehaviourTests" runstate="Runnable" seed="2014222556" result="Passed" start-time="2021-03-06 06:28:26Z" end-time="2021-03-06 06:28:27Z" duration="0.577825" asserts="0">
                <properties />
                <output><![CDATA[Cannot generate writer for abstract class AbstractClass. Use a supported type or provide a custom writer (at WeaverNetworkBehaviourTests.NetworkBehaviourClientRpcParamAbstract.NetworkBehaviourClientRpcParamAbstract/AbstractClass)
RpcCantHaveParamAbstract has invalid parameter monkeys (at System.Void WeaverNetworkBehaviourTests.NetworkBehaviourClientRpcParamAbstract.NetworkBehaviourClientRpcParamAbstract::RpcCantHaveParamAbstract(WeaverNetworkBehaviourTests.NetworkBehaviourClientRpcParamAbstract.NetworkBehaviourClientRpcParamAbstract/AbstractClass))
]]></output>
              </test-case>
              <test-case id="3586" name="NetworkBehaviourClientRpcParamComponent" fullname="Mirror.Weaver.Tests.WeaverNetworkBehaviourTests.NetworkBehaviourClientRpcParamComponent" methodname="NetworkBehaviourClientRpcParamComponent" classname="Mirror.Weaver.Tests.WeaverNetworkBehaviourTests" runstate="Runnable" seed="1426937858" result="Passed" start-time="2021-03-06 06:28:27Z" end-time="2021-03-06 06:28:27Z" duration="0.484115" asserts="0">
                <properties />
                <output><![CDATA[Cannot generate writer for component type ComponentClass. Use a supported type or provide a custom writer (at WeaverNetworkBehaviourTests.NetworkBehaviourClientRpcParamComponent.NetworkBehaviourClientRpcParamComponent/ComponentClass)
RpcCantHaveParamComponent has invalid parameter monkeyComp (at System.Void WeaverNetworkBehaviourTests.NetworkBehaviourClientRpcParamComponent.NetworkBehaviourClientRpcParamComponent::RpcCantHaveParamComponent(WeaverNetworkBehaviourTests.NetworkBehaviourClientRpcParamComponent.NetworkBehaviourClientRpcParamComponent/ComponentClass))
]]></output>
              </test-case>
              <test-case id="3587" name="NetworkBehaviourClientRpcParamNetworkConnection" fullname="Mirror.Weaver.Tests.WeaverNetworkBehaviourTests.NetworkBehaviourClientRpcParamNetworkConnection" methodname="NetworkBehaviourClientRpcParamNetworkConnection" classname="Mirror.Weaver.Tests.WeaverNetworkBehaviourTests" runstate="Runnable" seed="686149942" result="Passed" start-time="2021-03-06 06:28:27Z" end-time="2021-03-06 06:28:28Z" duration="0.481283" asserts="0">
                <properties />
                <output><![CDATA[RpcCantHaveParamOptional has invalid parameter monkeyCon. Cannot pass NetworkConnections (at System.Void WeaverNetworkBehaviourTests.NetworkBehaviourClientRpcParamNetworkConnection.NetworkBehaviourClientRpcParamNetworkConnection::RpcCantHaveParamOptional(Mirror.NetworkConnection))
]]></output>
              </test-case>
              <test-case id="3583" name="NetworkBehaviourClientRpcParamOptional" fullname="Mirror.Weaver.Tests.WeaverNetworkBehaviourTests.NetworkBehaviourClientRpcParamOptional" methodname="NetworkBehaviourClientRpcParamOptional" classname="Mirror.Weaver.Tests.WeaverNetworkBehaviourTests" runstate="Runnable" seed="1249451134" result="Passed" start-time="2021-03-06 06:28:28Z" end-time="2021-03-06 06:28:28Z" duration="0.585752" asserts="0">
                <properties />
                <output><![CDATA[RpcCantHaveParamOptional cannot have optional parameters (at System.Void WeaverNetworkBehaviourTests.NetworkBehaviourClientRpcParamOptional.NetworkBehaviourClientRpcParamOptional::RpcCantHaveParamOptional(System.Int32))
]]></output>
              </test-case>
              <test-case id="3582" name="NetworkBehaviourClientRpcParamOut" fullname="Mirror.Weaver.Tests.WeaverNetworkBehaviourTests.NetworkBehaviourClientRpcParamOut" methodname="NetworkBehaviourClientRpcParamOut" classname="Mirror.Weaver.Tests.WeaverNetworkBehaviourTests" runstate="Runnable" seed="1235986308" result="Passed" start-time="2021-03-06 06:28:28Z" end-time="2021-03-06 06:28:29Z" duration="0.488763" asserts="0">
                <properties />
                <output><![CDATA[RpcCantHaveParamOut cannot have out parameters (at System.Void WeaverNetworkBehaviourTests.NetworkBehaviourClientRpcParamOut.NetworkBehaviourClientRpcParamOut::RpcCantHaveParamOut(System.Int32&))
]]></output>
              </test-case>
              <test-case id="3584" name="NetworkBehaviourClientRpcParamRef" fullname="Mirror.Weaver.Tests.WeaverNetworkBehaviourTests.NetworkBehaviourClientRpcParamRef" methodname="NetworkBehaviourClientRpcParamRef" classname="Mirror.Weaver.Tests.WeaverNetworkBehaviourTests" runstate="Runnable" seed="1509352053" result="Passed" start-time="2021-03-06 06:28:29Z" end-time="2021-03-06 06:28:30Z" duration="0.589720" asserts="0">
                <properties />
                <output><![CDATA[Cannot pass Int32& by reference (at System.Int32&)
RpcCantHaveParamRef has invalid parameter monkeys (at System.Void WeaverNetworkBehaviourTests.NetworkBehaviourClientRpcParamRef.NetworkBehaviourClientRpcParamRef::RpcCantHaveParamRef(System.Int32&))
]]></output>
              </test-case>
              <test-case id="3581" name="NetworkBehaviourClientRpcVoidReturn" fullname="Mirror.Weaver.Tests.WeaverNetworkBehaviourTests.NetworkBehaviourClientRpcVoidReturn" methodname="NetworkBehaviourClientRpcVoidReturn" classname="Mirror.Weaver.Tests.WeaverNetworkBehaviourTests" runstate="Runnable" seed="948281764" result="Passed" start-time="2021-03-06 06:28:30Z" end-time="2021-03-06 06:28:30Z" duration="0.492880" asserts="0">
                <properties />
                <output><![CDATA[RpcCantHaveNonVoidReturn cannot return a value.  Make it void instead (at System.Int32 WeaverNetworkBehaviourTests.NetworkBehaviourClientRpcVoidReturn.NetworkBehaviourClientRpcVoidReturn::RpcCantHaveNonVoidReturn())
]]></output>
              </test-case>
              <test-case id="3567" name="NetworkBehaviourCmdCoroutine" fullname="Mirror.Weaver.Tests.WeaverNetworkBehaviourTests.NetworkBehaviourCmdCoroutine" methodname="NetworkBehaviourCmdCoroutine" classname="Mirror.Weaver.Tests.WeaverNetworkBehaviourTests" runstate="Runnable" seed="5192435" result="Passed" start-time="2021-03-06 06:28:30Z" end-time="2021-03-06 06:28:31Z" duration="0.486044" asserts="0">
                <properties />
                <output><![CDATA[CmdCantHaveCoroutine cannot be a coroutine (at System.Collections.IEnumerator WeaverNetworkBehaviourTests.NetworkBehaviourCmdCoroutine.NetworkBehaviourCmdCoroutine::CmdCantHaveCoroutine())
]]></output>
              </test-case>
              <test-case id="3595" name="NetworkBehaviourCmdDuplicateName" fullname="Mirror.Weaver.Tests.WeaverNetworkBehaviourTests.NetworkBehaviourCmdDuplicateName" methodname="NetworkBehaviourCmdDuplicateName" classname="Mirror.Weaver.Tests.WeaverNetworkBehaviourTests" runstate="Runnable" seed="2036482427" result="Passed" start-time="2021-03-06 06:28:31Z" end-time="2021-03-06 06:28:31Z" duration="0.589365" asserts="0">
                <properties />
                <output><![CDATA[Duplicate Command name CmdCantHaveSameName (at System.Void WeaverNetworkBehaviourTests.NetworkBehaviourCmdDuplicateName.NetworkBehaviourCmdDuplicateName::CmdCantHaveSameName(System.Int32,System.Int32))
]]></output>
              </test-case>
              <test-case id="3566" name="NetworkBehaviourCmdGenericParam" fullname="Mirror.Weaver.Tests.WeaverNetworkBehaviourTests.NetworkBehaviourCmdGenericParam" methodname="NetworkBehaviourCmdGenericParam" classname="Mirror.Weaver.Tests.WeaverNetworkBehaviourTests" runstate="Runnable" seed="2056427265" result="Passed" start-time="2021-03-06 06:28:31Z" end-time="2021-03-06 06:28:32Z" duration="0.492947" asserts="0">
                <properties />
                <output><![CDATA[CmdCantHaveGeneric cannot have generic parameters (at System.Void WeaverNetworkBehaviourTests.NetworkBehaviourCmdGenericParam.NetworkBehaviourCmdGenericParam::CmdCantHaveGeneric())
]]></output>
              </test-case>
              <test-case id="3592" name="NetworkBehaviourCmdParamAbstract" fullname="Mirror.Weaver.Tests.WeaverNetworkBehaviourTests.NetworkBehaviourCmdParamAbstract" methodname="NetworkBehaviourCmdParamAbstract" classname="Mirror.Weaver.Tests.WeaverNetworkBehaviourTests" runstate="Runnable" seed="1768861891" result="Passed" start-time="2021-03-06 06:28:32Z" end-time="2021-03-06 06:28:32Z" duration="0.493525" asserts="0">
                <properties />
                <output><![CDATA[Cannot generate writer for abstract class AbstractClass. Use a supported type or provide a custom writer (at WeaverNetworkBehaviourTests.NetworkBehaviourCmdParamAbstract.NetworkBehaviourCmdParamAbstract/AbstractClass)
CmdCantHaveParamAbstract has invalid parameter monkeys (at System.Void WeaverNetworkBehaviourTests.NetworkBehaviourCmdParamAbstract.NetworkBehaviourCmdParamAbstract::CmdCantHaveParamAbstract(WeaverNetworkBehaviourTests.NetworkBehaviourCmdParamAbstract.NetworkBehaviourCmdParamAbstract/AbstractClass))
Cannot generate reader for abstract class AbstractClass. Use a supported type or provide a custom reader (at WeaverNetworkBehaviourTests.NetworkBehaviourCmdParamAbstract.NetworkBehaviourCmdParamAbstract/AbstractClass)
CmdCantHaveParamAbstract has invalid parameter monkeys.  Unsupported type WeaverNetworkBehaviourTests.NetworkBehaviourCmdParamAbstract.NetworkBehaviourCmdParamAbstract/AbstractClass,  use a supported Mirror type instead (at System.Void WeaverNetworkBehaviourTests.NetworkBehaviourCmdParamAbstract.NetworkBehaviourCmdParamAbstract::CmdCantHaveParamAbstract(WeaverNetworkBehaviourTests.NetworkBehaviourCmdParamAbstract.NetworkBehaviourCmdParamAbstract/AbstractClass))
]]></output>
              </test-case>
              <test-case id="3593" name="NetworkBehaviourCmdParamComponent" fullname="Mirror.Weaver.Tests.WeaverNetworkBehaviourTests.NetworkBehaviourCmdParamComponent" methodname="NetworkBehaviourCmdParamComponent" classname="Mirror.Weaver.Tests.WeaverNetworkBehaviourTests" runstate="Runnable" seed="1848593597" result="Passed" start-time="2021-03-06 06:28:32Z" end-time="2021-03-06 06:28:33Z" duration="0.602939" asserts="0">
                <properties />
                <output><![CDATA[Cannot generate writer for component type ComponentClass. Use a supported type or provide a custom writer (at WeaverNetworkBehaviourTests.NetworkBehaviourCmdParamComponent.NetworkBehaviourCmdParamComponent/ComponentClass)
CmdCantHaveParamComponent has invalid parameter monkeyComp (at System.Void WeaverNetworkBehaviourTests.NetworkBehaviourCmdParamComponent.NetworkBehaviourCmdParamComponent::CmdCantHaveParamComponent(WeaverNetworkBehaviourTests.NetworkBehaviourCmdParamComponent.NetworkBehaviourCmdParamComponent/ComponentClass))
Cannot generate reader for component type ComponentClass. Use a supported type or provide a custom reader (at WeaverNetworkBehaviourTests.NetworkBehaviourCmdParamComponent.NetworkBehaviourCmdParamComponent/ComponentClass)
CmdCantHaveParamComponent has invalid parameter monkeyComp.  Unsupported type WeaverNetworkBehaviourTests.NetworkBehaviourCmdParamComponent.NetworkBehaviourCmdParamComponent/ComponentClass,  use a supported Mirror type instead (at System.Void WeaverNetworkBehaviourTests.NetworkBehaviourCmdParamComponent.NetworkBehaviourCmdParamComponent::CmdCantHaveParamComponent(WeaverNetworkBehaviourTests.NetworkBehaviourCmdParamComponent.NetworkBehaviourCmdParamComponent/ComponentClass))
]]></output>
              </test-case>
              <test-case id="3594" name="NetworkBehaviourCmdParamNetworkConnection" fullname="Mirror.Weaver.Tests.WeaverNetworkBehaviourTests.NetworkBehaviourCmdParamNetworkConnection" methodname="NetworkBehaviourCmdParamNetworkConnection" classname="Mirror.Weaver.Tests.WeaverNetworkBehaviourTests" runstate="Runnable" seed="1998198669" result="Passed" start-time="2021-03-06 06:28:33Z" end-time="2021-03-06 06:28:33Z" duration="0.470871" asserts="0">
                <properties />
                <output><![CDATA[CmdCantHaveParamOptional has invalid parameter monkeyCon, Cannot pass NetworkConnections. Instead use 'NetworkConnectionToClient conn = null' to get the sender's connection on the server (at System.Void WeaverNetworkBehaviourTests.NetworkBehaviourCmdParamNetworkConnection.NetworkBehaviourCmdParamNetworkConnection::CmdCantHaveParamOptional(Mirror.NetworkConnection))
]]></output>
              </test-case>
              <test-case id="3590" name="NetworkBehaviourCmdParamOptional" fullname="Mirror.Weaver.Tests.WeaverNetworkBehaviourTests.NetworkBehaviourCmdParamOptional" methodname="NetworkBehaviourCmdParamOptional" classname="Mirror.Weaver.Tests.WeaverNetworkBehaviourTests" runstate="Runnable" seed="656730508" result="Passed" start-time="2021-03-06 06:28:33Z" end-time="2021-03-06 06:28:34Z" duration="0.489130" asserts="0">
                <properties />
                <output><![CDATA[CmdCantHaveParamOptional cannot have optional parameters (at System.Void WeaverNetworkBehaviourTests.NetworkBehaviourCmdParamOptional.NetworkBehaviourCmdParamOptional::CmdCantHaveParamOptional(System.Int32))
]]></output>
              </test-case>
              <test-case id="3589" name="NetworkBehaviourCmdParamOut" fullname="Mirror.Weaver.Tests.WeaverNetworkBehaviourTests.NetworkBehaviourCmdParamOut" methodname="NetworkBehaviourCmdParamOut" classname="Mirror.Weaver.Tests.WeaverNetworkBehaviourTests" runstate="Runnable" seed="152246880" result="Passed" start-time="2021-03-06 06:28:34Z" end-time="2021-03-06 06:28:34Z" duration="0.593102" asserts="0">
                <properties />
                <output><![CDATA[CmdCantHaveParamOut cannot have out parameters (at System.Void WeaverNetworkBehaviourTests.NetworkBehaviourCmdParamOut.NetworkBehaviourCmdParamOut::CmdCantHaveParamOut(System.Int32&))
]]></output>
              </test-case>
              <test-case id="3591" name="NetworkBehaviourCmdParamRef" fullname="Mirror.Weaver.Tests.WeaverNetworkBehaviourTests.NetworkBehaviourCmdParamRef" methodname="NetworkBehaviourCmdParamRef" classname="Mirror.Weaver.Tests.WeaverNetworkBehaviourTests" runstate="Runnable" seed="306319063" result="Passed" start-time="2021-03-06 06:28:34Z" end-time="2021-03-06 06:28:35Z" duration="0.493719" asserts="0">
                <properties />
                <output><![CDATA[Cannot pass Int32& by reference (at System.Int32&)
CmdCantHaveParamRef has invalid parameter monkeys (at System.Void WeaverNetworkBehaviourTests.NetworkBehaviourCmdParamRef.NetworkBehaviourCmdParamRef::CmdCantHaveParamRef(System.Int32&))
Cannot pass type Int32& by reference (at System.Int32&)
CmdCantHaveParamRef has invalid parameter monkeys.  Unsupported type System.Int32&,  use a supported Mirror type instead (at System.Void WeaverNetworkBehaviourTests.NetworkBehaviourCmdParamRef.NetworkBehaviourCmdParamRef::CmdCantHaveParamRef(System.Int32&))
]]></output>
              </test-case>
              <test-case id="3568" name="NetworkBehaviourCmdVoidReturn" fullname="Mirror.Weaver.Tests.WeaverNetworkBehaviourTests.NetworkBehaviourCmdVoidReturn" methodname="NetworkBehaviourCmdVoidReturn" classname="Mirror.Weaver.Tests.WeaverNetworkBehaviourTests" runstate="Runnable" seed="217841339" result="Passed" start-time="2021-03-06 06:28:35Z" end-time="2021-03-06 06:28:35Z" duration="0.480275" asserts="0">
                <properties />
                <output><![CDATA[CmdCantHaveNonVoidReturn cannot return a value.  Make it void instead (at System.Int32 WeaverNetworkBehaviourTests.NetworkBehaviourCmdVoidReturn.NetworkBehaviourCmdVoidReturn::CmdCantHaveNonVoidReturn())
]]></output>
              </test-case>
              <test-case id="3565" name="NetworkBehaviourGeneric" fullname="Mirror.Weaver.Tests.WeaverNetworkBehaviourTests.NetworkBehaviourGeneric" methodname="NetworkBehaviourGeneric" classname="Mirror.Weaver.Tests.WeaverNetworkBehaviourTests" runstate="Runnable" seed="802509443" result="Passed" start-time="2021-03-06 06:28:35Z" end-time="2021-03-06 06:28:36Z" duration="0.593820" asserts="0">
                <properties />
                <output><![CDATA[NetworkBehaviourGeneric`1 cannot have generic parameters (at WeaverNetworkBehaviourTests.NetworkBehaviourGeneric.NetworkBehaviourGeneric`1)
]]></output>
              </test-case>
              <test-case id="3570" name="NetworkBehaviourTargetRpcCoroutine" fullname="Mirror.Weaver.Tests.WeaverNetworkBehaviourTests.NetworkBehaviourTargetRpcCoroutine" methodname="NetworkBehaviourTargetRpcCoroutine" classname="Mirror.Weaver.Tests.WeaverNetworkBehaviourTests" runstate="Runnable" seed="344081771" result="Passed" start-time="2021-03-06 06:28:36Z" end-time="2021-03-06 06:28:36Z" duration="0.485472" asserts="0">
                <properties />
                <output><![CDATA[TargetRpcCantHaveCoroutine cannot be a coroutine (at System.Collections.IEnumerator WeaverNetworkBehaviourTests.NetworkBehaviourTargetRpcCoroutine.NetworkBehaviourTargetRpcCoroutine::TargetRpcCantHaveCoroutine())
]]></output>
              </test-case>
              <test-case id="3578" name="NetworkBehaviourTargetRpcDuplicateName" fullname="Mirror.Weaver.Tests.WeaverNetworkBehaviourTests.NetworkBehaviourTargetRpcDuplicateName" methodname="NetworkBehaviourTargetRpcDuplicateName" classname="Mirror.Weaver.Tests.WeaverNetworkBehaviourTests" runstate="Runnable" seed="370513168" result="Passed" start-time="2021-03-06 06:28:36Z" end-time="2021-03-06 06:28:37Z" duration="0.481470" asserts="0">
                <properties />
                <output><![CDATA[Duplicate Target Rpc name TargetRpcCantHaveSameName (at System.Void WeaverNetworkBehaviourTests.NetworkBehaviourTargetRpcDuplicateName.NetworkBehaviourTargetRpcDuplicateName::TargetRpcCantHaveSameName(Mirror.NetworkConnection,System.Int32,System.Int32))
]]></output>
              </test-case>
              <test-case id="3569" name="NetworkBehaviourTargetRpcGenericParam" fullname="Mirror.Weaver.Tests.WeaverNetworkBehaviourTests.NetworkBehaviourTargetRpcGenericParam" methodname="NetworkBehaviourTargetRpcGenericParam" classname="Mirror.Weaver.Tests.WeaverNetworkBehaviourTests" runstate="Runnable" seed="1418956784" result="Passed" start-time="2021-03-06 06:28:37Z" end-time="2021-03-06 06:28:37Z" duration="0.585682" asserts="0">
                <properties />
                <output><![CDATA[TargetRpcCantHaveGeneric cannot have generic parameters (at System.Void WeaverNetworkBehaviourTests.NetworkBehaviourTargetRpcGenericParam.NetworkBehaviourTargetRpcGenericParam::TargetRpcCantHaveGeneric())
]]></output>
              </test-case>
              <test-case id="3575" name="NetworkBehaviourTargetRpcParamAbstract" fullname="Mirror.Weaver.Tests.WeaverNetworkBehaviourTests.NetworkBehaviourTargetRpcParamAbstract" methodname="NetworkBehaviourTargetRpcParamAbstract" classname="Mirror.Weaver.Tests.WeaverNetworkBehaviourTests" runstate="Runnable" seed="452070978" result="Passed" start-time="2021-03-06 06:28:37Z" end-time="2021-03-06 06:28:38Z" duration="0.497118" asserts="0">
                <properties />
                <output><![CDATA[Cannot generate writer for abstract class AbstractClass. Use a supported type or provide a custom writer (at WeaverNetworkBehaviourTests.NetworkBehaviourTargetRpcParamAbstract.NetworkBehaviourTargetRpcParamAbstract/AbstractClass)
TargetRpcCantHaveParamAbstract has invalid parameter monkeys (at System.Void WeaverNetworkBehaviourTests.NetworkBehaviourTargetRpcParamAbstract.NetworkBehaviourTargetRpcParamAbstract::TargetRpcCantHaveParamAbstract(Mirror.NetworkConnection,WeaverNetworkBehaviourTests.NetworkBehaviourTargetRpcParamAbstract.NetworkBehaviourTargetRpcParamAbstract/AbstractClass))
Cannot generate reader for abstract class AbstractClass. Use a supported type or provide a custom reader (at WeaverNetworkBehaviourTests.NetworkBehaviourTargetRpcParamAbstract.NetworkBehaviourTargetRpcParamAbstract/AbstractClass)
TargetRpcCantHaveParamAbstract has invalid parameter monkeys.  Unsupported type WeaverNetworkBehaviourTests.NetworkBehaviourTargetRpcParamAbstract.NetworkBehaviourTargetRpcParamAbstract/AbstractClass,  use a supported Mirror type instead (at System.Void WeaverNetworkBehaviourTests.NetworkBehaviourTargetRpcParamAbstract.NetworkBehaviourTargetRpcParamAbstract::TargetRpcCantHaveParamAbstract(Mirror.NetworkConnection,WeaverNetworkBehaviourTests.NetworkBehaviourTargetRpcParamAbstract.NetworkBehaviourTargetRpcParamAbstract/AbstractClass))
]]></output>
              </test-case>
              <test-case id="3576" name="NetworkBehaviourTargetRpcParamComponent" fullname="Mirror.Weaver.Tests.WeaverNetworkBehaviourTests.NetworkBehaviourTargetRpcParamComponent" methodname="NetworkBehaviourTargetRpcParamComponent" classname="Mirror.Weaver.Tests.WeaverNetworkBehaviourTests" runstate="Runnable" seed="52109914" result="Passed" start-time="2021-03-06 06:28:38Z" end-time="2021-03-06 06:28:39Z" duration="0.606423" asserts="0">
                <properties />
                <output><![CDATA[Cannot generate writer for component type ComponentClass. Use a supported type or provide a custom writer (at WeaverNetworkBehaviourTests.NetworkBehaviourTargetRpcParamComponent.NetworkBehaviourTargetRpcParamComponent/ComponentClass)
TargetRpcCantHaveParamComponent has invalid parameter monkeyComp (at System.Void WeaverNetworkBehaviourTests.NetworkBehaviourTargetRpcParamComponent.NetworkBehaviourTargetRpcParamComponent::TargetRpcCantHaveParamComponent(Mirror.NetworkConnection,WeaverNetworkBehaviourTests.NetworkBehaviourTargetRpcParamComponent.NetworkBehaviourTargetRpcParamComponent/ComponentClass))
Cannot generate reader for component type ComponentClass. Use a supported type or provide a custom reader (at WeaverNetworkBehaviourTests.NetworkBehaviourTargetRpcParamComponent.NetworkBehaviourTargetRpcParamComponent/ComponentClass)
TargetRpcCantHaveParamComponent has invalid parameter monkeyComp.  Unsupported type WeaverNetworkBehaviourTests.NetworkBehaviourTargetRpcParamComponent.NetworkBehaviourTargetRpcParamComponent/ComponentClass,  use a supported Mirror type instead (at System.Void WeaverNetworkBehaviourTests.NetworkBehaviourTargetRpcParamComponent.NetworkBehaviourTargetRpcParamComponent::TargetRpcCantHaveParamComponent(Mirror.NetworkConnection,WeaverNetworkBehaviourTests.NetworkBehaviourTargetRpcParamComponent.NetworkBehaviourTargetRpcParamComponent/ComponentClass))
]]></output>
              </test-case>
              <test-case id="3577" name="NetworkBehaviourTargetRpcParamNetworkConnection" fullname="Mirror.Weaver.Tests.WeaverNetworkBehaviourTests.NetworkBehaviourTargetRpcParamNetworkConnection" methodname="NetworkBehaviourTargetRpcParamNetworkConnection" classname="Mirror.Weaver.Tests.WeaverNetworkBehaviourTests" runstate="Runnable" seed="2131961644" result="Passed" start-time="2021-03-06 06:28:39Z" end-time="2021-03-06 06:28:39Z" duration="0.475114" asserts="0">
                <properties />
              </test-case>
              <test-case id="3573" name="NetworkBehaviourTargetRpcParamOptional" fullname="Mirror.Weaver.Tests.WeaverNetworkBehaviourTests.NetworkBehaviourTargetRpcParamOptional" methodname="NetworkBehaviourTargetRpcParamOptional" classname="Mirror.Weaver.Tests.WeaverNetworkBehaviourTests" runstate="Runnable" seed="72637482" result="Passed" start-time="2021-03-06 06:28:39Z" end-time="2021-03-06 06:28:39Z" duration="0.489878" asserts="0">
                <properties />
                <output><![CDATA[TargetRpcCantHaveParamOptional cannot have optional parameters (at System.Void WeaverNetworkBehaviourTests.NetworkBehaviourTargetRpcParamOptional.NetworkBehaviourTargetRpcParamOptional::TargetRpcCantHaveParamOptional(Mirror.NetworkConnection,System.Int32))
]]></output>
              </test-case>
              <test-case id="3572" name="NetworkBehaviourTargetRpcParamOut" fullname="Mirror.Weaver.Tests.WeaverNetworkBehaviourTests.NetworkBehaviourTargetRpcParamOut" methodname="NetworkBehaviourTargetRpcParamOut" classname="Mirror.Weaver.Tests.WeaverNetworkBehaviourTests" runstate="Runnable" seed="1678878356" result="Passed" start-time="2021-03-06 06:28:39Z" end-time="2021-03-06 06:28:40Z" duration="0.600800" asserts="0">
                <properties />
                <output><![CDATA[TargetRpcCantHaveParamOut cannot have out parameters (at System.Void WeaverNetworkBehaviourTests.NetworkBehaviourTargetRpcParamOut.NetworkBehaviourTargetRpcParamOut::TargetRpcCantHaveParamOut(Mirror.NetworkConnection,System.Int32&))
]]></output>
              </test-case>
              <test-case id="3574" name="NetworkBehaviourTargetRpcParamRef" fullname="Mirror.Weaver.Tests.WeaverNetworkBehaviourTests.NetworkBehaviourTargetRpcParamRef" methodname="NetworkBehaviourTargetRpcParamRef" classname="Mirror.Weaver.Tests.WeaverNetworkBehaviourTests" runstate="Runnable" seed="1433479772" result="Passed" start-time="2021-03-06 06:28:40Z" end-time="2021-03-06 06:28:41Z" duration="0.501168" asserts="0">
                <properties />
                <output><![CDATA[Cannot pass Int32& by reference (at System.Int32&)
TargetRpcCantHaveParamRef has invalid parameter monkeys (at System.Void WeaverNetworkBehaviourTests.NetworkBehaviourTargetRpcParamRef.NetworkBehaviourTargetRpcParamRef::TargetRpcCantHaveParamRef(Mirror.NetworkConnection,System.Int32&))
Cannot pass type Int32& by reference (at System.Int32&)
TargetRpcCantHaveParamRef has invalid parameter monkeys.  Unsupported type System.Int32&,  use a supported Mirror type instead (at System.Void WeaverNetworkBehaviourTests.NetworkBehaviourTargetRpcParamRef.NetworkBehaviourTargetRpcParamRef::TargetRpcCantHaveParamRef(Mirror.NetworkConnection,System.Int32&))
]]></output>
              </test-case>
              <test-case id="3571" name="NetworkBehaviourTargetRpcVoidReturn" fullname="Mirror.Weaver.Tests.WeaverNetworkBehaviourTests.NetworkBehaviourTargetRpcVoidReturn" methodname="NetworkBehaviourTargetRpcVoidReturn" classname="Mirror.Weaver.Tests.WeaverNetworkBehaviourTests" runstate="Runnable" seed="994505645" result="Passed" start-time="2021-03-06 06:28:41Z" end-time="2021-03-06 06:28:41Z" duration="0.480135" asserts="0">
                <properties />
                <output><![CDATA[TargetRpcCantHaveNonVoidReturn cannot return a value.  Make it void instead (at System.Int32 WeaverNetworkBehaviourTests.NetworkBehaviourTargetRpcVoidReturn.NetworkBehaviourTargetRpcVoidReturn::TargetRpcCantHaveNonVoidReturn())
]]></output>
              </test-case>
              <test-case id="3563" name="NetworkBehaviourValid" fullname="Mirror.Weaver.Tests.WeaverNetworkBehaviourTests.NetworkBehaviourValid" methodname="NetworkBehaviourValid" classname="Mirror.Weaver.Tests.WeaverNetworkBehaviourTests" runstate="Runnable" seed="867591340" result="Passed" start-time="2021-03-06 06:28:41Z" end-time="2021-03-06 06:28:42Z" duration="0.601936" asserts="0">
                <properties />
              </test-case>
            </test-suite>
            <test-suite type="TestFixture" id="3596" name="WeaverSyncDictionaryTests" fullname="Mirror.Weaver.Tests.WeaverSyncDictionaryTests" classname="Mirror.Weaver.Tests.WeaverSyncDictionaryTests" runstate="Runnable" testcasecount="11" result="Passed" start-time="2021-03-06 06:28:42Z" end-time="2021-03-06 06:28:51Z" duration="9.281524" total="11" passed="11" failed="0" inconclusive="0" skipped="0" asserts="0">
              <properties>
                <property name="Category" value="Weaver" />
              </properties>
              <test-case id="3607" name="GenericSyncDictionaryCanBeUsed" fullname="Mirror.Weaver.Tests.WeaverSyncDictionaryTests.GenericSyncDictionaryCanBeUsed" methodname="GenericSyncDictionaryCanBeUsed" classname="Mirror.Weaver.Tests.WeaverSyncDictionaryTests" runstate="Runnable" seed="1898189169" result="Passed" start-time="2021-03-06 06:28:42Z" end-time="2021-03-06 06:28:43Z" duration="0.600739" asserts="0">
                <properties />
              </test-case>
              <test-case id="3597" name="SyncDictionary" fullname="Mirror.Weaver.Tests.WeaverSyncDictionaryTests.SyncDictionary" methodname="SyncDictionary" classname="Mirror.Weaver.Tests.WeaverSyncDictionaryTests" runstate="Runnable" seed="2063369805" result="Passed" start-time="2021-03-06 06:28:43Z" end-time="2021-03-06 06:28:43Z" duration="0.796927" asserts="0">
                <properties />
              </test-case>
              <test-case id="3604" name="SyncDictionaryErrorForGenericStructItem" fullname="Mirror.Weaver.Tests.WeaverSyncDictionaryTests.SyncDictionaryErrorForGenericStructItem" methodname="SyncDictionaryErrorForGenericStructItem" classname="Mirror.Weaver.Tests.WeaverSyncDictionaryTests" runstate="Runnable" seed="1804956211" result="Passed" start-time="2021-03-06 06:28:43Z" end-time="2021-03-06 06:28:44Z" duration="0.998564" asserts="0">
                <properties />
                <output><![CDATA[Cannot generate reader for generic variable MyGenericStruct`1. Use a supported type or provide a custom reader (at WeaverSyncDictionaryTests.SyncDictionaryErrorForGenericStructItem.SyncDictionaryErrorForGenericStructItem/MyGenericStruct`1<System.Single>)
Cannot generate writer for generic type MyGenericStruct`1. Use a supported type or provide a custom writer (at WeaverSyncDictionaryTests.SyncDictionaryErrorForGenericStructItem.SyncDictionaryErrorForGenericStructItem/MyGenericStruct`1<System.Single>)
]]></output>
              </test-case>
              <test-case id="3603" name="SyncDictionaryErrorForGenericStructKey" fullname="Mirror.Weaver.Tests.WeaverSyncDictionaryTests.SyncDictionaryErrorForGenericStructKey" methodname="SyncDictionaryErrorForGenericStructKey" classname="Mirror.Weaver.Tests.WeaverSyncDictionaryTests" runstate="Runnable" seed="615144889" result="Passed" start-time="2021-03-06 06:28:44Z" end-time="2021-03-06 06:28:45Z" duration="0.797014" asserts="0">
                <properties />
                <output><![CDATA[Cannot generate reader for generic variable MyGenericStruct`1. Use a supported type or provide a custom reader (at WeaverSyncDictionaryTests.SyncDictionaryErrorForGenericStructKey.SyncDictionaryErrorForGenericStructKey/MyGenericStruct`1<System.Single>)
Cannot generate writer for generic type MyGenericStruct`1. Use a supported type or provide a custom writer (at WeaverSyncDictionaryTests.SyncDictionaryErrorForGenericStructKey.SyncDictionaryErrorForGenericStructKey/MyGenericStruct`1<System.Single>)
]]></output>
              </test-case>
              <test-case id="3598" name="SyncDictionaryGenericAbstractInheritance" fullname="Mirror.Weaver.Tests.WeaverSyncDictionaryTests.SyncDictionaryGenericAbstractInheritance" methodname="SyncDictionaryGenericAbstractInheritance" classname="Mirror.Weaver.Tests.WeaverSyncDictionaryTests" runstate="Runnable" seed="25323217" result="Passed" start-time="2021-03-06 06:28:45Z" end-time="2021-03-06 06:28:46Z" duration="0.797381" asserts="0">
                <properties />
              </test-case>
              <test-case id="3599" name="SyncDictionaryGenericInheritance" fullname="Mirror.Weaver.Tests.WeaverSyncDictionaryTests.SyncDictionaryGenericInheritance" methodname="SyncDictionaryGenericInheritance" classname="Mirror.Weaver.Tests.WeaverSyncDictionaryTests" runstate="Runnable" seed="835417669" result="Passed" start-time="2021-03-06 06:28:46Z" end-time="2021-03-06 06:28:47Z" duration="0.897630" asserts="0">
                <properties />
              </test-case>
              <test-case id="3606" name="SyncDictionaryGenericStructItemWithCustomMethods" fullname="Mirror.Weaver.Tests.WeaverSyncDictionaryTests.SyncDictionaryGenericStructItemWithCustomMethods" methodname="SyncDictionaryGenericStructItemWithCustomMethods" classname="Mirror.Weaver.Tests.WeaverSyncDictionaryTests" runstate="Runnable" seed="247546819" result="Passed" start-time="2021-03-06 06:28:47Z" end-time="2021-03-06 06:28:48Z" duration="0.797577" asserts="0">
                <properties />
              </test-case>
              <test-case id="3605" name="SyncDictionaryGenericStructKeyWithCustomMethods" fullname="Mirror.Weaver.Tests.WeaverSyncDictionaryTests.SyncDictionaryGenericStructKeyWithCustomMethods" methodname="SyncDictionaryGenericStructKeyWithCustomMethods" classname="Mirror.Weaver.Tests.WeaverSyncDictionaryTests" runstate="Runnable" seed="1137939807" result="Passed" start-time="2021-03-06 06:28:48Z" end-time="2021-03-06 06:28:49Z" duration="0.798041" asserts="0">
                <properties />
              </test-case>
              <test-case id="3600" name="SyncDictionaryInheritance" fullname="Mirror.Weaver.Tests.WeaverSyncDictionaryTests.SyncDictionaryInheritance" methodname="SyncDictionaryInheritance" classname="Mirror.Weaver.Tests.WeaverSyncDictionaryTests" runstate="Runnable" seed="132801260" result="Passed" start-time="2021-03-06 06:28:49Z" end-time="2021-03-06 06:28:49Z" duration="0.897771" asserts="0">
                <properties />
              </test-case>
              <test-case id="3602" name="SyncDictionaryStructItem" fullname="Mirror.Weaver.Tests.WeaverSyncDictionaryTests.SyncDictionaryStructItem" methodname="SyncDictionaryStructItem" classname="Mirror.Weaver.Tests.WeaverSyncDictionaryTests" runstate="Runnable" seed="4832525" result="Passed" start-time="2021-03-06 06:28:49Z" end-time="2021-03-06 06:28:50Z" duration="0.798226" asserts="0">
                <properties />
              </test-case>
              <test-case id="3601" name="SyncDictionaryStructKey" fullname="Mirror.Weaver.Tests.WeaverSyncDictionaryTests.SyncDictionaryStructKey" methodname="SyncDictionaryStructKey" classname="Mirror.Weaver.Tests.WeaverSyncDictionaryTests" runstate="Runnable" seed="495851327" result="Passed" start-time="2021-03-06 06:28:50Z" end-time="2021-03-06 06:28:51Z" duration="0.798006" asserts="0">
                <properties />
              </test-case>
            </test-suite>
            <test-suite type="TestFixture" id="3608" name="WeaverSyncListTests" fullname="Mirror.Weaver.Tests.WeaverSyncListTests" classname="Mirror.Weaver.Tests.WeaverSyncListTests" runstate="Runnable" testcasecount="19" result="Passed" start-time="2021-03-06 06:28:51Z" end-time="2021-03-06 06:29:02Z" duration="10.509365" total="19" passed="19" failed="0" inconclusive="0" skipped="0" asserts="0">
              <properties>
                <property name="Category" value="Weaver" />
              </properties>
              <test-case id="3627" name="GenericSyncListCanBeUsed" fullname="Mirror.Weaver.Tests.WeaverSyncListTests.GenericSyncListCanBeUsed" methodname="GenericSyncListCanBeUsed" classname="Mirror.Weaver.Tests.WeaverSyncListTests" runstate="Runnable" seed="503025904" result="Passed" start-time="2021-03-06 06:28:51Z" end-time="2021-03-06 06:28:52Z" duration="0.604779" asserts="0">
                <properties />
              </test-case>
              <test-case id="3609" name="SyncList" fullname="Mirror.Weaver.Tests.WeaverSyncListTests.SyncList" methodname="SyncList" classname="Mirror.Weaver.Tests.WeaverSyncListTests" runstate="Runnable" seed="1679813764" result="Passed" start-time="2021-03-06 06:28:52Z" end-time="2021-03-06 06:28:53Z" duration="0.482476" asserts="0">
                <properties />
              </test-case>
              <test-case id="3610" name="SyncListByteValid" fullname="Mirror.Weaver.Tests.WeaverSyncListTests.SyncListByteValid" methodname="SyncListByteValid" classname="Mirror.Weaver.Tests.WeaverSyncListTests" runstate="Runnable" seed="585113408" result="Passed" start-time="2021-03-06 06:28:53Z" end-time="2021-03-06 06:28:53Z" duration="0.602397" asserts="0">
                <properties />
              </test-case>
              <test-case id="3623" name="SyncListErrorForGenericStruct" fullname="Mirror.Weaver.Tests.WeaverSyncListTests.SyncListErrorForGenericStruct" methodname="SyncListErrorForGenericStruct" classname="Mirror.Weaver.Tests.WeaverSyncListTests" runstate="Runnable" seed="1526358055" result="Passed" start-time="2021-03-06 06:28:53Z" end-time="2021-03-06 06:28:54Z" duration="0.502467" asserts="0">
                <properties />
                <output><![CDATA[Cannot generate reader for generic variable MyGenericStruct`1. Use a supported type or provide a custom reader (at WeaverSyncListTests.SyncListErrorForGenericStruct.SyncListErrorForGenericStruct/MyGenericStruct`1<System.Single>)
Cannot generate writer for generic type MyGenericStruct`1. Use a supported type or provide a custom writer (at WeaverSyncListTests.SyncListErrorForGenericStruct.SyncListErrorForGenericStruct/MyGenericStruct`1<System.Single>)
]]></output>
              </test-case>
              <test-case id="3625" name="SyncListErrorForInterface" fullname="Mirror.Weaver.Tests.WeaverSyncListTests.SyncListErrorForInterface" methodname="SyncListErrorForInterface" classname="Mirror.Weaver.Tests.WeaverSyncListTests" runstate="Runnable" seed="1673576233" result="Passed" start-time="2021-03-06 06:28:54Z" end-time="2021-03-06 06:28:54Z" duration="0.521065" asserts="0">
                <properties />
                <output><![CDATA[Cannot generate reader for interface MyInterface. Use a supported type or provide a custom reader (at WeaverSyncListTests.SyncListErrorForInterface.MyInterface)
Cannot generate writer for interface MyInterface. Use a supported type or provide a custom writer (at WeaverSyncListTests.SyncListErrorForInterface.MyInterface)
]]></output>
              </test-case>
              <test-case id="3611" name="SyncListGenericAbstractInheritance" fullname="Mirror.Weaver.Tests.WeaverSyncListTests.SyncListGenericAbstractInheritance" methodname="SyncListGenericAbstractInheritance" classname="Mirror.Weaver.Tests.WeaverSyncListTests" runstate="Runnable" seed="246955193" result="Passed" start-time="2021-03-06 06:28:54Z" end-time="2021-03-06 06:28:55Z" duration="0.582086" asserts="0">
                <properties />
              </test-case>
              <test-case id="3612" name="SyncListGenericInheritance" fullname="Mirror.Weaver.Tests.WeaverSyncListTests.SyncListGenericInheritance" methodname="SyncListGenericInheritance" classname="Mirror.Weaver.Tests.WeaverSyncListTests" runstate="Runnable" seed="1324104193" result="Passed" start-time="2021-03-06 06:28:55Z" end-time="2021-03-06 06:28:55Z" duration="0.478104" asserts="0">
                <properties />
              </test-case>
              <test-case id="3613" name="SyncListGenericInheritanceWithMultipleGeneric" fullname="Mirror.Weaver.Tests.WeaverSyncListTests.SyncListGenericInheritanceWithMultipleGeneric" methodname="SyncListGenericInheritanceWithMultipleGeneric" classname="Mirror.Weaver.Tests.WeaverSyncListTests" runstate="Runnable" seed="1839424435" result="Passed" start-time="2021-03-06 06:28:55Z" end-time="2021-03-06 06:28:56Z" duration="0.474447" asserts="0">
                <properties />
              </test-case>
              <test-case id="3624" name="SyncListGenericStructWithCustomMethods" fullname="Mirror.Weaver.Tests.WeaverSyncListTests.SyncListGenericStructWithCustomMethods" methodname="SyncListGenericStructWithCustomMethods" classname="Mirror.Weaver.Tests.WeaverSyncListTests" runstate="Runnable" seed="1200126550" result="Passed" start-time="2021-03-06 06:28:56Z" end-time="2021-03-06 06:28:56Z" duration="0.593256" asserts="0">
                <properties />
              </test-case>
              <test-case id="3614" name="SyncListInheritance" fullname="Mirror.Weaver.Tests.WeaverSyncListTests.SyncListInheritance" methodname="SyncListInheritance" classname="Mirror.Weaver.Tests.WeaverSyncListTests" runstate="Runnable" seed="1917017347" result="Passed" start-time="2021-03-06 06:28:56Z" end-time="2021-03-06 06:28:57Z" duration="0.474169" asserts="0">
                <properties />
              </test-case>
              <test-case id="3626" name="SyncListInterfaceWithCustomMethods" fullname="Mirror.Weaver.Tests.WeaverSyncListTests.SyncListInterfaceWithCustomMethods" methodname="SyncListInterfaceWithCustomMethods" classname="Mirror.Weaver.Tests.WeaverSyncListTests" runstate="Runnable" seed="921558777" result="Passed" start-time="2021-03-06 06:28:57Z" end-time="2021-03-06 06:28:57Z" duration="0.474358" asserts="0">
                <properties />
              </test-case>
              <test-case id="3615" name="SyncListMissingParamlessCtor" fullname="Mirror.Weaver.Tests.WeaverSyncListTests.SyncListMissingParamlessCtor" methodname="SyncListMissingParamlessCtor" classname="Mirror.Weaver.Tests.WeaverSyncListTests" runstate="Runnable" seed="979172147" result="Passed" start-time="2021-03-06 06:28:57Z" end-time="2021-03-06 06:28:58Z" duration="0.602167" asserts="0">
                <properties />
              </test-case>
              <test-case id="3616" name="SyncListMissingParamlessCtorManuallyInitialized" fullname="Mirror.Weaver.Tests.WeaverSyncListTests.SyncListMissingParamlessCtorManuallyInitialized" methodname="SyncListMissingParamlessCtorManuallyInitialized" classname="Mirror.Weaver.Tests.WeaverSyncListTests" runstate="Runnable" seed="1818009140" result="Passed" start-time="2021-03-06 06:28:58Z" end-time="2021-03-06 06:28:58Z" duration="0.478774" asserts="0">
                <properties />
              </test-case>
              <test-case id="3618" name="SyncListNestedInAbstractClass" fullname="Mirror.Weaver.Tests.WeaverSyncListTests.SyncListNestedInAbstractClass" methodname="SyncListNestedInAbstractClass" classname="Mirror.Weaver.Tests.WeaverSyncListTests" runstate="Runnable" seed="2147466396" result="Passed" start-time="2021-03-06 06:28:58Z" end-time="2021-03-06 06:28:59Z" duration="0.478248" asserts="0">
                <properties />
              </test-case>
              <test-case id="3619" name="SyncListNestedInAbstractClassWithInvalid" fullname="Mirror.Weaver.Tests.WeaverSyncListTests.SyncListNestedInAbstractClassWithInvalid" methodname="SyncListNestedInAbstractClassWithInvalid" classname="Mirror.Weaver.Tests.WeaverSyncListTests" runstate="Runnable" seed="1941691284" result="Passed" start-time="2021-03-06 06:28:59Z" end-time="2021-03-06 06:28:59Z" duration="0.606245" asserts="0">
                <properties />
                <output><![CDATA[Cannot generate reader for Object. Use a supported type or provide a custom reader (at UnityEngine.Object)
target has an unsupported type (at UnityEngine.Object WeaverSyncListTests.SyncListNestedInAbstractClassWithInvalid.SyncListNestedStructWithInvalid/SomeAbstractClass/MyNestedStruct::target)
Cannot generate writer for Object. Use a supported type or provide a custom writer (at UnityEngine.Object)
]]></output>
              </test-case>
              <test-case id="3620" name="SyncListNestedInStruct" fullname="Mirror.Weaver.Tests.WeaverSyncListTests.SyncListNestedInStruct" methodname="SyncListNestedInStruct" classname="Mirror.Weaver.Tests.WeaverSyncListTests" runstate="Runnable" seed="2060971423" result="Passed" start-time="2021-03-06 06:28:59Z" end-time="2021-03-06 06:29:00Z" duration="0.483880" asserts="0">
                <properties />
              </test-case>
              <test-case id="3621" name="SyncListNestedInStructWithInvalid" fullname="Mirror.Weaver.Tests.WeaverSyncListTests.SyncListNestedInStructWithInvalid" methodname="SyncListNestedInStructWithInvalid" classname="Mirror.Weaver.Tests.WeaverSyncListTests" runstate="Runnable" seed="154500095" result="Passed" start-time="2021-03-06 06:29:00Z" end-time="2021-03-06 06:29:00Z" duration="0.513952" asserts="0">
                <properties />
                <output><![CDATA[Cannot generate reader for Object. Use a supported type or provide a custom reader (at UnityEngine.Object)
target has an unsupported type (at UnityEngine.Object WeaverSyncListTests.SyncListNestedInStructWithInvalid.SyncListNestedInStructWithInvalid/SomeData::target)
Cannot generate writer for Object. Use a supported type or provide a custom writer (at UnityEngine.Object)
]]></output>
              </test-case>
              <test-case id="3617" name="SyncListNestedStruct" fullname="Mirror.Weaver.Tests.WeaverSyncListTests.SyncListNestedStruct" methodname="SyncListNestedStruct" classname="Mirror.Weaver.Tests.WeaverSyncListTests" runstate="Runnable" seed="446978956" result="Passed" start-time="2021-03-06 06:29:00Z" end-time="2021-03-06 06:29:01Z" duration="0.589599" asserts="0">
                <properties />
              </test-case>
              <test-case id="3622" name="SyncListStruct" fullname="Mirror.Weaver.Tests.WeaverSyncListTests.SyncListStruct" methodname="SyncListStruct" classname="Mirror.Weaver.Tests.WeaverSyncListTests" runstate="Runnable" seed="1367871227" result="Passed" start-time="2021-03-06 06:29:01Z" end-time="2021-03-06 06:29:02Z" duration="0.474095" asserts="0">
                <properties />
              </test-case>
            </test-suite>
            <test-suite type="TestFixture" id="3628" name="WeaverSyncSetTests" fullname="Mirror.Weaver.Tests.WeaverSyncSetTests" classname="Mirror.Weaver.Tests.WeaverSyncSetTests" runstate="Runnable" testcasecount="6" result="Passed" start-time="2021-03-06 06:29:02Z" end-time="2021-03-06 06:29:05Z" duration="3.349148" total="6" passed="6" failed="0" inconclusive="0" skipped="0" asserts="0">
              <properties>
                <property name="Category" value="Weaver" />
              </properties>
              <test-case id="3629" name="SyncSet" fullname="Mirror.Weaver.Tests.WeaverSyncSetTests.SyncSet" methodname="SyncSet" classname="Mirror.Weaver.Tests.WeaverSyncSetTests" runstate="Runnable" seed="1697729998" result="Passed" start-time="2021-03-06 06:29:02Z" end-time="2021-03-06 06:29:02Z" duration="0.467358" asserts="0">
                <properties />
              </test-case>
              <test-case id="3630" name="SyncSetByteValid" fullname="Mirror.Weaver.Tests.WeaverSyncSetTests.SyncSetByteValid" methodname="SyncSetByteValid" classname="Mirror.Weaver.Tests.WeaverSyncSetTests" runstate="Runnable" seed="1806567990" result="Passed" start-time="2021-03-06 06:29:02Z" end-time="2021-03-06 06:29:03Z" duration="0.590145" asserts="0">
                <properties />
              </test-case>
              <test-case id="3631" name="SyncSetGenericAbstractInheritance" fullname="Mirror.Weaver.Tests.WeaverSyncSetTests.SyncSetGenericAbstractInheritance" methodname="SyncSetGenericAbstractInheritance" classname="Mirror.Weaver.Tests.WeaverSyncSetTests" runstate="Runnable" seed="942008455" result="Passed" start-time="2021-03-06 06:29:03Z" end-time="2021-03-06 06:29:03Z" duration="0.473887" asserts="0">
                <properties />
              </test-case>
              <test-case id="3632" name="SyncSetGenericInheritance" fullname="Mirror.Weaver.Tests.WeaverSyncSetTests.SyncSetGenericInheritance" methodname="SyncSetGenericInheritance" classname="Mirror.Weaver.Tests.WeaverSyncSetTests" runstate="Runnable" seed="1338048558" result="Passed" start-time="2021-03-06 06:29:03Z" end-time="2021-03-06 06:29:04Z" duration="0.470345" asserts="0">
                <properties />
              </test-case>
              <test-case id="3633" name="SyncSetInheritance" fullname="Mirror.Weaver.Tests.WeaverSyncSetTests.SyncSetInheritance" methodname="SyncSetInheritance" classname="Mirror.Weaver.Tests.WeaverSyncSetTests" runstate="Runnable" seed="1174629151" result="Passed" start-time="2021-03-06 06:29:04Z" end-time="2021-03-06 06:29:04Z" duration="0.594545" asserts="0">
                <properties />
              </test-case>
              <test-case id="3634" name="SyncSetStruct" fullname="Mirror.Weaver.Tests.WeaverSyncSetTests.SyncSetStruct" methodname="SyncSetStruct" classname="Mirror.Weaver.Tests.WeaverSyncSetTests" runstate="Runnable" seed="1170896466" result="Passed" start-time="2021-03-06 06:29:04Z" end-time="2021-03-06 06:29:05Z" duration="0.490085" asserts="0">
                <properties />
              </test-case>
            </test-suite>
            <test-suite type="TestFixture" id="3635" name="WeaverSyncVarHookTests" fullname="Mirror.Weaver.Tests.WeaverSyncVarHookTests" classname="Mirror.Weaver.Tests.WeaverSyncVarHookTests" runstate="Runnable" testcasecount="11" result="Passed" start-time="2021-03-06 06:29:05Z" end-time="2021-03-06 06:29:11Z" duration="6.207764" total="11" passed="11" failed="0" inconclusive="0" skipped="0" asserts="0">
              <properties>
                <property name="Category" value="Weaver" />
              </properties>
              <test-case id="3646" name="ErrorForWrongTypeNewParameter" fullname="Mirror.Weaver.Tests.WeaverSyncVarHookTests.ErrorForWrongTypeNewParameter" methodname="ErrorForWrongTypeNewParameter" classname="Mirror.Weaver.Tests.WeaverSyncVarHookTests" runstate="Runnable" seed="118228561" result="Passed" start-time="2021-03-06 06:29:05Z" end-time="2021-03-06 06:29:06Z" duration="0.483113" asserts="0">
                <properties />
                <output><![CDATA[Wrong type for Parameter in hook for 'health', hook name 'onChangeHealth'. Method signature should be void onChangeHealth(System.Int32 oldValue, System.Int32 newValue) (at System.Int32 WeaverSyncVarHookTests.ErrorForWrongTypeNewParameter.ErrorForWrongTypeNewParameter::health)
]]></output>
              </test-case>
              <test-case id="3645" name="ErrorForWrongTypeOldParameter" fullname="Mirror.Weaver.Tests.WeaverSyncVarHookTests.ErrorForWrongTypeOldParameter" methodname="ErrorForWrongTypeOldParameter" classname="Mirror.Weaver.Tests.WeaverSyncVarHookTests" runstate="Runnable" seed="2003844583" result="Passed" start-time="2021-03-06 06:29:06Z" end-time="2021-03-06 06:29:06Z" duration="0.634295" asserts="0">
                <properties />
                <output><![CDATA[Wrong type for Parameter in hook for 'health', hook name 'onChangeHealth'. Method signature should be void onChangeHealth(System.Int32 oldValue, System.Int32 newValue) (at System.Int32 WeaverSyncVarHookTests.ErrorForWrongTypeOldParameter.ErrorForWrongTypeOldParameter::health)
]]></output>
              </test-case>
              <test-case id="3643" name="ErrorWhenNoHookFound" fullname="Mirror.Weaver.Tests.WeaverSyncVarHookTests.ErrorWhenNoHookFound" methodname="ErrorWhenNoHookFound" classname="Mirror.Weaver.Tests.WeaverSyncVarHookTests" runstate="Runnable" seed="499188645" result="Passed" start-time="2021-03-06 06:29:06Z" end-time="2021-03-06 06:29:07Z" duration="0.508875" asserts="0">
                <properties />
                <output><![CDATA[Could not find hook for 'health', hook name 'onChangeHealth'. Method signature should be void onChangeHealth(System.Int32 oldValue, System.Int32 newValue) (at System.Int32 WeaverSyncVarHookTests.ErrorWhenNoHookFound.ErrorWhenNoHookFound::health)
]]></output>
              </test-case>
              <test-case id="3644" name="ErrorWhenNoHookWithCorrectParametersFound" fullname="Mirror.Weaver.Tests.WeaverSyncVarHookTests.ErrorWhenNoHookWithCorrectParametersFound" methodname="ErrorWhenNoHookWithCorrectParametersFound" classname="Mirror.Weaver.Tests.WeaverSyncVarHookTests" runstate="Runnable" seed="2050999336" result="Passed" start-time="2021-03-06 06:29:07Z" end-time="2021-03-06 06:29:07Z" duration="0.485828" asserts="0">
                <properties />
                <output><![CDATA[Could not find hook for 'health', hook name 'onChangeHealth'. Method signature should be void onChangeHealth(System.Int32 oldValue, System.Int32 newValue) (at System.Int32 WeaverSyncVarHookTests.ErrorWhenNoHookWithCorrectParametersFound.ErrorWhenNoHookWithCorrectParametersFound::health)
]]></output>
              </test-case>
              <test-case id="3639" name="FindsHookWithGameObjects" fullname="Mirror.Weaver.Tests.WeaverSyncVarHookTests.FindsHookWithGameObjects" methodname="FindsHookWithGameObjects" classname="Mirror.Weaver.Tests.WeaverSyncVarHookTests" runstate="Runnable" seed="1669089576" result="Passed" start-time="2021-03-06 06:29:07Z" end-time="2021-03-06 06:29:08Z" duration="0.637265" asserts="0">
                <properties />
              </test-case>
              <test-case id="3640" name="FindsHookWithNetworkIdentity" fullname="Mirror.Weaver.Tests.WeaverSyncVarHookTests.FindsHookWithNetworkIdentity" methodname="FindsHookWithNetworkIdentity" classname="Mirror.Weaver.Tests.WeaverSyncVarHookTests" runstate="Runnable" seed="81810872" result="Passed" start-time="2021-03-06 06:29:08Z" end-time="2021-03-06 06:29:08Z" duration="0.502139" asserts="0">
                <properties />
              </test-case>
              <test-case id="3641" name="FindsHookWithOtherOverloadsInOrder" fullname="Mirror.Weaver.Tests.WeaverSyncVarHookTests.FindsHookWithOtherOverloadsInOrder" methodname="FindsHookWithOtherOverloadsInOrder" classname="Mirror.Weaver.Tests.WeaverSyncVarHookTests" runstate="Runnable" seed="1880845139" result="Passed" start-time="2021-03-06 06:29:08Z" end-time="2021-03-06 06:29:09Z" duration="0.494526" asserts="0">
                <properties />
              </test-case>
              <test-case id="3642" name="FindsHookWithOtherOverloadsInReverseOrder" fullname="Mirror.Weaver.Tests.WeaverSyncVarHookTests.FindsHookWithOtherOverloadsInReverseOrder" methodname="FindsHookWithOtherOverloadsInReverseOrder" classname="Mirror.Weaver.Tests.WeaverSyncVarHookTests" runstate="Runnable" seed="203420527" result="Passed" start-time="2021-03-06 06:29:09Z" end-time="2021-03-06 06:29:10Z" duration="0.610110" asserts="0">
                <properties />
              </test-case>
              <test-case id="3636" name="FindsPrivateHook" fullname="Mirror.Weaver.Tests.WeaverSyncVarHookTests.FindsPrivateHook" methodname="FindsPrivateHook" classname="Mirror.Weaver.Tests.WeaverSyncVarHookTests" runstate="Runnable" seed="1206484441" result="Passed" start-time="2021-03-06 06:29:10Z" end-time="2021-03-06 06:29:10Z" duration="0.482744" asserts="0">
                <properties />
              </test-case>
              <test-case id="3637" name="FindsPublicHook" fullname="Mirror.Weaver.Tests.WeaverSyncVarHookTests.FindsPublicHook" methodname="FindsPublicHook" classname="Mirror.Weaver.Tests.WeaverSyncVarHookTests" runstate="Runnable" seed="590866955" result="Passed" start-time="2021-03-06 06:29:10Z" end-time="2021-03-06 06:29:11Z" duration="0.486038" asserts="0">
                <properties />
              </test-case>
              <test-case id="3638" name="FindsStaticHook" fullname="Mirror.Weaver.Tests.WeaverSyncVarHookTests.FindsStaticHook" methodname="FindsStaticHook" classname="Mirror.Weaver.Tests.WeaverSyncVarHookTests" runstate="Runnable" seed="543123646" result="Passed" start-time="2021-03-06 06:29:11Z" end-time="2021-03-06 06:29:11Z" duration="0.597784" asserts="0">
                <properties />
              </test-case>
            </test-suite>
            <test-suite type="TestFixture" id="3647" name="WeaverSyncVarTests" fullname="Mirror.Weaver.Tests.WeaverSyncVarTests" classname="Mirror.Weaver.Tests.WeaverSyncVarTests" runstate="Runnable" testcasecount="9" result="Passed" start-time="2021-03-06 06:29:11Z" end-time="2021-03-06 06:29:16Z" duration="5.226207" total="9" passed="9" failed="0" inconclusive="0" skipped="0" asserts="0">
              <properties>
                <property name="Category" value="Weaver" />
              </properties>
              <test-case id="3654" name="SyncVarsCantBeArray" fullname="Mirror.Weaver.Tests.WeaverSyncVarTests.SyncVarsCantBeArray" methodname="SyncVarsCantBeArray" classname="Mirror.Weaver.Tests.WeaverSyncVarTests" runstate="Runnable" seed="946478201" result="Passed" start-time="2021-03-06 06:29:11Z" end-time="2021-03-06 06:29:12Z" duration="0.493096" asserts="0">
                <properties />
                <output><![CDATA[thisShouldntWork has invalid type. Use SyncLists instead of arrays (at System.Int32[] WeaverSyncVarTests.SyncVarsCantBeArray.SyncVarsCantBeArray::thisShouldntWork)
]]></output>
              </test-case>
              <test-case id="3649" name="SyncVarsDerivedNetworkBehaviour" fullname="Mirror.Weaver.Tests.WeaverSyncVarTests.SyncVarsDerivedNetworkBehaviour" methodname="SyncVarsDerivedNetworkBehaviour" classname="Mirror.Weaver.Tests.WeaverSyncVarTests" runstate="Runnable" seed="1114868730" result="Passed" start-time="2021-03-06 06:29:12Z" end-time="2021-03-06 06:29:12Z" duration="0.485298" asserts="0">
                <properties />
              </test-case>
              <test-case id="3651" name="SyncVarsGenericParam" fullname="Mirror.Weaver.Tests.WeaverSyncVarTests.SyncVarsGenericParam" methodname="SyncVarsGenericParam" classname="Mirror.Weaver.Tests.WeaverSyncVarTests" runstate="Runnable" seed="298307789" result="Passed" start-time="2021-03-06 06:29:12Z" end-time="2021-03-06 06:29:13Z" duration="0.618310" asserts="0">
                <properties />
                <output><![CDATA[Cannot generate writer for generic type MySyncVar`1. Use a supported type or provide a custom writer (at WeaverSyncVarTests.SyncVarsGenericParam.SyncVarsGenericParam/MySyncVar`1<System.Int32>)
invalidVar has unsupported type. Use a supported Mirror type instead (at WeaverSyncVarTests.SyncVarsGenericParam.SyncVarsGenericParam/MySyncVar`1<System.Int32> WeaverSyncVarTests.SyncVarsGenericParam.SyncVarsGenericParam::invalidVar)
]]></output>
              </test-case>
              <test-case id="3652" name="SyncVarsInterface" fullname="Mirror.Weaver.Tests.WeaverSyncVarTests.SyncVarsInterface" methodname="SyncVarsInterface" classname="Mirror.Weaver.Tests.WeaverSyncVarTests" runstate="Runnable" seed="1678881097" result="Passed" start-time="2021-03-06 06:29:13Z" end-time="2021-03-06 06:29:13Z" duration="0.508910" asserts="0">
                <properties />
                <output><![CDATA[Cannot generate writer for interface IMySyncVar. Use a supported type or provide a custom writer (at WeaverSyncVarTests.SyncVarsInterface.SyncVarsInterface/IMySyncVar)
invalidVar has unsupported type. Use a supported Mirror type instead (at WeaverSyncVarTests.SyncVarsInterface.SyncVarsInterface/IMySyncVar WeaverSyncVarTests.SyncVarsInterface.SyncVarsInterface::invalidVar)
]]></output>
              </test-case>
              <test-case id="3656" name="SyncVarsMoreThan63" fullname="Mirror.Weaver.Tests.WeaverSyncVarTests.SyncVarsMoreThan63" methodname="SyncVarsMoreThan63" classname="Mirror.Weaver.Tests.WeaverSyncVarTests" runstate="Runnable" seed="99463165" result="Passed" start-time="2021-03-06 06:29:13Z" end-time="2021-03-06 06:29:14Z" duration="0.541178" asserts="0">
                <properties />
                <output><![CDATA[SyncVarsMoreThan63 has too many SyncVars. Consider refactoring your class into multiple components (at WeaverSyncVarTests.SyncVarsMoreThan63.SyncVarsMoreThan63)
]]></output>
              </test-case>
              <test-case id="3650" name="SyncVarsStatic" fullname="Mirror.Weaver.Tests.WeaverSyncVarTests.SyncVarsStatic" methodname="SyncVarsStatic" classname="Mirror.Weaver.Tests.WeaverSyncVarTests" runstate="Runnable" seed="1994028560" result="Passed" start-time="2021-03-06 06:29:14Z" end-time="2021-03-06 06:29:15Z" duration="0.605933" asserts="0">
                <properties />
                <output><![CDATA[invalidVar cannot be static (at System.Int32 WeaverSyncVarTests.SyncVarsStatic.SyncVarsStatic::invalidVar)
]]></output>
              </test-case>
              <test-case id="3655" name="SyncVarsSyncList" fullname="Mirror.Weaver.Tests.WeaverSyncVarTests.SyncVarsSyncList" methodname="SyncVarsSyncList" classname="Mirror.Weaver.Tests.WeaverSyncVarTests" runstate="Runnable" seed="119407695" result="Passed" start-time="2021-03-06 06:29:15Z" end-time="2021-03-06 06:29:15Z" duration="0.492691" asserts="0">
                <properties />
                <output><![CDATA[syncobj has [SyncVar] attribute. SyncLists should not be marked with SyncVar (at WeaverSyncVarTests.SyncVarsSyncList.SyncVarsSyncList/SyncObjImplementer WeaverSyncVarTests.SyncVarsSyncList.SyncVarsSyncList::syncobj)
syncints has [SyncVar] attribute. SyncLists should not be marked with SyncVar (at Mirror.SyncListInt WeaverSyncVarTests.SyncVarsSyncList.SyncVarsSyncList::syncints)
]]></output>
              </test-case>
              <test-case id="3653" name="SyncVarsUnityComponent" fullname="Mirror.Weaver.Tests.WeaverSyncVarTests.SyncVarsUnityComponent" methodname="SyncVarsUnityComponent" classname="Mirror.Weaver.Tests.WeaverSyncVarTests" runstate="Runnable" seed="715088932" result="Passed" start-time="2021-03-06 06:29:15Z" end-time="2021-03-06 06:29:16Z" duration="0.489986" asserts="0">
                <properties />
                <output><![CDATA[Cannot generate writer for component type TextMesh. Use a supported type or provide a custom writer (at UnityEngine.TextMesh)
invalidVar has unsupported type. Use a supported Mirror type instead (at UnityEngine.TextMesh WeaverSyncVarTests.SyncVarsUnityComponent.SyncVarsUnityComponent::invalidVar)
]]></output>
              </test-case>
              <test-case id="3648" name="SyncVarsValid" fullname="Mirror.Weaver.Tests.WeaverSyncVarTests.SyncVarsValid" methodname="SyncVarsValid" classname="Mirror.Weaver.Tests.WeaverSyncVarTests" runstate="Runnable" seed="1245162267" result="Passed" start-time="2021-03-06 06:29:16Z" end-time="2021-03-06 06:29:16Z" duration="0.709821" asserts="0">
                <properties />
              </test-case>
            </test-suite>
            <test-suite type="TestFixture" id="3657" name="WeaverTargetRpcTests" fullname="Mirror.Weaver.Tests.WeaverTargetRpcTests" classname="Mirror.Weaver.Tests.WeaverTargetRpcTests" runstate="Runnable" testcasecount="9" result="Passed" start-time="2021-03-06 06:29:16Z" end-time="2021-03-06 06:29:21Z" duration="4.860875" total="9" passed="9" failed="0" inconclusive="0" skipped="0" asserts="0">
              <properties>
                <property name="Category" value="Weaver" />
              </properties>
              <test-case id="3665" name="AbstractTargetRpc" fullname="Mirror.Weaver.Tests.WeaverTargetRpcTests.AbstractTargetRpc" methodname="AbstractTargetRpc" classname="Mirror.Weaver.Tests.WeaverTargetRpcTests" runstate="Runnable" seed="583651970" result="Passed" start-time="2021-03-06 06:29:17Z" end-time="2021-03-06 06:29:17Z" duration="0.475280" asserts="0">
                <properties />
                <output><![CDATA[Abstract TargetRpc are currently not supported, use virtual method instead (at System.Void WeaverTargetRpcTests.AbstractTargetRpc.AbstractTargetRpc::TargetDoSomething())
]]></output>
              </test-case>
              <test-case id="3662" name="ErrorWhenNetworkConnectionIsNotTheFirstParameter" fullname="Mirror.Weaver.Tests.WeaverTargetRpcTests.ErrorWhenNetworkConnectionIsNotTheFirstParameter" methodname="ErrorWhenNetworkConnectionIsNotTheFirstParameter" classname="Mirror.Weaver.Tests.WeaverTargetRpcTests" runstate="Runnable" seed="1765267799" result="Passed" start-time="2021-03-06 06:29:17Z" end-time="2021-03-06 06:29:18Z" duration="0.493931" asserts="0">
                <properties />
                <output><![CDATA[TargetRpcMethod has invalid parameter nc. Cannot pass NetworkConnections (at System.Void WeaverTargetRpcTests.ErrorWhenNetworkConnectionIsNotTheFirstParameter.ErrorWhenNetworkConnectionIsNotTheFirstParameter::TargetRpcMethod(System.Int32,Mirror.NetworkConnection))
]]></output>
              </test-case>
              <test-case id="3659" name="ErrorWhenTargetRpcIsStatic" fullname="Mirror.Weaver.Tests.WeaverTargetRpcTests.ErrorWhenTargetRpcIsStatic" methodname="ErrorWhenTargetRpcIsStatic" classname="Mirror.Weaver.Tests.WeaverTargetRpcTests" runstate="Runnable" seed="1485349658" result="Passed" start-time="2021-03-06 06:29:18Z" end-time="2021-03-06 06:29:18Z" duration="0.616661" asserts="0">
                <properties />
                <output><![CDATA[TargetCantBeStatic must not be static (at System.Void WeaverTargetRpcTests.ErrorWhenTargetRpcIsStatic.ErrorWhenTargetRpcIsStatic::TargetCantBeStatic(Mirror.NetworkConnection))
]]></output>
              </test-case>
              <test-case id="3666" name="OverrideAbstractTargetRpc" fullname="Mirror.Weaver.Tests.WeaverTargetRpcTests.OverrideAbstractTargetRpc" methodname="OverrideAbstractTargetRpc" classname="Mirror.Weaver.Tests.WeaverTargetRpcTests" runstate="Runnable" seed="358582380" result="Passed" start-time="2021-03-06 06:29:18Z" end-time="2021-03-06 06:29:19Z" duration="0.481535" asserts="0">
                <properties />
                <output><![CDATA[Abstract TargetRpc are currently not supported, use virtual method instead (at System.Void WeaverTargetRpcTests.OverrideAbstractTargetRpc.BaseBehaviour::TargetDoSomething())
]]></output>
              </test-case>
              <test-case id="3664" name="OverrideVirtualTargetRpc" fullname="Mirror.Weaver.Tests.WeaverTargetRpcTests.OverrideVirtualTargetRpc" methodname="OverrideVirtualTargetRpc" classname="Mirror.Weaver.Tests.WeaverTargetRpcTests" runstate="Runnable" seed="129585117" result="Passed" start-time="2021-03-06 06:29:19Z" end-time="2021-03-06 06:29:19Z" duration="0.478098" asserts="0">
                <properties />
              </test-case>
              <test-case id="3661" name="TargetRpcCanHaveOtherParametersWhileSkipingNetworkConnection" fullname="Mirror.Weaver.Tests.WeaverTargetRpcTests.TargetRpcCanHaveOtherParametersWhileSkipingNetworkConnection" methodname="TargetRpcCanHaveOtherParametersWhileSkipingNetworkConnection" classname="Mirror.Weaver.Tests.WeaverTargetRpcTests" runstate="Runnable" seed="735394160" result="Passed" start-time="2021-03-06 06:29:19Z" end-time="2021-03-06 06:29:20Z" duration="0.597772" asserts="0">
                <properties />
              </test-case>
              <test-case id="3660" name="TargetRpcCanSkipNetworkConnection" fullname="Mirror.Weaver.Tests.WeaverTargetRpcTests.TargetRpcCanSkipNetworkConnection" methodname="TargetRpcCanSkipNetworkConnection" classname="Mirror.Weaver.Tests.WeaverTargetRpcTests" runstate="Runnable" seed="662404286" result="Passed" start-time="2021-03-06 06:29:20Z" end-time="2021-03-06 06:29:20Z" duration="0.485878" asserts="0">
                <properties />
              </test-case>
              <test-case id="3658" name="TargetRpcValid" fullname="Mirror.Weaver.Tests.WeaverTargetRpcTests.TargetRpcValid" methodname="TargetRpcValid" classname="Mirror.Weaver.Tests.WeaverTargetRpcTests" runstate="Runnable" seed="1619550382" result="Passed" start-time="2021-03-06 06:29:20Z" end-time="2021-03-06 06:29:21Z" duration="0.470249" asserts="0">
                <properties />
              </test-case>
              <test-case id="3663" name="VirtualTargetRpc" fullname="Mirror.Weaver.Tests.WeaverTargetRpcTests.VirtualTargetRpc" methodname="VirtualTargetRpc" classname="Mirror.Weaver.Tests.WeaverTargetRpcTests" runstate="Runnable" seed="1778567612" result="Passed" start-time="2021-03-06 06:29:21Z" end-time="2021-03-06 06:29:21Z" duration="0.466501" asserts="0">
                <properties />
              </test-case>
            </test-suite>
          </test-suite>
        </test-suite>
      </test-suite>
    </test-suite>
  </test-suite>
</test-run>